{
  "version": 3,
  "sources": ["../bundle-TgVJqC/checked-fetch.js", "../bundle-TgVJqC/strip-cf-connecting-ip-header.js", "wrangler-modules-watch:wrangler:modules-watch", "../../../node_modules/wrangler/templates/modules-watch-stub.js", "../../../src/utils/ai.ts", "../../../src/get-broadcaster-id.ts", "../../../src/services/twitch.ts", "../../../node_modules/fast-content-type-parse/index.js", "../bundle-TgVJqC/middleware-loader.entry.ts", "../bundle-TgVJqC/middleware-insertion-facade.js", "../../../src/index.ts", "../../../src/utils/validation.ts", "../../../src/services/scheduler.ts", "../../../src/services/content.ts", "../../../src/utils/jwt.ts", "../../../src/services/discord.ts", "../../../src/services/webhooks.ts", "../../../src/routes/github.ts", "../../../src/services/github.ts", "../../../node_modules/@octokit/rest/dist-src/index.js", "../../../node_modules/@octokit/core/dist-src/index.js", "../../../node_modules/universal-user-agent/index.js", "../../../node_modules/before-after-hook/index.js", "../../../node_modules/before-after-hook/lib/register.js", "../../../node_modules/before-after-hook/lib/add.js", "../../../node_modules/before-after-hook/lib/remove.js", "../../../node_modules/@octokit/request/dist-bundle/index.js", "../../../node_modules/@octokit/endpoint/dist-bundle/index.js", "../../../node_modules/@octokit/request-error/dist-src/index.js", "../../../node_modules/@octokit/graphql/dist-bundle/index.js", "../../../node_modules/@octokit/auth-token/dist-bundle/index.js", "../../../node_modules/@octokit/core/dist-src/version.js", "../../../node_modules/@octokit/plugin-request-log/dist-src/index.js", "../../../node_modules/@octokit/plugin-request-log/dist-src/version.js", "../../../node_modules/@octokit/plugin-paginate-rest/dist-bundle/index.js", "../../../node_modules/@octokit/src/index.ts", "../../../node_modules/@octokit/src/version.ts", "../../../node_modules/@octokit/src/endpoints-to-methods.ts", "../../../node_modules/@octokit/src/generated/endpoints.ts", "../../../node_modules/@octokit/rest/dist-src/version.js", "../../../src/config/repos.json", "../../../node_modules/wrangler/templates/middleware/middleware-ensure-req-body-drained.ts", "../../../node_modules/wrangler/templates/middleware/middleware-miniflare3-json-error.ts", "../../../node_modules/wrangler/templates/middleware/common.ts"],
  "sourceRoot": "/Users/paulchrisluke/Repos/pcl-labs/clip-recap-pipeline/.wrangler/tmp/dev-aKi39q",
  "sourcesContent": ["const urls = new Set();\n\nfunction checkURL(request, init) {\n\tconst url =\n\t\trequest instanceof URL\n\t\t\t? request\n\t\t\t: new URL(\n\t\t\t\t\t(typeof request === \"string\"\n\t\t\t\t\t\t? new Request(request, init)\n\t\t\t\t\t\t: request\n\t\t\t\t\t).url\n\t\t\t\t);\n\tif (url.port && url.port !== \"443\" && url.protocol === \"https:\") {\n\t\tif (!urls.has(url.toString())) {\n\t\t\turls.add(url.toString());\n\t\t\tconsole.warn(\n\t\t\t\t`WARNING: known issue with \\`fetch()\\` requests to custom HTTPS ports in published Workers:\\n` +\n\t\t\t\t\t` - ${url.toString()} - the custom port will be ignored when the Worker is published using the \\`wrangler deploy\\` command.\\n`\n\t\t\t);\n\t\t}\n\t}\n}\n\nglobalThis.fetch = new Proxy(globalThis.fetch, {\n\tapply(target, thisArg, argArray) {\n\t\tconst [request, init] = argArray;\n\t\tcheckURL(request, init);\n\t\treturn Reflect.apply(target, thisArg, argArray);\n\t},\n});\n", "function stripCfConnectingIPHeader(input, init) {\n\tconst request = new Request(input, init);\n\trequest.headers.delete(\"CF-Connecting-IP\");\n\treturn request;\n}\n\nglobalThis.fetch = new Proxy(globalThis.fetch, {\n\tapply(target, thisArg, argArray) {\n\t\treturn Reflect.apply(target, thisArg, [\n\t\t\tstripCfConnectingIPHeader.apply(null, argArray),\n\t\t]);\n\t},\n});\n", "", "// `esbuild` doesn't support returning `watch*` options from `onStart()`\n// plugin callbacks. Instead, we define an empty virtual module that is\n// imported by this injected file. Importing the module registers watchers.\nimport \"wrangler:modules-watch\";\n", "import { Environment } from '../types/index.js';\n\nexport interface AIRetryOptions {\n  timeout?: number;\n  retries?: number;\n}\n\nexport class AIService {\n  constructor(private env: Environment) {}\n\n  async callWithRetry(\n    model: string, \n    params: any, \n    options: AIRetryOptions = {}\n  ): Promise<any> {\n    const retries = Math.max(0, Math.floor(options?.retries ?? 2));\n    const timeout = Math.max(1, Math.floor(options?.timeout ?? 30_000));\n    for (let i = 0; i <= retries; i++) {\n      const controller = new AbortController();\n      const timeoutId = setTimeout(() => controller.abort(), timeout);\n      try {\n        const result = await this.env.ai.run(model, params, { signal: controller.signal });\n        return result;\n      } catch (error) {\n        if (i === retries) throw error;\n        console.warn(`AI call failed, retrying... (${i + 1}/${retries})`);\n        const backoffMs = 1000 * Math.pow(2, i); // 1s, 2s, 4s, ...\n        await new Promise(resolve => setTimeout(resolve, backoffMs));\n      } finally {\n        clearTimeout(timeoutId);\n      }\n    }\n  }\n}\n", "import { Environment, TwitchTokenResponse } from './types/index.js';\n\nexport async function getBroadcasterId(env: Environment): Promise<string> {\n  // Step 0: Check if broadcaster ID is already provided\n  if (env.TWITCH_BROADCASTER_ID) {\n    console.log('\uD83D\uDD11 Using provided TWITCH_BROADCASTER_ID');\n    return env.TWITCH_BROADCASTER_ID;\n  }\n\n  // Step 0.5: Validate that login is provided\n  if (!env.TWITCH_BROADCASTER_LOGIN) {\n    throw new Error('TWITCH_BROADCASTER_LOGIN environment variable is required when TWITCH_BROADCASTER_ID is not provided');\n  }\n\n  try {\n    console.log('\uD83D\uDD11 Getting Twitch access token...');\n    // Credentials present; avoid logging their values or metadata.\n    \n    // Step 1: Get access token\n    const tokenBody = new URLSearchParams({\n      client_id: env.TWITCH_CLIENT_ID,\n      client_secret: env.TWITCH_CLIENT_SECRET,\n      grant_type: 'client_credentials',\n    });\n    \n    const tokenResponse = await fetch('https://id.twitch.tv/oauth2/token', {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/x-www-form-urlencoded' },\n      body: tokenBody,\n    });\n\n    if (!tokenResponse.ok) {\n      const errorText = await tokenResponse.text();\n      console.error('Token response error:', errorText);\n      throw new Error(`Token request failed: ${tokenResponse.statusText} - ${errorText}`);\n    }\n\n    const tokenData = await tokenResponse.json() as TwitchTokenResponse;\n\n    // Step 2: Get user ID by username\n    const userResponse = await fetch(\n      `https://api.twitch.tv/helix/users?login=${env.TWITCH_BROADCASTER_LOGIN}`,\n      {\n        headers: {\n          'Client-ID': env.TWITCH_CLIENT_ID,\n          'Authorization': `Bearer ${tokenData.access_token}`,\n        },\n      }\n    );\n\n    if (!userResponse.ok) {\n      throw new Error(`User lookup failed: ${userResponse.statusText}`);\n    }\n\n    const userData = await userResponse.json() as { data: Array<{ id: string }> };\n    \n    if (userData.data?.length > 0) {\n      return userData.data[0].id;\n    } else {\n      throw new Error(`User ${env.TWITCH_BROADCASTER_LOGIN} not found`);\n    }\n\n  } catch (error) {\n    console.error('Error getting broadcaster ID:', error);\n    throw error;\n  }\n}\n", "import { Environment, TwitchClip, TwitchTokenResponse, Transcript } from '../types/index.js';\nimport { AIService } from '../utils/ai.js';\nimport { getBroadcasterId } from '../get-broadcaster-id.js';\n\nexport class TwitchService {\n  private aiService: AIService;\n  private tokenCache: { token: string; expiresAt: number } | null = null;\n\n  constructor(private env: Environment) {\n    this.aiService = new AIService(env);\n  }\n\n  private async getAccessToken(): Promise<{ token: string; expiresAt: number }> {\n    const response = await fetch('https://id.twitch.tv/oauth2/token', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/x-www-form-urlencoded',\n      },\n      body: new URLSearchParams({\n        client_id: this.env.TWITCH_CLIENT_ID,\n        client_secret: this.env.TWITCH_CLIENT_SECRET,\n        grant_type: 'client_credentials',\n      }),\n    });\n\n    if (!response.ok) {\n      throw new Error(`Failed to get Twitch token: ${response.statusText}`);\n    }\n\n    const data: TwitchTokenResponse = await response.json();\n    const now = Date.now();\n    return { token: data.access_token, expiresAt: now + (data.expires_in * 1000) };\n  }\n\n  async validateToken(token: string): Promise<boolean> {\n    try {\n      const response = await fetch('https://id.twitch.tv/oauth2/validate', {\n        headers: {\n          'Authorization': `Bearer ${token}`,\n        },\n      });\n\n      if (response.ok) {\n        const data = await response.json() as { expires_in: number };\n        console.log(`Token validation successful. Expires in: ${data.expires_in} seconds`);\n        return true;\n      } else {\n        console.error(`Token validation failed: ${response.status} ${response.statusText}`);\n        return false;\n      }\n    } catch (error) {\n      console.error('Token validation error:', error);\n      return false;\n    }\n  }\n\n  async getValidatedToken(): Promise<string> {\n    const skewMs = 60_000; // 60s safety buffer\n    if (this.tokenCache && (this.tokenCache.expiresAt - Date.now()) > skewMs) {\n      return this.tokenCache.token;\n    }\n    const { token, expiresAt } = await this.getAccessToken();\n    // Validate only on fresh grants (helps diagnostics, avoids validating on every call)\n    const isValid = await this.validateToken(token);\n    if (!isValid) throw new Error('Twitch token validation failed');\n    this.tokenCache = { token, expiresAt };\n    return token;\n  }\n\n  async getRecentClips(): Promise<TwitchClip[]> {\n    const token = await this.getValidatedToken();\n    \n    // Get broadcaster ID using the new function\n    const broadcasterId = await getBroadcasterId(this.env);\n    \n    // Get clips from last 24 hours\n    const now = new Date();\n    const yesterday = new Date(now.getTime() - 24 * 60 * 60 * 1000);\n    \n    const response = await fetch(\n      `https://api.twitch.tv/helix/clips?broadcaster_id=${broadcasterId}&started_at=${yesterday.toISOString()}&ended_at=${now.toISOString()}&first=100`,\n      {\n        headers: {\n          'Client-ID': this.env.TWITCH_CLIENT_ID,\n          'Authorization': `Bearer ${token}`,\n        },\n      }\n    );\n\n    if (!response.ok) {\n      throw new Error(`Failed to fetch clips: ${response.statusText}`);\n    }\n\n    const data = await response.json() as { data: TwitchClip[] };\n    return data.data || [];\n  }\n\n  async transcribeClips(clips: TwitchClip[]): Promise<Transcript[]> {\n    const transcripts: Transcript[] = [];\n\n    for (const clip of clips) {\n      try {\n        console.log(`Transcribing clip: ${clip.id}`);\n        \n        // Download the clip audio\n        const audioBuffer = await this.downloadClipAudio(clip.url);\n        \n        // Transcribe using Workers AI Whisper\n        const transcript = await this.transcribeAudio(audioBuffer, clip.id);\n        \n        // Store transcript in R2\n        await this.storeTranscript(clip.id, transcript);\n        \n        transcripts.push(transcript);\n        \n        console.log(`Successfully transcribed clip: ${clip.id}`);\n      } catch (error) {\n        console.error(`Failed to transcribe clip ${clip.id}:`, error);\n        // Continue with other clips\n      }\n    }\n\n    return transcripts;\n  }\n\n  private async downloadClipAudio(clipUrl: string): Promise<ArrayBuffer> {\n    try {\n      console.log(`Downloading clip audio from: ${clipUrl}`);\n      \n      // For Twitch clips, we need to get the actual video URL\n      // The clip URL format is: https://www.twitch.tv/username/clip/clipId\n      // We need to extract the clip ID and get the actual video URL\n      \n      const clipId = this.extractClipId(clipUrl);\n      if (!clipId) {\n        throw new Error('Could not extract clip ID from URL');\n      }\n      \n      // Get the clip info to find the video URL\n      const token = await this.getValidatedToken();\n      const clipResponse = await fetch(\n        `https://api.twitch.tv/helix/clips?id=${clipId}`,\n        {\n          headers: {\n            'Client-ID': this.env.TWITCH_CLIENT_ID,\n            'Authorization': `Bearer ${token}`,\n          },\n        }\n      );\n\n      if (!clipResponse.ok) {\n        throw new Error(`Failed to get clip info: ${clipResponse.statusText}`);\n      }\n\n      const clipData = await clipResponse.json() as { data?: TwitchClip[] };\n      const clip = clipData.data?.[0];\n      \n      if (!clip) {\n        throw new Error('Clip not found');\n      }\n\n      // TODO: Implement actual audio download from Twitch clips\n      // Current implementation returns a placeholder buffer for testing purposes\n      // For now, we'll use a placeholder approach since direct video downloading\n      // from Twitch requires additional authentication and may violate ToS\n      // In a production environment, you might want to:\n      // 1. Use a service like yt-dlp with proper authentication\n      // 2. Use Twitch's official APIs if available\n      // 3. Implement a different approach for audio extraction\n      \n      console.log(`Clip found: ${clip.title} (${clip.duration}s)`);\n      \n      // For now, return a placeholder buffer - in production you'd download the actual audio\n      // This allows the pipeline to continue testing other components\n      const placeholderBuffer = new ArrayBuffer(1024); // 1KB placeholder\n      \n      console.log(`Returning placeholder audio buffer for clip: ${clipId}`);\n      return placeholderBuffer;\n    } catch (error) {\n      console.error(`Failed to download clip audio: ${error}`);\n      throw error;\n    }\n  }\n\n  private extractClipId(clipUrl: string): string | null {\n    // Extract clip ID from various Twitch clip URL formats\n    const patterns = [\n      /\\/clip\\/([a-zA-Z0-9_-]+)/,  // Standard clip URL\n      /clips\\.twitch\\.tv\\/([a-zA-Z0-9_-]+)/,  // Direct clips URL\n    ];\n    \n    for (const pattern of patterns) {\n      const match = clipUrl.match(pattern);\n      if (match) {\n        return match[1];\n      }\n    }\n    \n    return null;\n  }\n\n  private async transcribeAudio(audioBuffer: ArrayBuffer, clipId: string): Promise<Transcript> {\n    try {\n      // Use Workers AI Whisper for transcription\n      const result = await this.aiService.callWithRetry('@cf/openai/whisper-large-v3-turbo', {\n        audio: audioBuffer,\n      });\n\n      // Validate that result is non-null\n      if (!result) {\n        throw new Error('AI service returned null or undefined result');\n      }\n\n      // Validate that result.segments is an array, fallback to empty array if missing\n      const segments = Array.isArray(result.segments) ? result.segments : [];\n\n      // Extract language from result, fallback to 'en'\n      const lang = result.language || 'en';\n\n      return {\n        clip_id: clipId,\n        lang,\n        segments,\n      };\n    } catch (error) {\n      console.error(`Transcription failed for clip ${clipId} using Whisper service:`, error);\n      \n      // Return a controlled failure transcript object with predictable shape\n      return {\n        clip_id: clipId,\n        lang: 'en',\n        segments: [],\n      };\n    }\n  }\n\n  private async storeTranscript(clipId: string, transcript: Transcript): Promise<void> {\n    const key = `transcripts/${clipId}.json`;\n    await this.env.R2_BUCKET.put(key, JSON.stringify(transcript), {\n      httpMetadata: {\n        contentType: 'application/json',\n      },\n    });\n  }\n}\n", "'use strict'\n\nconst NullObject = function NullObject () { }\nNullObject.prototype = Object.create(null)\n\n/**\n * RegExp to match *( \";\" parameter ) in RFC 7231 sec 3.1.1.1\n *\n * parameter     = token \"=\" ( token / quoted-string )\n * token         = 1*tchar\n * tchar         = \"!\" / \"#\" / \"$\" / \"%\" / \"&\" / \"'\" / \"*\"\n *               / \"+\" / \"-\" / \".\" / \"^\" / \"_\" / \"`\" / \"|\" / \"~\"\n *               / DIGIT / ALPHA\n *               ; any VCHAR, except delimiters\n * quoted-string = DQUOTE *( qdtext / quoted-pair ) DQUOTE\n * qdtext        = HTAB / SP / %x21 / %x23-5B / %x5D-7E / obs-text\n * obs-text      = %x80-FF\n * quoted-pair   = \"\\\" ( HTAB / SP / VCHAR / obs-text )\n */\nconst paramRE = /; *([!#$%&'*+.^\\w`|~-]+)=(\"(?:[\\v\\u0020\\u0021\\u0023-\\u005b\\u005d-\\u007e\\u0080-\\u00ff]|\\\\[\\v\\u0020-\\u00ff])*\"|[!#$%&'*+.^\\w`|~-]+) */gu\n\n/**\n * RegExp to match quoted-pair in RFC 7230 sec 3.2.6\n *\n * quoted-pair = \"\\\" ( HTAB / SP / VCHAR / obs-text )\n * obs-text    = %x80-FF\n */\nconst quotedPairRE = /\\\\([\\v\\u0020-\\u00ff])/gu\n\n/**\n * RegExp to match type in RFC 7231 sec 3.1.1.1\n *\n * media-type = type \"/\" subtype\n * type       = token\n * subtype    = token\n */\nconst mediaTypeRE = /^[!#$%&'*+.^\\w|~-]+\\/[!#$%&'*+.^\\w|~-]+$/u\n\n// default ContentType to prevent repeated object creation\nconst defaultContentType = { type: '', parameters: new NullObject() }\nObject.freeze(defaultContentType.parameters)\nObject.freeze(defaultContentType)\n\n/**\n * Parse media type to object.\n *\n * @param {string|object} header\n * @return {Object}\n * @public\n */\n\nfunction parse (header) {\n  if (typeof header !== 'string') {\n    throw new TypeError('argument header is required and must be a string')\n  }\n\n  let index = header.indexOf(';')\n  const type = index !== -1\n    ? header.slice(0, index).trim()\n    : header.trim()\n\n  if (mediaTypeRE.test(type) === false) {\n    throw new TypeError('invalid media type')\n  }\n\n  const result = {\n    type: type.toLowerCase(),\n    parameters: new NullObject()\n  }\n\n  // parse parameters\n  if (index === -1) {\n    return result\n  }\n\n  let key\n  let match\n  let value\n\n  paramRE.lastIndex = index\n\n  while ((match = paramRE.exec(header))) {\n    if (match.index !== index) {\n      throw new TypeError('invalid parameter format')\n    }\n\n    index += match[0].length\n    key = match[1].toLowerCase()\n    value = match[2]\n\n    if (value[0] === '\"') {\n      // remove quotes and escapes\n      value = value\n        .slice(1, value.length - 1)\n\n      quotedPairRE.test(value) && (value = value.replace(quotedPairRE, '$1'))\n    }\n\n    result.parameters[key] = value\n  }\n\n  if (index !== header.length) {\n    throw new TypeError('invalid parameter format')\n  }\n\n  return result\n}\n\nfunction safeParse (header) {\n  if (typeof header !== 'string') {\n    return defaultContentType\n  }\n\n  let index = header.indexOf(';')\n  const type = index !== -1\n    ? header.slice(0, index).trim()\n    : header.trim()\n\n  if (mediaTypeRE.test(type) === false) {\n    return defaultContentType\n  }\n\n  const result = {\n    type: type.toLowerCase(),\n    parameters: new NullObject()\n  }\n\n  // parse parameters\n  if (index === -1) {\n    return result\n  }\n\n  let key\n  let match\n  let value\n\n  paramRE.lastIndex = index\n\n  while ((match = paramRE.exec(header))) {\n    if (match.index !== index) {\n      return defaultContentType\n    }\n\n    index += match[0].length\n    key = match[1].toLowerCase()\n    value = match[2]\n\n    if (value[0] === '\"') {\n      // remove quotes and escapes\n      value = value\n        .slice(1, value.length - 1)\n\n      quotedPairRE.test(value) && (value = value.replace(quotedPairRE, '$1'))\n    }\n\n    result.parameters[key] = value\n  }\n\n  if (index !== header.length) {\n    return defaultContentType\n  }\n\n  return result\n}\n\nmodule.exports.default = { parse, safeParse }\nmodule.exports.parse = parse\nmodule.exports.safeParse = safeParse\nmodule.exports.defaultContentType = defaultContentType\n", "// This loads all middlewares exposed on the middleware object and then starts\n// the invocation chain. The big idea is that we can add these to the middleware\n// export dynamically through wrangler, or we can potentially let users directly\n// add them as a sort of \"plugin\" system.\n\nimport ENTRY, { __INTERNAL_WRANGLER_MIDDLEWARE__ } from \"/Users/paulchrisluke/Repos/pcl-labs/clip-recap-pipeline/.wrangler/tmp/bundle-TgVJqC/middleware-insertion-facade.js\";\nimport { __facade_invoke__, __facade_register__, Dispatcher } from \"/Users/paulchrisluke/Repos/pcl-labs/clip-recap-pipeline/node_modules/wrangler/templates/middleware/common.ts\";\nimport type { WorkerEntrypointConstructor } from \"/Users/paulchrisluke/Repos/pcl-labs/clip-recap-pipeline/.wrangler/tmp/bundle-TgVJqC/middleware-insertion-facade.js\";\n\n// Preserve all the exports from the worker\nexport * from \"/Users/paulchrisluke/Repos/pcl-labs/clip-recap-pipeline/.wrangler/tmp/bundle-TgVJqC/middleware-insertion-facade.js\";\n\nclass __Facade_ScheduledController__ implements ScheduledController {\n\treadonly #noRetry: ScheduledController[\"noRetry\"];\n\n\tconstructor(\n\t\treadonly scheduledTime: number,\n\t\treadonly cron: string,\n\t\tnoRetry: ScheduledController[\"noRetry\"]\n\t) {\n\t\tthis.#noRetry = noRetry;\n\t}\n\n\tnoRetry() {\n\t\tif (!(this instanceof __Facade_ScheduledController__)) {\n\t\t\tthrow new TypeError(\"Illegal invocation\");\n\t\t}\n\t\t// Need to call native method immediately in case uncaught error thrown\n\t\tthis.#noRetry();\n\t}\n}\n\nfunction wrapExportedHandler(worker: ExportedHandler): ExportedHandler {\n\t// If we don't have any middleware defined, just return the handler as is\n\tif (\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__ === undefined ||\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__.length === 0\n\t) {\n\t\treturn worker;\n\t}\n\t// Otherwise, register all middleware once\n\tfor (const middleware of __INTERNAL_WRANGLER_MIDDLEWARE__) {\n\t\t__facade_register__(middleware);\n\t}\n\n\tconst fetchDispatcher: ExportedHandlerFetchHandler = function (\n\t\trequest,\n\t\tenv,\n\t\tctx\n\t) {\n\t\tif (worker.fetch === undefined) {\n\t\t\tthrow new Error(\"Handler does not export a fetch() function.\");\n\t\t}\n\t\treturn worker.fetch(request, env, ctx);\n\t};\n\n\treturn {\n\t\t...worker,\n\t\tfetch(request, env, ctx) {\n\t\t\tconst dispatcher: Dispatcher = function (type, init) {\n\t\t\t\tif (type === \"scheduled\" && worker.scheduled !== undefined) {\n\t\t\t\t\tconst controller = new __Facade_ScheduledController__(\n\t\t\t\t\t\tDate.now(),\n\t\t\t\t\t\tinit.cron ?? \"\",\n\t\t\t\t\t\t() => {}\n\t\t\t\t\t);\n\t\t\t\t\treturn worker.scheduled(controller, env, ctx);\n\t\t\t\t}\n\t\t\t};\n\t\t\treturn __facade_invoke__(request, env, ctx, dispatcher, fetchDispatcher);\n\t\t},\n\t};\n}\n\nfunction wrapWorkerEntrypoint(\n\tklass: WorkerEntrypointConstructor\n): WorkerEntrypointConstructor {\n\t// If we don't have any middleware defined, just return the handler as is\n\tif (\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__ === undefined ||\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__.length === 0\n\t) {\n\t\treturn klass;\n\t}\n\t// Otherwise, register all middleware once\n\tfor (const middleware of __INTERNAL_WRANGLER_MIDDLEWARE__) {\n\t\t__facade_register__(middleware);\n\t}\n\n\t// `extend`ing `klass` here so other RPC methods remain callable\n\treturn class extends klass {\n\t\t#fetchDispatcher: ExportedHandlerFetchHandler<Record<string, unknown>> = (\n\t\t\trequest,\n\t\t\tenv,\n\t\t\tctx\n\t\t) => {\n\t\t\tthis.env = env;\n\t\t\tthis.ctx = ctx;\n\t\t\tif (super.fetch === undefined) {\n\t\t\t\tthrow new Error(\"Entrypoint class does not define a fetch() function.\");\n\t\t\t}\n\t\t\treturn super.fetch(request);\n\t\t};\n\n\t\t#dispatcher: Dispatcher = (type, init) => {\n\t\t\tif (type === \"scheduled\" && super.scheduled !== undefined) {\n\t\t\t\tconst controller = new __Facade_ScheduledController__(\n\t\t\t\t\tDate.now(),\n\t\t\t\t\tinit.cron ?? \"\",\n\t\t\t\t\t() => {}\n\t\t\t\t);\n\t\t\t\treturn super.scheduled(controller);\n\t\t\t}\n\t\t};\n\n\t\tfetch(request: Request<unknown, IncomingRequestCfProperties>) {\n\t\t\treturn __facade_invoke__(\n\t\t\t\trequest,\n\t\t\t\tthis.env,\n\t\t\t\tthis.ctx,\n\t\t\t\tthis.#dispatcher,\n\t\t\t\tthis.#fetchDispatcher\n\t\t\t);\n\t\t}\n\t};\n}\n\nlet WRAPPED_ENTRY: ExportedHandler | WorkerEntrypointConstructor | undefined;\nif (typeof ENTRY === \"object\") {\n\tWRAPPED_ENTRY = wrapExportedHandler(ENTRY);\n} else if (typeof ENTRY === \"function\") {\n\tWRAPPED_ENTRY = wrapWorkerEntrypoint(ENTRY);\n}\nexport default WRAPPED_ENTRY;\n", "\t\t\t\timport worker, * as OTHER_EXPORTS from \"/Users/paulchrisluke/Repos/pcl-labs/clip-recap-pipeline/src/index.ts\";\n\t\t\t\timport * as __MIDDLEWARE_0__ from \"/Users/paulchrisluke/Repos/pcl-labs/clip-recap-pipeline/node_modules/wrangler/templates/middleware/middleware-ensure-req-body-drained.ts\";\nimport * as __MIDDLEWARE_1__ from \"/Users/paulchrisluke/Repos/pcl-labs/clip-recap-pipeline/node_modules/wrangler/templates/middleware/middleware-miniflare3-json-error.ts\";\n\n\t\t\t\texport * from \"/Users/paulchrisluke/Repos/pcl-labs/clip-recap-pipeline/src/index.ts\";\n\n\t\t\t\texport const __INTERNAL_WRANGLER_MIDDLEWARE__ = [\n\t\t\t\t\t\n\t\t\t\t\t__MIDDLEWARE_0__.default,__MIDDLEWARE_1__.default\n\t\t\t\t]\n\t\t\t\texport default worker;", "import { Environment, TwitchTokenResponse } from './types/index.js';\nimport { validateClipId, validateClipData, validateClipObject } from './utils/validation.js';\nimport { handleScheduled } from './services/scheduler.js';\nimport { handleWebhook } from './services/webhooks.js';\nimport { handleGitHubRequest } from './routes/github.js';\n\nexport default {\n  async fetch(request: Request, env: Environment, ctx: ExecutionContext): Promise<Response> {\n    const url = new URL(request.url);\n    \n    // Health check endpoint\n    if (url.pathname === '/health') {\n      const healthData = {\n        status: 'healthy',\n        timestamp: new Date().toISOString(),\n        service: 'Twitch Clip Recap Pipeline',\n        version: '1.0.0',\n        uptime: '24/7',\n        environment: 'production'\n      };\n      \n      return new Response(JSON.stringify(healthData, null, 2), { \n        status: 200,\n        headers: { 'Content-Type': 'application/json' }\n      });\n    }\n    \n    // Validate Twitch credentials endpoint\n    if (url.pathname === '/validate') {\n      try {\n        console.log('\uD83D\uDD0D Validating Twitch credentials...');\n        // Step 1: Get access token\n        const formData = new URLSearchParams();\n        formData.append('client_id', env.TWITCH_CLIENT_ID);\n        formData.append('client_secret', env.TWITCH_CLIENT_SECRET);\n        formData.append('grant_type', 'client_credentials');\n\n        const tokenResponse = await fetch('https://id.twitch.tv/oauth2/token', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/x-www-form-urlencoded',\n          },\n          body: formData.toString(),\n        });\n\n        console.log('Token response status:', tokenResponse.status);\n        \n        if (!tokenResponse.ok) {\n          const errorText = await tokenResponse.text();\n          console.error('Token response error:', errorText);\n          return new Response(JSON.stringify({\n            success: false,\n            error: `Token request failed: ${tokenResponse.status} - ${errorText}`,\n            twitch_client_id_present: !!env.TWITCH_CLIENT_ID,\n            twitch_client_secret_present: !!env.TWITCH_CLIENT_SECRET\n          }), {\n            status: 400,\n            headers: { 'Content-Type': 'application/json' }\n          });\n        }\n\n        const tokenData = await tokenResponse.json() as TwitchTokenResponse;\n        \n        // Step 2: Validate the token using Twitch's validate endpoint\n        const validateResponse = await fetch('https://id.twitch.tv/oauth2/validate', {\n          headers: {\n            'Authorization': `Bearer ${tokenData.access_token}`,\n          },\n        });\n\n        if (!validateResponse.ok) {\n          const errorText = await validateResponse.text();\n          return new Response(JSON.stringify({\n            success: false,\n            error: `Token validation failed: ${validateResponse.status} - ${errorText}`,\n            token_obtained: true,\n            token_expires_in: tokenData.expires_in\n          }), {\n            status: 400,\n            headers: { 'Content-Type': 'application/json' }\n          });\n        }\n\n        const validateData = await validateResponse.json();\n        \n        // Step 3: Test API call to get user info\n        const loginToTest = env.TWITCH_BROADCASTER_LOGIN || 'paulchrisluke'; // Fallback for backward compatibility\n        const userResponse = await fetch(\n          `https://api.twitch.tv/helix/users?login=${loginToTest}`,\n          {\n            headers: {\n              'Client-ID': env.TWITCH_CLIENT_ID,\n              'Authorization': `Bearer ${tokenData.access_token}`,\n            },\n          }\n        );\n\n        if (!userResponse.ok) {\n          const errorText = await userResponse.text();\n          return new Response(JSON.stringify({\n            success: false,\n            error: `API call failed: ${userResponse.status} - ${errorText}`,\n            token_obtained: true,\n            token_validated: true,\n            token_info: validateData\n          }), {\n            status: 400,\n            headers: { 'Content-Type': 'application/json' }\n          });\n        }\n\n        const userData = await userResponse.json() as { data: Array<{ id: string; login: string }> };\n        \n        return new Response(JSON.stringify({\n          success: true,\n          message: 'Twitch credentials are valid!',\n          token_obtained: true,\n          token_validated: true,\n          token_info: validateData,\n          user_found: userData.data?.length > 0,\n          broadcaster_id: userData.data?.[0]?.id || null,\n          username: userData.data?.[0]?.login || null\n        }), {\n          status: 200,\n          headers: { 'Content-Type': 'application/json' }\n        });\n\n      } catch (error) {\n        return new Response(JSON.stringify({\n          success: false,\n          error: error instanceof Error ? error.message : 'Unknown error'\n        }), {\n          status: 500,\n          headers: { 'Content-Type': 'application/json' }\n        });\n      }\n    }\n\n    // Validate GitHub credentials endpoint\n    if (url.pathname === '/validate-github') {\n      try {\n        console.log('\uD83D\uDD0D Validating GitHub credentials...');\n        \n        // Check if we have any GitHub tokens\n        const tokens = {\n          GITHUB_TOKEN: env.GITHUB_TOKEN,\n          GITHUB_TOKEN_PAULCHRISLUKE: env.GITHUB_TOKEN_PAULCHRISLUKE,\n          GITHUB_TOKEN_BLAWBY: env.GITHUB_TOKEN_BLAWBY,\n        };\n\n        const availableTokens = Object.entries(tokens)\n          .filter(([key, token]) => !!token)\n          .map(([key]) => key);\n\n        if (availableTokens.length === 0) {\n          return new Response(JSON.stringify({\n            success: false,\n            error: 'No GitHub tokens found',\n            tokens_present: false\n          }), {\n            status: 400,\n            headers: { 'Content-Type': 'application/json' }\n          });\n        }\n\n        console.log(`\u2705 Found ${availableTokens.length} GitHub tokens: ${availableTokens.join(', ')}`);\n\n        // Step 1: Test API access with the first available token\n        const testToken = Object.values(tokens).find(token => !!token);\n        if (!testToken) {\n          return new Response(JSON.stringify({\n            success: false,\n            error: 'No valid GitHub token found'\n          }), {\n            status: 400,\n            headers: { 'Content-Type': 'application/json' }\n          });\n        }\n\n        // Step 2: Test API call to get user info\n        try {\n          const userResponse = await fetch('https://api.github.com/user', {\n            headers: {\n              'Authorization': `Bearer ${testToken}`,\n              'Accept': 'application/vnd.github.v3+json',\n              'User-Agent': 'clip-recap-pipeline/1.0.0',\n            },\n          });\n\n          if (!userResponse.ok) {\n            const errorText = await userResponse.text();\n            return new Response(JSON.stringify({\n              success: false,\n              error: `GitHub API access failed: ${userResponse.status} - ${errorText}`,\n              tokens_present: true,\n              available_tokens: availableTokens\n            }), {\n              status: 400,\n              headers: { 'Content-Type': 'application/json' }\n            });\n          }\n\n          const userData = await userResponse.json();\n          console.log('\u2705 GitHub API access successful');\n\n          // Step 3: Test repository access (try to access the content repo if configured)\n          let repoAccess = null;\n          if (env.CONTENT_REPO_OWNER && env.CONTENT_REPO_NAME) {\n            try {\n              const repoResponse = await fetch(\n                `https://api.github.com/repos/${env.CONTENT_REPO_OWNER}/${env.CONTENT_REPO_NAME}`,\n                {\n                  headers: {\n                    'Authorization': `Bearer ${testToken}`,\n                    'Accept': 'application/vnd.github.v3+json',\n                    'User-Agent': 'clip-recap-pipeline/1.0.0',\n                  },\n                }\n              );\n\n              if (repoResponse.ok) {\n                const repoData = await repoResponse.json();\n                repoAccess = {\n                  name: repoData.name,\n                  full_name: repoData.full_name,\n                  private: repoData.private,\n                  permissions: repoData.permissions\n                };\n                console.log('\u2705 Repository access successful');\n              } else {\n                console.log('\u26A0\uFE0F Repository access failed (this might be expected)');\n              }\n            } catch (error) {\n              console.log('\u26A0\uFE0F Repository access test failed (this might be expected)');\n            }\n          }\n          \n          return new Response(JSON.stringify({\n            success: true,\n            message: 'GitHub credentials are valid!',\n            tokens_present: true,\n            available_tokens: availableTokens,\n            api_accessible: true,\n            user_info: {\n              login: userData.login,\n              id: userData.id,\n              type: userData.type\n            },\n            repository_accessible: !!repoAccess,\n            repo_info: repoAccess\n          }), {\n            status: 200,\n            headers: { 'Content-Type': 'application/json' }\n          });\n\n        } catch (error) {\n          return new Response(JSON.stringify({\n            success: false,\n            error: `GitHub API call failed: ${error instanceof Error ? error.message : 'Unknown error'}`,\n            tokens_present: true,\n            available_tokens: availableTokens\n          }), {\n            status: 400,\n            headers: { 'Content-Type': 'application/json' }\n          });\n        }\n\n      } catch (error) {\n        return new Response(JSON.stringify({\n          success: false,\n          error: error instanceof Error ? error.message : 'Unknown error'\n        }), {\n          status: 500,\n          headers: { 'Content-Type': 'application/json' }\n        });\n      }\n    }\n\n    // Clips management endpoint\n    if (url.pathname === '/clips') {\n      try {\n        const { TwitchService } = await import('./services/twitch');\n        const twitchService = new TwitchService(env);\n        \n        switch (request.method) {\n          case 'GET': {\n            // Fetch recent clips from Twitch\n            console.log('\uD83D\uDD0D Fetching recent Twitch clips...');\n            const clips = await twitchService.getRecentClips();\n            \n            return new Response(JSON.stringify({\n              success: true,\n              message: `Found ${clips.length} clips from the last 24 hours`,\n              clips: clips.map(clip => ({\n                id: clip.id,\n                title: clip.title,\n                url: clip.url,\n                embed_url: clip.embed_url,\n                thumbnail_url: clip.thumbnail_url,\n                duration: clip.duration,\n                view_count: clip.view_count,\n                created_at: clip.created_at,\n                broadcaster_name: clip.broadcaster_name,\n                creator_name: clip.creator_name\n              }))\n            }), {\n              status: 200,\n              headers: { 'Content-Type': 'application/json' }\n            });\n          }\n\n          case 'POST': {\n            // Store clips data to R2\n            console.log('\uD83D\uDCBE Storing clips data...');\n            \n            // Check request body size limit (10MB)\n            const contentLength = request.headers.get('content-length');\n            const MAX_REQUEST_SIZE = 10 * 1024 * 1024; // 10MB\n            if (contentLength && parseInt(contentLength) > MAX_REQUEST_SIZE) {\n              return new Response(JSON.stringify({\n                success: false,\n                error: `Request body too large. Maximum size is ${MAX_REQUEST_SIZE / (1024 * 1024)}MB.`\n              }), {\n                status: 413,\n                headers: { 'Content-Type': 'application/json' }\n              });\n            }\n            \n            const body = await request.json() as { clips?: any[] };\n            const clipsToStore = body.clips || [];\n            \n            // Validate request size\n            const MAX_CLIPS_PER_REQUEST = 100;\n            if (clipsToStore.length > MAX_CLIPS_PER_REQUEST) {\n              return new Response(JSON.stringify({\n                success: false,\n                error: `Too many clips. Maximum ${MAX_CLIPS_PER_REQUEST} clips per request.`\n              }), {\n                status: 400,\n                headers: { 'Content-Type': 'application/json' }\n              });\n            }\n            \n            if (clipsToStore.length === 0) {\n              return new Response(JSON.stringify({\n                success: false,\n                error: 'No clips provided to store'\n              }), {\n                status: 400,\n                headers: { 'Content-Type': 'application/json' }\n              });\n            }\n            \n            // Validate and sanitize each clip\n            const validatedClips = [];\n            for (let i = 0; i < clipsToStore.length; i++) {\n              const clip = clipsToStore[i];\n              \n              // Basic structure validation\n              if (!clip || typeof clip !== 'object' || Array.isArray(clip)) {\n                return new Response(JSON.stringify({\n                  success: false,\n                  error: `Clip at index ${i} must be a valid object`\n                }), {\n                  status: 400,\n                  headers: { 'Content-Type': 'application/json' }\n                });\n              }\n              \n              // Comprehensive validation and sanitization of the entire clip object\n              const clipValidation = validateClipObject(clip);\n              if (!clipValidation.isValid) {\n                return new Response(JSON.stringify({\n                  success: false,\n                  error: `Invalid clip at index ${i}: ${clipValidation.error}`\n                }), {\n                  status: 400,\n                  headers: { 'Content-Type': 'application/json' }\n                });\n              }\n              \n              // Check for duplicate clip IDs\n              if (validatedClips.some(validatedClip => validatedClip.id === clip.id)) {\n                return new Response(JSON.stringify({\n                  success: false,\n                  error: `Duplicate clip ID found: ${clip.id}`\n                }), {\n                  status: 400,\n                  headers: { 'Content-Type': 'application/json' }\n                });\n              }\n              \n              // Use sanitized clip data\n              validatedClips.push(clipValidation.sanitizedData!);\n            }\n            \n            // Store each validated clip as a separate file in R2\n            const storedClips = [];\n            for (const clip of validatedClips) {\n              const key = `clips/${clip.id}.json`;\n              await env.R2_BUCKET.put(key, JSON.stringify(clip), {\n                httpMetadata: {\n                  contentType: 'application/json',\n                },\n              });\n              storedClips.push(clip.id);\n            }\n            \n            return new Response(JSON.stringify({\n              success: true,\n              message: `Stored ${storedClips.length} clips to R2`,\n              stored_clips: storedClips,\n              validation_summary: {\n                total_received: clipsToStore.length,\n                total_stored: storedClips.length,\n                sanitized: validatedClips.some(clip => Object.keys(clip).length > 1)\n              }\n            }), {\n              status: 200,\n              headers: { 'Content-Type': 'application/json' }\n            });\n          }\n\n          case 'PUT': {\n            // Update specific clip data\n            console.log('\uD83D\uDD04 Updating clip data...');\n            const updateBody = await request.json() as { clipId?: string; data?: any };\n            const { clipId, data } = updateBody;\n            \n            if (!clipId || !data) {\n              return new Response(JSON.stringify({\n                success: false,\n                error: 'clipId and data are required'\n              }), {\n                status: 400,\n                headers: { 'Content-Type': 'application/json' }\n              });\n            }\n            \n            // Validate clipId format and prevent path traversal\n            const clipIdValidation = validateClipId(clipId);\n            if (!clipIdValidation.isValid) {\n              return new Response(JSON.stringify({\n                success: false,\n                error: `Invalid clipId: ${clipIdValidation.error}`\n              }), {\n                status: 400,\n                headers: { 'Content-Type': 'application/json' }\n              });\n            }\n            \n            // Strict validation of data with field whitelisting and sanitization\n            const dataValidation = validateClipData(data);\n            if (!dataValidation.isValid) {\n              return new Response(JSON.stringify({\n                success: false,\n                error: dataValidation.error\n              }), {\n                status: 400,\n                headers: { 'Content-Type': 'application/json' }\n              });\n            }\n            \n            // Use sanitized data for storage\n            const sanitizedData = dataValidation.sanitizedData;\n            \n            const updateKey = `clips/${clipId}.json`;\n            await env.R2_BUCKET.put(updateKey, JSON.stringify(sanitizedData), {\n              httpMetadata: {\n                contentType: 'application/json',\n              },\n            });\n            \n            return new Response(JSON.stringify({\n              success: true,\n              message: `Updated clip ${clipId}`,\n              clip_id: clipId,\n              updated_fields: Object.keys(sanitizedData)\n            }), {\n              status: 200,\n              headers: { 'Content-Type': 'application/json' }\n            });\n          }\n\n          default:\n            return new Response(JSON.stringify({\n              success: false,\n              error: 'Method not allowed'\n            }), {\n              status: 405,\n              headers: { 'Content-Type': 'application/json' }\n            });\n        }\n\n      } catch (error) {\n        return new Response(JSON.stringify({\n          success: false,\n          error: error instanceof Error ? error.message : 'Unknown error'\n        }), {\n          status: 500,\n          headers: { 'Content-Type': 'application/json' }\n        });\n      }\n    }\n\n    // Read stored clips from R2\n    if (url.pathname.startsWith('/clips/stored')) {\n      try {\n        const clipId = url.searchParams.get('id');\n        \n        if (clipId) {\n          // Validate clipId to prevent path traversal\n          const validation = validateClipId(clipId);\n          if (!validation.isValid) {\n            return new Response(JSON.stringify({\n              success: false,\n              error: validation.error\n            }), {\n              status: 400,\n              headers: { 'Content-Type': 'application/json' }\n            });\n          }\n          \n          // Get specific clip\n          const clipObject = await env.R2_BUCKET.get(`clips/${clipId}.json`);\n          \n          if (!clipObject) {\n            return new Response(JSON.stringify({\n              success: false,\n              error: 'Clip not found'\n            }), {\n              status: 404,\n              headers: { 'Content-Type': 'application/json' }\n            });\n          }\n          \n          const clipData = await clipObject.json();\n          return new Response(JSON.stringify({\n            success: true,\n            clip: clipData\n          }), {\n            status: 200,\n            headers: { 'Content-Type': 'application/json' }\n          });\n        } else {\n          // List all stored clips\n          console.log('\uD83D\uDCD6 Listing stored clips...');\n          const list = await env.R2_BUCKET.list({ prefix: 'clips/' });\n          const clips = [];\n          \n          // Limit the number of clips to prevent performance issues\n          const MAX_CLIPS = 100;\n          const objectsToFetch = list.objects.slice(0, MAX_CLIPS);\n\n          // Fetch clips in parallel with batching\n          const batchSize = 10;\n          for (let i = 0; i < objectsToFetch.length; i += batchSize) {\n            const batch = objectsToFetch.slice(i, i + batchSize);\n            const batchPromises = batch.map(async (object: { key: string }) => {\n              const clipObject = await env.R2_BUCKET.get(object.key);\n              return clipObject ? clipObject.json() : null;\n            });\n\n            const batchResults = await Promise.all(batchPromises);\n            clips.push(...batchResults.filter((clip: any) => clip !== null));\n          }\n\n          // Add pagination info to response\n          const hasMore = list.objects.length > MAX_CLIPS;\n          \n          return new Response(JSON.stringify({\n            success: true,\n            message: `Found ${clips.length} stored clips`,\n            clips: clips,\n            has_more: hasMore,\n            total_objects: list.objects.length\n          }), {\n            status: 200,\n            headers: { 'Content-Type': 'application/json' }\n          });\n        }\n\n      } catch (error) {\n        return new Response(JSON.stringify({\n          success: false,\n          error: error instanceof Error ? error.message : 'Unknown error'\n        }), {\n          status: 500,\n          headers: { 'Content-Type': 'application/json' }\n        });\n      }\n    }\n\n    // GitHub endpoints\n    if (url.pathname.startsWith('/api/github/')) {\n      return handleGitHubRequest(request, env);\n    }\n\n    // Webhook endpoints\n    if (url.pathname === '/webhook/github') {\n      return handleWebhook(request, env, ctx);\n    }\n    \n    // Default response - API Status Page\n    const html = `\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Twitch Clip Recap Pipeline - API Status</title>\n    <style>\n        * {\n            margin: 0;\n            padding: 0;\n            box-sizing: border-box;\n        }\n        \n        body {\n            font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;\n            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\n            min-height: 100vh;\n            color: #333;\n        }\n        \n        .container {\n            max-width: 1200px;\n            margin: 0 auto;\n            padding: 2rem;\n        }\n        \n        .header {\n            text-align: center;\n            margin-bottom: 3rem;\n            color: white;\n        }\n        \n        .header h1 {\n            font-size: 2.5rem;\n            margin-bottom: 0.5rem;\n            font-weight: 700;\n        }\n        \n        .header p {\n            font-size: 1.2rem;\n            opacity: 0.9;\n        }\n        \n        .status-grid {\n            display: grid;\n            grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));\n            gap: 1.5rem;\n            margin-bottom: 3rem;\n        }\n        \n        .status-card {\n            background: white;\n            border-radius: 12px;\n            padding: 1.5rem;\n            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\n            transition: transform 0.2s ease;\n        }\n        \n        .status-card:hover {\n            transform: translateY(-2px);\n        }\n        \n        .status-card h3 {\n            color: #667eea;\n            margin-bottom: 1rem;\n            font-size: 1.3rem;\n        }\n        \n        .status-indicator {\n            display: inline-block;\n            width: 12px;\n            height: 12px;\n            border-radius: 50%;\n            margin-right: 0.5rem;\n        }\n        \n        .status-online {\n            background: #10b981;\n        }\n        \n        .status-offline {\n            background: #ef4444;\n        }\n        \n        .endpoints {\n            background: white;\n            border-radius: 12px;\n            padding: 2rem;\n            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\n        }\n        \n        .endpoints h2 {\n            color: #667eea;\n            margin-bottom: 1.5rem;\n            font-size: 1.8rem;\n        }\n        \n        .endpoint {\n            border: 1px solid #e5e7eb;\n            border-radius: 8px;\n            margin-bottom: 1rem;\n            overflow: hidden;\n        }\n        \n        .endpoint-header {\n            background: #f9fafb;\n            padding: 1rem;\n            border-bottom: 1px solid #e5e7eb;\n            display: flex;\n            align-items: center;\n            gap: 1rem;\n        }\n        \n        .method {\n            padding: 0.25rem 0.75rem;\n            border-radius: 4px;\n            font-weight: 600;\n            font-size: 0.875rem;\n        }\n        \n        .method.get { background: #dbeafe; color: #1d4ed8; }\n        .method.post { background: #dcfce7; color: #15803d; }\n        .method.put { background: #fef3c7; color: #d97706; }\n        \n        .endpoint-path {\n            font-family: 'Monaco', 'Menlo', monospace;\n            font-weight: 600;\n        }\n        \n        .endpoint-description {\n            padding: 1rem;\n            color: #6b7280;\n        }\n        \n        .footer {\n            text-align: center;\n            margin-top: 3rem;\n            color: white;\n            opacity: 0.8;\n        }\n        \n        .stats {\n            display: grid;\n            grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));\n            gap: 1rem;\n            margin-bottom: 2rem;\n        }\n        \n        .stat-card {\n            background: rgba(255, 255, 255, 0.1);\n            border-radius: 8px;\n            padding: 1.5rem;\n            text-align: center;\n            color: white;\n        }\n        \n        .stat-number {\n            font-size: 2rem;\n            font-weight: 700;\n            margin-bottom: 0.5rem;\n        }\n        \n        .stat-label {\n            opacity: 0.9;\n        }\n    </style>\n</head>\n<body>\n    <div class=\"container\">\n        <div class=\"header\">\n            <h1>\uD83C\uDFAC Twitch Clip Recap Pipeline</h1>\n            <p>Automated daily blog post generation from Twitch clips</p>\n        </div>\n        \n        <div class=\"stats\">\n            <div class=\"stat-card\">\n                <div class=\"stat-number\">7</div>\n                <div class=\"stat-label\">API Endpoints</div>\n            </div>\n            <div class=\"stat-card\">\n                <div class=\"stat-number\">24/7</div>\n                <div class=\"stat-label\">Uptime</div>\n            </div>\n            <div class=\"stat-card\">\n                <div class=\"stat-number\">AI</div>\n                <div class=\"stat-label\">Powered</div>\n            </div>\n        </div>\n        \n        <div class=\"status-grid\">\n            <div class=\"status-card\">\n                <h3><span class=\"status-indicator status-online\"></span>Twitch Integration</h3>\n                <p>Connected to Twitch API for clip fetching and processing</p>\n            </div>\n            <div class=\"status-card\">\n                <h3><span class=\"status-indicator status-online\"></span>GitHub Integration</h3>\n                <p>Connected to GitHub for content repository management</p>\n            </div>\n            <div class=\"status-card\">\n                <h3><span class=\"status-indicator status-online\"></span>AI Processing</h3>\n                <p>Workers AI for transcription and content generation</p>\n            </div>\n            <div class=\"status-card\">\n                <h3><span class=\"status-indicator status-online\"></span>Cloud Storage</h3>\n                <p>R2 storage for clips and transcripts</p>\n            </div>\n        </div>\n        \n        <div class=\"endpoints\">\n            <h2>\uD83D\uDCE1 API Endpoints</h2>\n            \n            <div class=\"endpoint\">\n                <div class=\"endpoint-header\">\n                    <span class=\"method get\">GET</span>\n                    <span class=\"endpoint-path\">/health</span>\n                </div>\n                <div class=\"endpoint-description\">\n                    Health check endpoint to verify service status\n                </div>\n            </div>\n            \n            <div class=\"endpoint\">\n                <div class=\"endpoint-header\">\n                    <span class=\"method get\">GET</span>\n                    <span class=\"endpoint-path\">/validate</span>\n                </div>\n                <div class=\"endpoint-description\">\n                    Validate Twitch API credentials and connection\n                </div>\n            </div>\n            \n            <div class=\"endpoint\">\n                <div class=\"endpoint-header\">\n                    <span class=\"method get\">GET</span>\n                    <span class=\"endpoint-path\">/validate-github</span>\n                </div>\n                <div class=\"endpoint-description\">\n                    Validate GitHub API credentials and repository access\n                </div>\n            </div>\n            \n            <div class=\"endpoint\">\n                <div class=\"endpoint-header\">\n                    <span class=\"method get\">GET</span>\n                    <span class=\"endpoint-path\">/clips</span>\n                </div>\n                <div class=\"endpoint-description\">\n                    Fetch recent Twitch clips from the last 24 hours\n                </div>\n            </div>\n            \n            <div class=\"endpoint\">\n                <div class=\"endpoint-header\">\n                    <span class=\"method post\">POST</span>\n                    <span class=\"endpoint-path\">/clips</span>\n                </div>\n                <div class=\"endpoint-description\">\n                    Store clips data to R2 storage\n                </div>\n            </div>\n            \n            <div class=\"endpoint\">\n                <div class=\"endpoint-header\">\n                    <span class=\"method get\">GET</span>\n                    <span class=\"endpoint-path\">/clips/stored</span>\n                </div>\n                <div class=\"endpoint-description\">\n                    List all stored clips from R2 storage\n                </div>\n            </div>\n            \n            <div class=\"endpoint\">\n                <div class=\"endpoint-header\">\n                    <span class=\"method post\">POST</span>\n                    <span class=\"endpoint-path\">/webhook/github</span>\n                </div>\n                <div class=\"endpoint-description\">\n                    GitHub webhook handler for repository events\n                </div>\n            </div>\n        </div>\n        \n        <div class=\"footer\">\n            <p>Built with Cloudflare Workers \u2022 AI-Powered Content Generation</p>\n        </div>\n    </div>\n</body>\n</html>`;\n    \n    return new Response(html, { \n      status: 200,\n      headers: { 'Content-Type': 'text/html' }\n    });\n  },\n\n  async scheduled(event: ScheduledEvent, env: Environment, ctx: ExecutionContext): Promise<void> {\n    await handleScheduled(event, env, ctx);\n  }\n};\n", "// Validation utilities for the clip-recap-pipeline\n\nexport interface ValidationResult {\n  isValid: boolean;\n  error?: string;\n  sanitizedData?: any;\n}\n\nexport interface FieldConfig {\n  type: 'string' | 'array' | 'boolean' | 'object' | 'number';\n  maxLength?: number;\n  maxItems?: number;\n  required?: boolean;\n  min?: number;\n  max?: number;\n}\n\nexport interface ValidationSchema {\n  [field: string]: FieldConfig;\n}\n\n// Validation function for clipId to prevent path traversal attacks\nexport function validateClipId(clipId: string): ValidationResult {\n  // Check for null/undefined\n  if (!clipId || typeof clipId !== 'string') {\n    return { isValid: false, error: 'clipId must be a non-empty string' };\n  }\n\n  // Check length (reasonable limit for Twitch clip IDs)\n  if (clipId.length > 50) {\n    return { isValid: false, error: 'clipId is too long (max 50 characters)' };\n  }\n\n  // Check for dangerous characters that could enable path traversal\n  const dangerousPattern = /[\\/\\\\\\.\\0]/;\n  if (dangerousPattern.test(clipId)) {\n    return { isValid: false, error: 'clipId contains invalid characters' };\n  }\n\n  // Only allow alphanumeric characters, hyphens, and underscores\n  const validPattern = /^[A-Za-z0-9_-]+$/;\n  if (!validPattern.test(clipId)) {\n    return { isValid: false, error: 'clipId contains invalid characters (only A-Z, a-z, 0-9, _, - allowed)' };\n  }\n\n  return { isValid: true };\n}\n\n// Sanitize string inputs to remove dangerous characters\nexport function sanitizeString(input: string): string {\n  return input\n    // Remove HTML tags\n    .replace(/<[^>]*>/g, '')\n    // Remove script tags and their content\n    .replace(/<script\\b[^<]*(?:(?!<\\/script>)<[^<]*)*<\\/script>/gi, '')\n    // Remove dangerous characters that could be used for XSS\n    .replace(/[<>\\\"'&]/g, '')\n    // Remove control characters\n    .replace(/[\\x00-\\x1F\\x7F]/g, '')\n    // Trim whitespace\n    .trim();\n}\n\n// Generic validation function using a schema\nexport function validateData(data: any, schema: ValidationSchema, forbiddenFields: string[] = []): ValidationResult {\n  // Check if data is a plain object\n  if (!data || typeof data !== 'object' || Array.isArray(data)) {\n    return { isValid: false, error: 'data must be a plain object' };\n  }\n\n  // Check for forbidden fields\n  for (const field of forbiddenFields) {\n    if (field in data) {\n      return { isValid: false, error: `Field '${field}' is not allowed to be modified` };\n    }\n  }\n\n  // Validate and sanitize each field\n  const sanitizedData: any = {};\n  const errors: string[] = [];\n\n  for (const [field, value] of Object.entries(data)) {\n    // Check if field is allowed\n    if (!(field in schema)) {\n      errors.push(`Field '${field}' is not allowed`);\n      continue;\n    }\n\n    const fieldConfig = schema[field];\n    \n    // Type validation\n    if (fieldConfig.type === 'string') {\n      if (typeof value !== 'string') {\n        errors.push(`Field '${field}' must be a string`);\n        continue;\n      }\n      \n      // Length validation\n      if (fieldConfig.maxLength && value.length > fieldConfig.maxLength) {\n        errors.push(`Field '${field}' is too long (max ${fieldConfig.maxLength} characters)`);\n        continue;\n      }\n      \n      // Sanitize string inputs\n      const sanitized = sanitizeString(value);\n      sanitizedData[field] = sanitized;\n      \n    } else if (fieldConfig.type === 'array') {\n      if (!Array.isArray(value)) {\n        errors.push(`Field '${field}' must be an array`);\n        continue;\n      }\n      \n      // Array length validation\n      if (fieldConfig.maxItems && value.length > fieldConfig.maxItems) {\n        errors.push(`Field '${field}' has too many items (max ${fieldConfig.maxItems})`);\n        continue;\n      }\n      \n      // Validate array contents (assuming string array for tags)\n      if (field === 'tags') {\n        const sanitizedTags = value\n          .filter((tag: any) => typeof tag === 'string')\n          .map((tag: string) => sanitizeString(tag))\n          .filter((tag: string) => tag.length > 0 && tag.length <= 50);\n        \n        sanitizedData[field] = sanitizedTags;\n      } else {\n        sanitizedData[field] = value;\n      }\n      \n    } else if (fieldConfig.type === 'boolean') {\n      if (typeof value !== 'boolean') {\n        errors.push(`Field '${field}' must be a boolean`);\n        continue;\n      }\n      sanitizedData[field] = value;\n      \n    } else if (fieldConfig.type === 'number') {\n      if (typeof value !== 'number' || isNaN(value)) {\n        errors.push(`Field '${field}' must be a valid number`);\n        continue;\n      }\n      \n      // Range validation\n      if (fieldConfig.min !== undefined && value < fieldConfig.min) {\n        errors.push(`Field '${field}' must be at least ${fieldConfig.min}`);\n        continue;\n      }\n      \n      if (fieldConfig.max !== undefined && value > fieldConfig.max) {\n        errors.push(`Field '${field}' must be at most ${fieldConfig.max}`);\n        continue;\n      }\n      \n      sanitizedData[field] = value;\n      \n    } else if (fieldConfig.type === 'object') {\n      if (typeof value !== 'object' || Array.isArray(value)) {\n        errors.push(`Field '${field}' must be an object`);\n        continue;\n      }\n      sanitizedData[field] = value;\n    }\n  }\n\n  if (errors.length > 0) {\n    return { isValid: false, error: `Validation errors: ${errors.join(', ')}` };\n  }\n\n  return { isValid: true, sanitizedData };\n}\n\n// Predefined schema for clip data validation\nexport const CLIP_DATA_SCHEMA: ValidationSchema = {\n  title: { type: 'string', maxLength: 200, required: false },\n  description: { type: 'string', maxLength: 1000, required: false },\n  tags: { type: 'array', maxItems: 20, required: false },\n  category: { type: 'string', maxLength: 100, required: false },\n  language: { type: 'string', maxLength: 10, required: false },\n  is_public: { type: 'boolean', required: false },\n  custom_metadata: { type: 'object', required: false }\n};\n\n// Predefined forbidden fields for clip data\nexport const CLIP_FORBIDDEN_FIELDS = [\n  '_id', 'id', 'owner', 'created_at', 'updated_at', \n  'broadcaster_id', 'creator_id', 'broadcaster_name', \n  'creator_name', 'url', 'embed_url', 'thumbnail_url'\n];\n\n// Convenience function for clip data validation\nexport function validateClipData(data: any): ValidationResult {\n  return validateData(data, CLIP_DATA_SCHEMA, CLIP_FORBIDDEN_FIELDS);\n}\n\n// Schema for complete clip objects (including required id field)\nexport const CLIP_OBJECT_SCHEMA: ValidationSchema = {\n  id: { type: 'string', maxLength: 50, required: true },\n  title: { type: 'string', maxLength: 200, required: false },\n  description: { type: 'string', maxLength: 1000, required: false },\n  tags: { type: 'array', maxItems: 20, required: false },\n  category: { type: 'string', maxLength: 100, required: false },\n  language: { type: 'string', maxLength: 10, required: false },\n  is_public: { type: 'boolean', required: false },\n  custom_metadata: { type: 'object', required: false },\n  // Twitch-specific fields that might be present\n  url: { type: 'string', maxLength: 500, required: false },\n  embed_url: { type: 'string', maxLength: 500, required: false },\n  thumbnail_url: { type: 'string', maxLength: 500, required: false },\n  duration: { type: 'number', min: 0, max: 3600, required: false },\n  view_count: { type: 'number', min: 0, required: false },\n  created_at: { type: 'string', maxLength: 50, required: false },\n  broadcaster_name: { type: 'string', maxLength: 100, required: false },\n  creator_name: { type: 'string', maxLength: 100, required: false }\n};\n\n// Forbidden fields for complete clip objects (system-managed fields)\nexport const CLIP_OBJECT_FORBIDDEN_FIELDS = [\n  '_id', 'owner', 'updated_at', 'broadcaster_id', 'creator_id'\n];\n\n// Validation function for complete clip objects\nexport function validateClipObject(clip: any): ValidationResult {\n  return validateData(clip, CLIP_OBJECT_SCHEMA, CLIP_OBJECT_FORBIDDEN_FIELDS);\n}\n", "import type { Environment } from '../types';\nimport type { ScheduledEvent, ExecutionContext } from '@cloudflare/workers-types';\nimport { TwitchService } from './twitch.js';\nimport { ContentService } from './content.js';\nimport { DiscordService } from './discord.js';\n\nexport async function handleScheduled(\n  event: ScheduledEvent,\n  env: Environment,\n  ctx: ExecutionContext\n): Promise<void> {\n  console.log(`Scheduled event triggered: ${event.cron}`);\n  \n  // Handle hourly token validation\n  if (event.cron === \"0 * * * *\") {\n    await handleTokenValidation(env);\n    return;\n  }\n  \n  // Handle daily pipeline (02:00 UTC = 09:00 ICT)\n  if (event.cron === \"0 2 * * *\") {\n    await handleDailyPipeline(env);\n    return;\n  }\n  \n  console.log(`Unknown cron pattern: ${event.cron}`);\n}\n\nasync function handleTokenValidation(env: Environment): Promise<void> {\n  console.log('Starting hourly token validation...');\n  \n  const validationErrors: string[] = [];\n  \n  // Validate Twitch credentials\n  try {\n    const twitchService = new TwitchService(env);\n    const token = await twitchService.getValidatedToken();\n    console.log('\u2705 Twitch token validation successful');\n  } catch (error) {\n    const errorMsg = `Twitch token validation failed: ${error instanceof Error ? error.message : 'Unknown error'}`;\n    console.error('\u274C', errorMsg);\n    validationErrors.push(errorMsg);\n  }\n\n  // Validate GitHub credentials\n  try {\n    const contentService = new ContentService(env);\n    const token = await contentService.getGitHubToken();\n    console.log('\u2705 GitHub App token validation successful');\n  } catch (error) {\n    const errorMsg = `GitHub App token validation failed: ${error instanceof Error ? error.message : 'Unknown error'}`;\n    console.error('\u274C', errorMsg);\n    validationErrors.push(errorMsg);\n  }\n\n  // Validate GitHub personal access tokens\n  try {\n    const testToken = env.GITHUB_TOKEN || env.GITHUB_TOKEN_PAULCHRISLUKE || env.GITHUB_TOKEN_BLAWBY;\n    if (testToken) {\n      const response = await fetch('https://api.github.com/user', {\n        headers: {\n          'Authorization': `Bearer ${testToken}`,\n          'Accept': 'application/vnd.github.v3+json',\n          'User-Agent': 'clip-recap-pipeline/1.0.0',\n        },\n      });\n      \n      if (!response.ok) {\n        throw new Error(`GitHub API returned ${response.status}: ${response.statusText}`);\n      }\n      \n      console.log('\u2705 GitHub personal token validation successful');\n    } else {\n      console.log('\u26A0\uFE0F No GitHub personal tokens found to validate');\n    }\n  } catch (error) {\n    const errorMsg = `GitHub personal token validation failed: ${error instanceof Error ? error.message : 'Unknown error'}`;\n    console.error('\u274C', errorMsg);\n    validationErrors.push(errorMsg);\n  }\n\n  // Send Discord notification if there are validation errors\n  if (validationErrors.length > 0) {\n    try {\n      const discordService = new DiscordService(env);\n      await discordService.notifyTokenValidationErrors(validationErrors);\n    } catch (discordError) {\n      console.error('Failed to send token validation error notification:', discordError);\n    }\n  }\n}\n\nasync function handleDailyPipeline(env: Environment): Promise<void> {\n  console.log('Starting daily clip recap pipeline...');\n  \n  try {\n    const twitchService = new TwitchService(env);\n    const contentService = new ContentService(env);\n    const discordService = new DiscordService(env);\n    \n    // Step 1: Fetch clips from last 24h\n    console.log('Fetching clips...');\n    const clips = await twitchService.getRecentClips();\n    \n    if (clips.length === 0) {\n      console.log('No clips found for the last 24 hours');\n      return;\n    }\n    \n    // Step 2: Transcribe clips\n    console.log(`Transcribing ${clips.length} clips...`);\n    const transcripts = await twitchService.transcribeClips(clips);\n    \n    // Step 3: Score and select best clips\n    console.log('Scoring and selecting clips...');\n    const selectedClips = await contentService.selectBestClips(clips, transcripts);\n    \n    // Step 4: Generate blog post\n    if (!selectedClips?.length) {\n      console.log('No clips selected after scoring. Skipping blog generation and PR creation.');\n      return;\n    }\n    console.log('Generating blog post...');\n    const blogPost = await contentService.generateBlogPost(selectedClips, transcripts);\n    \n    // Step 5: Create GitHub PR\n    console.log('Creating GitHub PR...');\n    const pr = await contentService.createPR(blogPost);\n    \n    // Step 6: Judge the content\n    console.log('Running content judge...');\n    const judgeResult = await contentService.judgeContent(blogPost);\n    \n    // Step 7: Update PR with judge results\n    await contentService.updatePRWithJudgeResults(pr.number, judgeResult);\n    \n    // Step 8: Send Discord notification\n    console.log('Sending Discord notification...');\n    await discordService.notifyPRCreated(pr, judgeResult, selectedClips.length);\n    \n    console.log('Pipeline completed successfully!');\n    \n  } catch (error) {\n    console.error('Pipeline failed:', error);\n    \n    // Send error notification to Discord\n    try {\n      const discordService = new DiscordService(env);\n      await discordService.notifyError(error);\n    } catch (discordError) {\n      console.error('Failed to send error notification:', discordError);\n    }\n  }\n}\n", "import { Environment, TwitchClip, Transcript, BlogPost, JudgeResult, ClipSection } from '../types/index.js';\nimport { generateJWT } from '../utils/jwt.js';\nimport { AIService } from '../utils/ai.js';\n\nexport class ContentService {\n  private aiService: AIService;\n  private cachedGitHubToken: string | null = null;\n  private cachedGitHubTokenExpiry: number | null = null;\n\n  constructor(private env: Environment) {\n    this.aiService = new AIService(env);\n  }\n\n  async selectBestClips(clips: TwitchClip[], transcripts: Transcript[]): Promise<TwitchClip[]> {\n    console.log('Selecting best clips...');\n    \n    // Score clips based on dev-focused criteria\n    const scoredClips = clips.map(clip => {\n      const transcript = transcripts.find(t => t.clip_id === clip.id);\n      const score = this.scoreClip(clip, transcript);\n      return { clip, score };\n    });\n\n    // Sort by score and take top 5-12\n    const sortedClips = scoredClips\n      .sort((a, b) => b.score - a.score)\n      .slice(0, Math.min(12, Math.max(5, clips.length)))\n      .map(item => item.clip);\n\n    console.log(`Selected ${sortedClips.length} clips out of ${clips.length}`);\n    return sortedClips;\n  }\n\n  private scoreClip(clip: TwitchClip, transcript?: Transcript): number {\n    let score = 0;\n    const text = transcript?.segments?.map((s: any) => s.text).join(' ').toLowerCase() || '';\n\n    // Dev-focused scoring\n    if (text.includes('test') && (text.includes('pass') || text.includes('green'))) score += 5;\n    if (text.includes('commit') || text.includes('merge') || text.includes('pr')) score += 4;\n    if (text.includes('fix') || text.includes('bug') || text.includes('issue')) score += 4;\n    if (text.includes('build') && (text.includes('success') || text.includes('fail'))) score += 3;\n    if (text.includes('finally') || text.includes('works')) score += 3;\n    if (text.includes('error') || text.includes('exception')) score += 2;\n    if (text.includes('deploy') || text.includes('release')) score += 2;\n    \n    // View count bonus (but not too much)\n    score += Math.min(clip.view_count / 10, 5);\n    \n    // Duration penalty for very long clips\n    if (clip.duration > 120) score -= 2;\n    \n    return score;\n  }\n\n  async generateBlogPost(clips: TwitchClip[], transcripts: Transcript[]): Promise<BlogPost> {\n    console.log('Generating blog post...');\n    \n    const date = new Date().toISOString().split('T')[0];\n    const sections: ClipSection[] = [];\n\n    for (const clip of clips) {\n      const transcript = transcripts.find(t => t.clip_id === clip.id);\n      const section = await this.generateClipSection(clip, transcript);\n      sections.push(section);\n    }\n\n    const intro = await this.generateIntro(clips, sections);\n    const title = await this.generateTitle(clips, sections);\n\n    return {\n      title,\n      date,\n      clip_count: clips.length,\n      sections,\n      intro,\n      tags: ['Development', 'Live Coding', 'Twitch', 'Daily Recap']\n    };\n  }\n\n  private parseLLMJSON(raw: string): any {\n    try {\n      // Strip code fences and language hints\n      let cleaned = raw.trim();\n      \n      // Remove markdown code blocks\n      cleaned = cleaned.replace(/^```(?:json)?\\s*\\n?/i, '').replace(/\\n?```\\s*$/i, '');\n      \n      // Find the first {...} block\n      const jsonMatch = cleaned.match(/\\{[\\s\\S]*\\}/);\n      if (!jsonMatch) {\n        throw new Error('No JSON object found in response');\n      }\n      \n      const jsonStr = jsonMatch[0];\n      return JSON.parse(jsonStr);\n    } catch (error) {\n      console.error('Failed to parse LLM JSON response:', error);\n      throw error;\n    }\n  }\n\n  private async generateClipSection(clip: TwitchClip, transcript?: Transcript): Promise<ClipSection> {\n    const text = transcript?.segments?.map((s: any) => s.text).join(' ') || '';\n    \n    // Generate section using Workers AI\n    const prompt = `Create a blog section for this Twitch clip:\n\nClip Title: ${clip.title}\nDuration: ${clip.duration} seconds\nTranscript: ${text}\n\nGenerate:\n1. A compelling H2 title (max 60 chars)\n2. 2-3 bullet points highlighting key moments\n3. A 3-5 sentence paragraph summarizing the clip\n4. Extract any repository names mentioned\n\nFormat as JSON:\n{\n  \"h2\": \"title\",\n  \"bullets\": [\"point1\", \"point2\"],\n  \"paragraph\": \"summary text\",\n  \"repo\": \"org/repo if mentioned\"\n}`;\n\n    // Replace the direct call with a protected version that returns a fallback on error\n    let result;\n    try {\n      result = await this.aiService.callWithRetry('@cf/google/gemma-2b-it', {\n        prompt,\n        max_tokens: 500,\n      });\n    } catch (error) {\n      console.error('AI service call failed:', error);\n      // Return fallback section immediately\n      return {\n        clip_id: clip.id,\n        h2: clip.title,\n        bullets: ['Development progress', 'Live coding session'],\n        paragraph: 'Interesting development moment captured during the stream.',\n        clip_url: clip.embed_url,\n      };\n    }\n    \n    try {\n      const parsed = this.parseLLMJSON(result.response);\n      \n      // Validate and coerce fields\n      const h2 = typeof parsed.h2 === 'string' ? parsed.h2.substring(0, 60) : clip.title;\n      const bullets = Array.isArray(parsed.bullets) && parsed.bullets.length >= 2 && parsed.bullets.length <= 3\n        ? parsed.bullets.filter((b: any) => typeof b === 'string')\n        : ['Development progress', 'Live coding session'];\n      const paragraph = typeof parsed.paragraph === 'string' && parsed.paragraph.length > 50\n        ? parsed.paragraph\n        : 'Interesting development moment captured during the stream.';\n      \n      // Normalize repo to \"org/repo\" format or undefined\n      let repo: string | undefined;\n      if (typeof parsed.repo === 'string' && parsed.repo.includes('/')) {\n        repo = parsed.repo.trim();\n      }\n      \n      return {\n        clip_id: clip.id,\n        h2,\n        bullets,\n        paragraph,\n        clip_url: clip.embed_url,\n        repo,\n      };\n    } catch (error) {\n      console.error('AI response parsing failed:', error);\n      // Fallback if AI parsing fails\n      return {\n        clip_id: clip.id,\n        h2: clip.title,\n        bullets: ['Development progress', 'Live coding session'],\n        paragraph: 'Interesting development moment captured during the stream.',\n        clip_url: clip.embed_url,\n      };\n    }\n  }\n\n  private async generateIntro(clips: TwitchClip[], sections: ClipSection[]): Promise<string> {\n    const prompt = `Write a brief intro paragraph for a daily development recap blog post with ${clips.length} clips. Keep it under 100 words and mention it's from a Twitch stream.`;\n\n    const result = await this.aiService.callWithRetry('@cf/google/gemma-2b-it', {\n      prompt,\n      max_tokens: 200,\n    });\n\n    return result.response || `Daily development recap from today's Twitch stream featuring ${clips.length} key moments.`;\n  }\n\n  private async generateTitle(clips: TwitchClip[], sections: ClipSection[]): Promise<string> {\n    const prompt = `Generate a compelling title for a daily development recap blog post with ${clips.length} clips. Keep it under 60 characters and make it engaging for developers.`;\n\n    const result = await this.aiService.callWithRetry('@cf/google/gemma-2b-it', {\n      prompt,\n      max_tokens: 100,\n    });\n\n    return result.response || `Daily Dev Recap - ${clips.length} Key Moments`;\n  }\n\n  async createPR(blogPost: BlogPost): Promise<any> {\n    console.log('Creating GitHub PR...');\n    \n    const date = blogPost.date;\n    const branchName = `auto/daily-recap-${date}`;\n    const filePath = `content/blog/development/${date}-daily-dev-recap.mdx`;\n    \n    try {\n      // Get GitHub installation token\n      const token = await this.getGitHubToken();\n      \n      // Create branch\n      await this.createBranch(token, branchName);\n      \n      // Create MDX file\n      const mdxContent = this.generateMDX(blogPost);\n      await this.createFile(token, branchName, filePath, mdxContent, `Add daily recap for ${blogPost.date}`, blogPost.date);\n      \n      // Create PR\n      const pr = await this.createPullRequest(token, branchName, blogPost);\n      \n      return pr;\n    } catch (error) {\n      console.error('Failed to create PR:', error);\n      throw new Error(`PR creation failed: ${error instanceof Error ? error.message : 'Unknown error'}`);\n    }\n  }\n\n  private async getGitHubToken(): Promise<string> {\n    // Check cache first\n    const now = Date.now();\n    if (this.cachedGitHubToken && this.cachedGitHubTokenExpiry && now < this.cachedGitHubTokenExpiry) {\n      return this.cachedGitHubToken;\n    }\n\n    // Generate JWT for GitHub App\n    let jwt: string;\n    try {\n      jwt = await this.generateJWT();\n    } catch (error) {\n      throw new Error(`Failed to generate JWT for GitHub authentication: ${error instanceof Error ? error.message : 'Unknown error'}`);\n    }\n    \n    // Get installation token\n    let response: Response;\n    try {\n      response = await fetch(\n        `https://api.github.com/app/installations/${this.env.GITHUB_INSTALLATION_ID}/access_tokens`,\n        {\n          method: 'POST',\n          headers: {\n            'Authorization': `Bearer ${jwt}`,\n            'Accept': 'application/vnd.github.v3+json',\n          },\n        }\n      );\n    } catch (error) {\n      throw new Error(`Network error while fetching GitHub token: ${error instanceof Error ? error.message : 'Unknown network error'}`);\n    }\n\n    if (!response.ok) {\n      let errorBody: string;\n      try {\n        errorBody = await response.text();\n      } catch {\n        errorBody = 'Unable to read error response body';\n      }\n      throw new Error(`Failed to get GitHub token: ${response.status} ${response.statusText} - ${errorBody}`);\n    }\n\n    let data: { token: string };\n    try {\n      data = await response.json() as { token: string };\n    } catch (error) {\n      throw new Error(`Failed to parse GitHub token response: ${error instanceof Error ? error.message : 'Invalid JSON response'}`);\n    }\n\n    // Cache the token with expiry (55 minutes to be safe)\n    this.cachedGitHubToken = data.token;\n    this.cachedGitHubTokenExpiry = now + (55 * 60 * 1000); // 55 minutes in milliseconds\n\n    return data.token;\n  }\n\n  private async generateJWT(): Promise<string> {\n    return generateJWT(this.env.GITHUB_PRIVATE_KEY, this.env.GITHUB_APP_ID);\n  }\n\n  private async createBranch(token: string, branchName: string): Promise<void> {\n    // Get latest commit from main branch\n    const response = await fetch(\n      `https://api.github.com/repos/${this.env.CONTENT_REPO_OWNER}/${this.env.CONTENT_REPO_NAME}/git/ref/heads/${this.env.CONTENT_REPO_MAIN_BRANCH}`,\n      {\n        headers: {\n          'Authorization': `token ${token}`,\n          'Accept': 'application/vnd.github.v3+json',\n        },\n      }\n    );\n\n    if (!response.ok) {\n      throw new Error(`Failed to get main branch: ${response.statusText}`);\n    }\n\n    const data = await response.json() as { object: { sha: string } };\n    \n    // Create new branch\n    const createResponse = await fetch(\n      `https://api.github.com/repos/${this.env.CONTENT_REPO_OWNER}/${this.env.CONTENT_REPO_NAME}/git/refs`,\n      {\n        method: 'POST',\n        headers: {\n          'Authorization': `token ${token}`,\n          'Accept': 'application/vnd.github.v3+json',\n        },\n        body: JSON.stringify({\n          ref: `refs/heads/${branchName}`,\n          sha: data.object.sha,\n        }),\n      }\n    );\n\n    if (!createResponse.ok) {\n      const errorBody = await createResponse.text();\n      // If branch already exists, that might be okay depending on your use case\n      if (createResponse.status === 422 && errorBody.includes('Reference already exists')) {\n        console.log(`Branch ${branchName} already exists, continuing...`);\n      } else {\n        throw new Error(`Failed to create branch: ${createResponse.statusText} - ${errorBody}`);\n      }\n    }\n  }\n\n  private encodeBase64UnicodeSafe(content: string): string {\n    // Cloudflare Workers compatible base64 encoding\n    return btoa(unescape(encodeURIComponent(content)));\n  }\n\n  private async createFile(token: string, branch: string, path: string, content: string, commitMessage: string, date?: string): Promise<void> {\n    const response = await fetch(\n      `https://api.github.com/repos/${this.env.CONTENT_REPO_OWNER}/${this.env.CONTENT_REPO_NAME}/contents/${path}`,\n      {\n        method: 'PUT',\n        headers: {\n          'Authorization': `token ${token}`,\n          'Accept': 'application/vnd.github.v3+json',\n        },\n        body: JSON.stringify({\n          message: commitMessage,\n          content: this.encodeBase64UnicodeSafe(content), // Unicode-safe base64 encode\n          branch,\n        }),\n      }\n    );\n\n    if (!response.ok) {\n      if (response.status === 422) {\n        // Try update: fetch current sha then PUT with sha\n        const getResp = await fetch(\n          `https://api.github.com/repos/${this.env.CONTENT_REPO_OWNER}/${this.env.CONTENT_REPO_NAME}/contents/${path}?ref=${branch}`,\n          { headers: { 'Authorization': `token ${token}`, 'Accept': 'application/vnd.github+json' } }\n        );\n        if (!getResp.ok) {\n          const t = await getResp.text().catch(() => '');\n          throw new Error(`Failed to read existing file for update: ${getResp.status} ${getResp.statusText} - ${t}`);\n        }\n        const { sha } = await getResp.json();\n        const upd = await fetch(\n          `https://api.github.com/repos/${this.env.CONTENT_REPO_OWNER}/${this.env.CONTENT_REPO_NAME}/contents/${path}`,\n          {\n            method: 'PUT',\n            headers: { 'Authorization': `token ${token}`, 'Accept': 'application/vnd.github+json' },\n            body: JSON.stringify({\n              message: `Update daily recap for ${date || new Date().toISOString().split('T')[0]}`,\n              content: this.encodeBase64UnicodeSafe(content),\n              branch,\n              sha,\n            }),\n          }\n        );\n        if (!upd.ok) {\n          const t = await upd.text().catch(() => '');\n          throw new Error(`Failed to update existing file: ${upd.status} ${upd.statusText} - ${t}`);\n        }\n        return;\n      }\n      const body = await response.text().catch(() => '');\n      throw new Error(`Failed to create file: ${response.status} ${response.statusText} - ${body}`);\n    }\n  }\n\n  private async createPullRequest(token: string, branch: string, blogPost: BlogPost): Promise<any> {\n    const response = await fetch(\n      `https://api.github.com/repos/${this.env.CONTENT_REPO_OWNER}/${this.env.CONTENT_REPO_NAME}/pulls`,\n      {\n        method: 'POST',\n        headers: {\n          'Authorization': `token ${token}`,\n          'Accept': 'application/vnd.github.v3+json',\n        },\n        body: JSON.stringify({\n          title: blogPost.title,\n          body: this.generatePRBody(blogPost),\n          head: branch,\n          base: this.env.CONTENT_REPO_STAGING_BRANCH,\n          draft: false,\n        }),\n      }\n    );\n\n    if (!response.ok) {\n      let errorBody: string;\n      try {\n        errorBody = await response.text();\n      } catch {\n        errorBody = 'Unable to read error response body';\n      }\n      throw new Error(`Failed to create PR: ${response.status} ${response.statusText} - ${errorBody}`);\n    }\n\n    return await response.json();\n  }\n\n  private generatePRBody(blogPost: BlogPost): string {\n    const escapeYaml = (str: string) => {\n      // Handle backslashes, quotes, newlines, and carriage returns\n      return str\n        .replace(/\\\\/g, '\\\\\\\\')\n        .replace(/\"/g, '\\\\\"')\n        .replace(/\\n/g, '\\\\n')\n        .replace(/\\r/g, '\\\\r');\n    };\n\n    return `**Date**: ${blogPost.date}\n**Clips**: ${blogPost.clip_count}\n**Status**: Ready for review\n\n### Summary\n${blogPost.intro}\n\n### Clips Included\n${blogPost.sections.map((s: any) => `- ${s.h2}`).join('\\n')}\n\n---\n*Auto-generated by Twitch Clip Recap Pipeline*`;\n  }\n\n  private generateMDX(blogPost: BlogPost): string {\n    const escapeYaml = (str: string) => str.replace(/\"/g, '\\\\\"');\n    const frontMatter = `---\ntitle: \"${escapeYaml(blogPost.title)}\"\ncategory: \"development\"\ntags: ${JSON.stringify(blogPost.tags)}\ndescription: \"${escapeYaml(blogPost.intro)}\"\ndate: \"${blogPost.date}\"\nupdated: \"${blogPost.date}\"\ncanonical: \"https://paulchrisluke.com/blog/development/${blogPost.date}-daily-dev-recap\"\ndraft: false\n---\n\n`;\n\n    const content = `${blogPost.intro}\n\n${blogPost.sections.map((section: any) => `\n## ${section.h2}\n\n${section.bullets.map((bullet: any) => `- ${bullet}`).join('\\n')}\n\n${section.paragraph}\n\n<iframe\n  src=\"${section.clip_url}\"\n  height=\"378\"\n  width=\"620\"\n  frameborder=\"0\"\n  scrolling=\"no\"\n  allowfullscreen=\"true\"\n  sandbox=\"allow-scripts allow-same-origin allow-presentation\">\n</iframe>\n`).join('\\n')}\n\n---\n*Generated from Twitch clips on ${blogPost.date}*`;\n\n    return frontMatter + content;\n  }\n\n  async judgeContent(blogPost: BlogPost): Promise<JudgeResult> {\n    console.log('Judging content...');\n    \n    const prompt = `Evaluate this blog post for quality and developer relevance:\n\nTitle: ${blogPost.title}\nIntro: ${blogPost.intro}\nSections: ${blogPost.sections.length}\nContent: ${blogPost.sections.map((s: any) => s.paragraph).join(' ')}\n\nRate on a scale of 0-100 for each category:\n- Coherence (0-20): Each section stands alone\n- Technical correctness (0-25): Matches transcript/clip content\n- Dev signal (0-20): Clear development milestones\n- Narrative flow (0-15): Setup \u2192 attempt \u2192 result\n- Length/clarity (0-10): Precise, no fluff\n- Safety/compliance (0-10): No secrets/PII\n\nFormat as JSON:\n{\n  \"overall\": 85,\n  \"per_axis\": {\n    \"coherence\": 18,\n    \"correctness\": 22,\n    \"dev_signal\": 17,\n    \"narrative_flow\": 14,\n    \"length\": 8,\n    \"safety\": 6\n  },\n  \"reasons\": [\"reason1\", \"reason2\"],\n  \"action\": \"approve\"\n}`;\n\n    const result = await this.aiService.callWithRetry('@cf/google/gemma-2b-it', {\n      prompt,\n      max_tokens: 500,\n    });\n\n    try {\n      const parsed = this.parseLLMJSON(result.response);\n      \n      // Validate and coerce fields\n      const overall = typeof parsed.overall === 'number' && parsed.overall >= 0 && parsed.overall <= 100 \n        ? parsed.overall : 80;\n      \n      const per_axis = typeof parsed.per_axis === 'object' && parsed.per_axis !== null\n        ? {\n            coherence: typeof parsed.per_axis.coherence === 'number' ? Math.max(0, Math.min(20, parsed.per_axis.coherence)) : 18,\n            correctness: typeof parsed.per_axis.correctness === 'number' ? Math.max(0, Math.min(25, parsed.per_axis.correctness)) : 20,\n            dev_signal: typeof parsed.per_axis.dev_signal === 'number' ? Math.max(0, Math.min(20, parsed.per_axis.dev_signal)) : 16,\n            narrative_flow: typeof parsed.per_axis.narrative_flow === 'number' ? Math.max(0, Math.min(15, parsed.per_axis.narrative_flow)) : 14,\n            length: typeof parsed.per_axis.length === 'number' ? Math.max(0, Math.min(10, parsed.per_axis.length)) : 8,\n            safety: typeof parsed.per_axis.safety === 'number' ? Math.max(0, Math.min(10, parsed.per_axis.safety)) : 6\n          }\n        : {\n            coherence: 18,\n            correctness: 20,\n            dev_signal: 16,\n            narrative_flow: 14,\n            length: 8,\n            safety: 6\n          };\n      \n      const reasons = Array.isArray(parsed.reasons) && parsed.reasons.length > 0\n        ? parsed.reasons.filter((r: any) => typeof r === 'string')\n        : ['AI parsing failed, using fallback'];\n      \n      const action = parsed.action === 'approve' || parsed.action === 'reject' || parsed.action === 'revise'\n        ? parsed.action : 'approve';\n      \n      return {\n        overall,\n        per_axis,\n        reasons,\n        action: action as const\n      };\n    } catch (error) {\n      console.error('AI response parsing failed:', error);\n      // Fallback\n      return {\n        overall: 80,\n        per_axis: {\n          coherence: 18,\n          correctness: 20,\n          dev_signal: 16,\n          narrative_flow: 14,\n          length: 8,\n          safety: 6\n        },\n        reasons: ['AI parsing failed, using fallback'],\n        action: 'approve' as const\n      };\n    }\n  }\n  async updatePRWithJudgeResults(\n    prNumber: number,\n    judgeResult: JudgeResult,\n    headSha?: string\n  ): Promise<void> {\n    console.log(`Updating PR ${prNumber} with judge results...`);\n    \n    const token = await this.getGitHubToken();\n    \n    // Get PR details to find the head SHA if not provided\n    if (!headSha) {\n      const prResponse = await fetch(\n        `https://api.github.com/repos/${this.env.CONTENT_REPO_OWNER}/${this.env.CONTENT_REPO_NAME}/pulls/${prNumber}`,\n        {\n          headers: {\n            'Authorization': `token ${token}`,\n            'Accept': 'application/vnd.github.v3+json',\n          },\n        }\n      );\n      \n      if (!prResponse.ok) {\n        throw new Error(`Failed to get PR details: ${prResponse.statusText}`);\n      }\n      \n      const prData = await prResponse.json() as { head: { sha: string } };\n      headSha = prData.head.sha;\n    }\n    \n    // Create check run\n    const checkRunResponse = await fetch(\n      `https://api.github.com/repos/${this.env.CONTENT_REPO_OWNER}/${this.env.CONTENT_REPO_NAME}/check-runs`,\n      {\n        method: 'POST',\n        headers: {\n          'Authorization': `token ${token}`,\n          'Accept': 'application/vnd.github.v3+json',\n        },\n        body: JSON.stringify({\n          name: 'Content Quality Judge',\n          head_sha: headSha,\n          status: 'completed',\n          completed_at: new Date().toISOString(),\n          conclusion: judgeResult.overall >= 80 ? 'success' : 'neutral',\n          output: {\n            title: `Content Quality Score: ${judgeResult.overall}/100`,\n            summary: `Judge evaluation completed`,\n            text: [\n              '## Judge Results',\n              '',\n              `**Overall Score**: ${judgeResult.overall}/100`,\n              '',\n              '**Breakdown:**',\n              ...Object.entries(judgeResult.per_axis).map(([k, v]) => `- ${k}: ${v}`),\n              '',\n              '**Reasons:**',\n              ...judgeResult.reasons.map((r: any) => `- ${r}`),\n              '',\n              `**Action**: ${judgeResult.action}`,\n            ].join('\\n'),\n          },\n        }),\n      }\n    );\n\n    if (!checkRunResponse.ok) {\n      let errorBody: string;\n      try {\n        errorBody = await checkRunResponse.text();\n      } catch {\n        errorBody = 'Unable to read error response body';\n      }\n      throw new Error(`Failed to create check run: ${checkRunResponse.status} ${checkRunResponse.statusText} - ${errorBody}`);\n    }\n  }\n\n}\n", "// Simple JWT generation for GitHub App authentication using Web Crypto API\n// Note: In production, you'd use a proper JWT library\nexport async function generateJWT(\n  privateKey: string,\n  appId: string,\n  options: { keyId?: string; skewSeconds?: number; ttlSeconds?: number } = {}\n): Promise<string> {\n  if (!privateKey) throw new Error('generateJWT: privateKey is required');\n  if (!appId) throw new Error('generateJWT: appId is required');\n\n  // Support env-stored keys with \"\\n\" escapes\n  const key = privateKey.includes('\\\\n')\n    ? privateKey.replace(/\\\\n/g, '\\n')\n    : privateKey;\n\n  const toBase64Url = (input: string | Uint8Array): string => {\n    const bytes = typeof input === 'string'\n      ? new TextEncoder().encode(input)\n      : input;\n\n    // Prefer Node's Buffer if available; fallback to browser btoa\n    const g: any = typeof globalThis !== 'undefined' ? (globalThis as any) : {};\n    const BufferCtor = g.Buffer;\n    if (BufferCtor) {\n      // Node.js path\n      return BufferCtor.from(bytes)\n        .toString('base64')\n        .replace(/\\+/g, '-')\n        .replace(/\\//g, '_')\n        .replace(/=+$/g, '');\n    }\n    // Browser path\n    let binary = '';\n    for (let i = 0; i < bytes.length; i++) binary += String.fromCharCode(bytes[i]);\n    return btoa(binary)\n      .replace(/\\+/g, '-')\n      .replace(/\\//g, '_')\n      .replace(/=+$/g, '');\n  };\n\n  // Header (kid optional for GitHub App key id)\n  const header = (options.keyId\n    ? { alg: 'RS256', typ: 'JWT', kid: options.keyId }\n    : { alg: 'RS256', typ: 'JWT' }) as const;\n\n  // Backdate iat to avoid clock skew; exp <= iat + 600s (GitHub max)\n  const now = Math.floor(Date.now() / 1000);\n  const skew = Math.max(0, options.skewSeconds ?? 60);\n  const ttl = Math.min(600, Math.max(60, options.ttlSeconds ?? 600));\n  const iat = now - skew;\n  const exp = iat + ttl;\n  if (exp <= now) throw new Error('generateJWT: exp must be in the future');\n  const appIdNum = Number(appId);\n  if (!Number.isInteger(appIdNum) || appIdNum <= 0) {\n    throw new Error('generateJWT: appId must be a positive integer');\n  }\n  const iss = String(appIdNum);\n  const payload = { iat, exp, iss };\n\n  const encodedHeader = toBase64Url(JSON.stringify(header));\n  const encodedPayload = toBase64Url(JSON.stringify(payload));\n  const unsigned = `${encodedHeader}.${encodedPayload}`;\n\n  // Convert PEM private key to CryptoKey\n  const pemHeaderPkcs8 = '-----BEGIN PRIVATE KEY-----';\n  const pemHeaderPkcs1 = '-----BEGIN RSA PRIVATE KEY-----';\n  const pemFooterPkcs8 = '-----END PRIVATE KEY-----';\n  const pemFooterPkcs1 = '-----END RSA PRIVATE KEY-----';\n  \n  // Strip PEM headers/footers and whitespace for both PKCS#8 and PKCS#1 formats\n  let pemContents = key\n    .replace(pemHeaderPkcs8, '')\n    .replace(pemHeaderPkcs1, '')\n    .replace(pemFooterPkcs8, '')\n    .replace(pemFooterPkcs1, '')\n    .replace(/\\s/g, '');\n  \n  const g: any = typeof globalThis !== 'undefined' ? (globalThis as any) : {};\n  const BufferCtor = g.Buffer;\n  const binaryKey = BufferCtor\n    ? new Uint8Array(BufferCtor.from(pemContents, 'base64'))\n    : Uint8Array.from(atob(pemContents), c => c.charCodeAt(0));\n\n  // Get crypto.subtle - Cloudflare Workers environment\n  const cryptoSubtle = (globalThis as any).crypto?.subtle;\n  if (!cryptoSubtle) {\n    throw new Error('Web Crypto API not available');\n  }\n\n  const cryptoKey = await cryptoSubtle.importKey(\n    'pkcs8',\n    binaryKey,\n    {\n      name: 'RSASSA-PKCS1-v1_5',\n      hash: { name: 'SHA-256' },\n    },\n    false,\n    ['sign']\n  );\n\n  // Sign the JWT\n  const signature = await cryptoSubtle.sign(\n    'RSASSA-PKCS1-v1_5',\n    cryptoKey,\n    new TextEncoder().encode(unsigned)\n  );\n\n  return `${unsigned}.${toBase64Url(new Uint8Array(signature))}`;\n}\n", "import { Environment, JudgeResult } from '../types/index.js';\n\ninterface DiscordEmbed {\n  title: string;\n  description?: string;\n  color?: number;\n  fields?: Array<{\n    name: string;\n    value: string;\n    inline?: boolean;\n  }>;\n  footer?: {\n    text: string;\n  };\n  timestamp?: string;\n}\n\nexport class DiscordService {\n  constructor(private env: Environment) {}\n\n  async notifyPRCreated(pr: any, judgeResult: JudgeResult, clipCount: number): Promise<void> {\n    console.log(`Notifying Discord about PR ${pr.number} with ${clipCount} clips...`);\n    \n    const embed: DiscordEmbed = {\n      title: '\uD83C\uDFAC Daily Dev Recap Ready for Review',\n      description: `A new daily development recap has been generated and is ready for review!`,\n      color: judgeResult.overall >= 80 ? 0x00ff00 : 0xffa500, // Green if good, orange if needs review\n      fields: [\n        {\n          name: '\uD83D\uDCCA Quality Score',\n          value: `${judgeResult.overall}/100`,\n          inline: true\n        },\n        {\n          name: '\uD83C\uDFA5 Clips Included',\n          value: `${clipCount} clips`,\n          inline: true\n        },\n        {\n          name: '\uD83D\uDCDD Status',\n          value: judgeResult.action === 'approve' ? '\u2705 Ready to merge' : '\u26A0\uFE0F Needs review',\n          inline: true\n        },\n        {\n          name: '\uD83D\uDD17 Pull Request',\n          value: `[View PR #${pr.number}](${pr.html_url})`,\n          inline: false\n        }\n      ],\n      footer: {\n        text: 'Twitch Clip Recap Pipeline'\n      },\n      timestamp: new Date().toISOString()\n    };\n\n    await this.sendDiscordMessage(embed);\n  }\n\n  async notifyError(error: any): Promise<void> {\n    console.log('Sending error notification to Discord...');\n    \n    const embed: DiscordEmbed = {\n      title: '\u274C Pipeline Error',\n      description: 'The daily clip recap pipeline encountered an error.',\n      color: 0xff0000, // Red\n      fields: [\n        {\n          name: '\uD83D\uDEA8 Error Details',\n          value: error.message || 'Unknown error occurred',\n          inline: false\n        }\n      ],\n      footer: {\n        text: 'Twitch Clip Recap Pipeline'\n      },\n      timestamp: new Date().toISOString()\n    };\n\n    await this.sendDiscordMessage(embed);\n  }\n\n  async notifyTokenValidationErrors(errors: string[]): Promise<void> {\n    console.log('Sending token validation error notification to Discord...');\n    \n    const embed: DiscordEmbed = {\n      title: '\uD83D\uDD10 Token Validation Failed',\n      description: 'One or more API tokens failed validation during the hourly check.',\n      color: 0xff6b35, // Orange-red\n      fields: errors.map((error, index) => ({\n        name: `Error ${index + 1}`,\n        value: error,\n        inline: false\n      })),\n      footer: {\n        text: 'Twitch Clip Recap Pipeline - Token Validation'\n      },\n      timestamp: new Date().toISOString()\n    };\n\n    await this.sendDiscordMessage(embed);\n  }\n\n  private async sendDiscordMessage(embed: DiscordEmbed): Promise<void> {\n    // validate Discord config before issuing API request\n    if (!this.env.DISCORD_REVIEW_CHANNEL_ID || !this.env.DISCORD_BOT_TOKEN) {\n      throw new Error(\n        'Discord configuration missing: DISCORD_REVIEW_CHANNEL_ID and DISCORD_BOT_TOKEN are required'\n      );\n    }\n\n    const message = {\n      embeds: [embed]\n    };\n\n    const controller = new AbortController();\n    const timeout = setTimeout(() => controller.abort(), 10_000);\n    try {\n      const doPost = async () =>\n        fetch(\n          `https://discord.com/api/v10/channels/${this.env.DISCORD_REVIEW_CHANNEL_ID}/messages`,\n          {\n            method: 'POST',\n            headers: {\n              Authorization: `Bot ${this.env.DISCORD_BOT_TOKEN}`,\n              'Content-Type': 'application/json',\n            },\n            body: JSON.stringify(message),\n            signal: controller.signal,\n          }\n        );\n\n      let response = await doPost();\n      if (response.status === 429) {\n        const { retry_after } = await response.json().catch(() => ({ retry_after: 1 })) as { retry_after: number };\n        const ms = Math.ceil((retry_after ?? 1) * 1000);\n        console.warn(`Discord rate limited. Retrying after ${ms}ms...`);\n        await new Promise((r) => setTimeout(r, ms));\n        response = await doPost();\n      }\n\n      if (!response.ok) {\n        const errBody = await response.text().catch(() => '');\n        console.error(`Failed to send Discord message: ${response.status} ${response.statusText} ${errBody}`);\n        throw new Error(`Discord API error: ${response.status} ${response.statusText}`);\n      }\n\n      const resJson = await response.json().catch(() => null) as { id?: string } | null;\n      console.log(\n        `Discord notification sent successfully${\n          resJson?.id ? ` (message id: ${resJson.id})` : ''\n        }`\n      );\n    } finally {\n      clearTimeout(timeout);\n    }\n  }\n}\n", "import { Environment } from '../types/index.js';\n\nexport async function handleWebhook(\n  request: Request,\n  env: Environment,\n  ctx: ExecutionContext\n): Promise<Response> {\n  try {\n    // Read raw bytes to ensure HMAC matches GitHub's calculation\n    const bodyBytes = await request.arrayBuffer();\n    const signature = request.headers.get('x-hub-signature-256');\n    if (!env.GITHUB_WEBHOOK_SECRET) {\n      console.error('Missing GITHUB_WEBHOOK_SECRET');\n      return new Response('Internal Server Error', { status: 500 });\n    }\n\n    // Verify webhook signature\n    if (!(await verifyWebhookSignature(bodyBytes, signature, env.GITHUB_WEBHOOK_SECRET))) {\n      return new Response('Unauthorized', { status: 401 });\n    }\n\n    const event = request.headers.get('x-github-event');\n    if (!event) {\n      return new Response('Bad Request: Missing x-github-event', { status: 400 });\n    }\n    let payload: any;\n    try {\n      payload = JSON.parse(new TextDecoder().decode(bodyBytes));\n    } catch (e) {\n      console.error('Invalid JSON payload', e);\n      return new Response('Bad Request: Invalid JSON', { status: 400 });\n    }\n\n    const delivery = request.headers.get('x-github-delivery');\n    console.log(`Received GitHub webhook: ${event} (delivery: ${delivery})`);\n\n    switch (event) {\n      case 'pull_request': {\n        return await handlePullRequestEvent(payload, env);\n      }\n      case 'check_run': {\n        return await handleCheckRunEvent(payload, env);\n      }\n      default: {\n        console.log(`Unhandled event type: ${event}`);\n        return new Response(null, { status: 204 });\n      }\n    }\n  } catch (error) {\n    console.error('Webhook handler error:', error);\n    return new Response('Internal Server Error', { status: 500 });\n  }\n}\n\nasync function verifyWebhookSignature(\n  body: ArrayBuffer,\n  signature: string | null,\n  secret: string\n): Promise<boolean> {\n  try {\n    // Reject null or malformed signatures\n    if (!signature || !signature.startsWith('sha256=')) {\n      return false;\n    }\n\n    // Extract the signature value (remove 'sha256=' prefix)\n    const signatureValue = signature.substring(7);\n\n    // Validate signature format (should be 64 hex characters)\n    if (!/^[a-f0-9]{64}$/i.test(signatureValue)) {\n      return false;\n    }\n\n    // Convert secret to key\n    const encoder = new TextEncoder();\n    const keyData = encoder.encode(secret);\n\n    // Import key for HMAC verification\n    const key = await crypto.subtle.importKey(\n      'raw',\n      keyData,\n      { name: 'HMAC', hash: 'SHA-256' },\n      false,\n      ['verify']\n    );\n\n    // Decode provided hex signature into bytes\n    const sigBytes = new Uint8Array(\n      signatureValue.match(/.{1,2}/g)!.map(h => parseInt(h, 16))\n    );\n\n    // Timing-safe HMAC-SHA256 verification on raw bytes\n    return crypto.subtle.verify('HMAC', key, sigBytes, body);\n  } catch (error) {\n    // Return false on any parsing/verification error\n    console.error('Webhook signature verification error:', error);\n    return false;\n  }\n}\n\nasync function handlePullRequestEvent(payload: any, env: Environment): Promise<Response> {\n  const { action, pull_request } = payload;\n  \n  console.log(`PR ${action}: #${pull_request.number} - ${pull_request.title}`);\n  \n  // Handle PR events (merged, closed, etc.)\n  if (action === 'closed' && pull_request.merged) {\n    console.log(`PR #${pull_request.number} was merged`);\n    // Could trigger additional actions here\n  }\n  \n  return new Response('OK', { status: 200 });\n}\n\nasync function handleCheckRunEvent(payload: any, env: Environment): Promise<Response> {\n  const { action, check_run } = payload;\n  \n  console.log(`Check run ${action}: ${check_run.name} - ${check_run.conclusion}`);\n  \n  // Handle check run events\n  if (action === 'completed') {\n    console.log(`Check run completed: ${check_run.name} with conclusion: ${check_run.conclusion}`);\n  }\n  \n  return new Response('OK', { status: 200 });\n}\n", "import { GitHubService } from '../services/github.js';\n\n// CORS headers for all responses\nconst corsHeaders = {\n  'Access-Control-Allow-Origin': '*',\n  'Access-Control-Allow-Methods': 'GET, POST, OPTIONS',\n  'Access-Control-Allow-Headers': 'Content-Type, Authorization',\n  'Access-Control-Max-Age': '86400',\n};\n\n// Helper function to create JSON error responses with CORS headers\nfunction createErrorResponse(status: number, message: string): Response {\n  return new Response(JSON.stringify({ error: message }), {\n    status,\n    headers: {\n      'Content-Type': 'application/json',\n      ...corsHeaders,\n    },\n  });\n}\n\n// Helper function to create success responses with CORS headers\nfunction createSuccessResponse(data: any, status: number = 200): Response {\n  return new Response(JSON.stringify(data, null, 2), {\n    status,\n    headers: {\n      'Content-Type': 'application/json',\n      ...corsHeaders,\n    },\n  });\n}\n\nexport async function handleGitHubRequest(request: Request, env: any): Promise<Response> {\n  try {\n    // Handle CORS preflight requests\n    if (request.method === 'OPTIONS') {\n      // Read incoming CORS request headers\n      const requestHeaders = request.headers.get('Access-Control-Request-Headers');\n      const requestMethod = request.headers.get('Access-Control-Request-Method');\n      \n      // Define supported methods for this endpoint\n      const supportedMethods = ['GET', 'POST'];\n      \n      // Build dynamic CORS headers\n      const dynamicCorsHeaders = {\n        'Access-Control-Allow-Origin': '*',\n        'Access-Control-Max-Age': '86400',\n      };\n      \n      // Echo back the requested method if it's supported, otherwise use default\n      if (requestMethod && supportedMethods.includes(requestMethod.toUpperCase())) {\n        dynamicCorsHeaders['Access-Control-Allow-Methods'] = requestMethod.toUpperCase();\n      } else {\n        dynamicCorsHeaders['Access-Control-Allow-Methods'] = 'GET, POST';\n      }\n      \n      // Echo back the requested headers if provided, otherwise use default\n      if (requestHeaders) {\n        dynamicCorsHeaders['Access-Control-Allow-Headers'] = requestHeaders;\n      } else {\n        dynamicCorsHeaders['Access-Control-Allow-Headers'] = 'Content-Type, Authorization';\n      }\n      \n      return new Response(null, {\n        status: 204,\n        headers: dynamicCorsHeaders,\n      });\n    }\n\n    const url = new URL(request.url);\n    // Normalize path by stripping trailing slash\n    let path = url.pathname;\n    if (path.endsWith('/') && path !== '/') {\n      path = path.slice(0, -1);\n    }\n\n    // Get GitHub tokens from environment\n    const tokens = {\n      GITHUB_TOKEN_PAULCHRISLUKE: env.GITHUB_TOKEN_PAULCHRISLUKE,\n      GITHUB_TOKEN_BLAWBY: env.GITHUB_TOKEN_BLAWBY,\n    };\n\n    // Check if all required tokens are available\n    const missingTokens = Object.entries(tokens)\n      .filter(([key, token]) => !token)\n      .map(([key]) => key);\n\n    if (missingTokens.length > 0) {\n      // Log the missing tokens server-side for debugging\n      console.error(`Missing GitHub tokens: ${missingTokens.join(', ')}`);\n      // Return generic error to client to avoid exposing secret names\n      return createErrorResponse(500, 'Internal server error');\n    }\n\n    const githubService = new GitHubService(tokens);\n\n    switch (path) {\n      case '/api/github/activity': {\n        // Check if method is allowed for this endpoint\n        if (request.method !== 'GET') {\n          return createErrorResponse(405, 'Method Not Allowed');\n        }\n        return await handleActivity(githubService);\n      }\n      \n      default: {\n        return createErrorResponse(404, 'Not found');\n      }\n    }\n  } catch (error) {\n    console.error('GitHub route error:', error);\n    return createErrorResponse(500, 'Internal server error');\n  }\n}\n\nasync function handleActivity(githubService: GitHubService): Promise<Response> {\n  try {\n    const activity = await githubService.gatherDailyActivity();\n    return createSuccessResponse(activity);\n  } catch (error) {\n    console.error('Error gathering activity:', error);\n    return createErrorResponse(500, 'Error gathering activity');\n  }\n}\n", "import { Octokit } from '@octokit/rest';\nimport reposConfig from '../config/repos.json';\n\n// Type for GitHub pull request with optional stats\ninterface GitHubPullRequest {\n  number: number;\n  title: string;\n  state: string;\n  user?: { login: string } | null;\n  created_at: string;\n  updated_at: string;\n  html_url: string;\n  additions?: number;\n  deletions?: number;\n  changed_files?: number;\n}\n\ninterface Repository {\n  name: string;\n  owner: string;\n  type: string;\n  enabled: boolean;\n  description: string;\n  tokenKey: string;\n}\n\ninterface GitActivity {\n  repository: string;\n  owner: string;\n  commits: CommitInfo[];\n  pullRequests: PRInfo[];\n  issues: IssueInfo[];\n  releases: ReleaseInfo[];\n  summary: {\n    totalCommits: number;\n    totalPRs: number;\n    totalIssues: number;\n    totalReleases: number;\n    topContributors: string[];\n  };\n}\n\ninterface CommitInfo {\n  sha: string;\n  message: string;\n  author: string;\n  date: string;\n  url: string;\n  filesChanged: number;\n  additions: number;\n  deletions: number;\n}\n\ninterface PRInfo {\n  number: number;\n  title: string;\n  state: string;\n  author: string;\n  createdAt: string;\n  updatedAt: string;\n  url: string;\n  additions: number;\n  deletions: number;\n  changedFiles: number;\n}\n\ninterface IssueInfo {\n  number: number;\n  title: string;\n  state: string;\n  author: string;\n  createdAt: string;\n  updatedAt: string;\n  url: string;\n  labels: string[];\n}\n\ninterface ReleaseInfo {\n  id: number;\n  name: string;\n  tagName: string;\n  publishedAt: string;\n  url: string;\n  description: string;\n}\n\nexport class GitHubService {\n  private config: typeof reposConfig;\n  private tokens: Record<string, string>;\n\n  constructor(tokens: Record<string, string>) {\n    this.tokens = tokens;\n    this.config = reposConfig;\n  }\n\n  private getOctokitForRepo(repo: Repository): Octokit {\n    const token = this.tokens[repo.tokenKey];\n    if (!token) {\n      throw new Error(`No token found for repository ${repo.owner}/${repo.name} (key: ${repo.tokenKey})`);\n    }\n    return new Octokit({\n      auth: token,\n    });\n  }\n\n  async gatherDailyActivity(): Promise<GitActivity[]> {\n    const activities: GitActivity[] = [];\n    const lookbackDate = new Date();\n    lookbackDate.setHours(lookbackDate.getHours() - this.config.settings.lookbackHours);\n\n    for (const repo of this.config.repositories) {\n      if (!repo.enabled) continue;\n\n      try {\n        const activity = await this.getRepositoryActivity(repo, lookbackDate);\n        activities.push(activity);\n      } catch (error) {\n        console.error(`Error gathering activity for ${repo.owner}/${repo.name}:`, error);\n      }\n    }\n\n    return activities;\n  }\n\n  private async getRepositoryActivity(repo: Repository, since: Date): Promise<GitActivity> {\n    const [commits, pullRequests, issues, releases] = await Promise.all([\n      this.getCommits(repo, since),\n      this.getPullRequests(repo, since),\n      this.getIssues(repo, since),\n      this.getReleases(repo, since),\n    ]);\n\n    const topContributors = this.getTopContributors(commits);\n\n    return {\n      repository: repo.name,\n      owner: repo.owner,\n      commits,\n      pullRequests,\n      issues,\n      releases,\n      summary: {\n        totalCommits: commits.length,\n        totalPRs: pullRequests.length,\n        totalIssues: issues.length,\n        totalReleases: releases.length,\n        topContributors,\n      },\n    };\n  }\n\n  private async getCommits(repo: Repository, since: Date): Promise<CommitInfo[]> {\n    const octokit = this.getOctokitForRepo(repo);\n    const { data: commits } = await octokit.repos.listCommits({\n      owner: repo.owner,\n      repo: repo.name,\n      since: since.toISOString(),\n      per_page: this.config.settings.maxCommitsPerRepo,\n    });\n\n    return commits\n      .filter(commit => this.shouldIncludeCommit(commit.commit.message))\n      .map(commit => ({\n        sha: commit.sha,\n        message: commit.commit.message,\n        author: commit.commit.author?.name || commit.author?.login || 'Unknown',\n        date: commit.commit.author?.date || '',\n        url: commit.html_url,\n        filesChanged: 0, // Would need additional API call to get this\n        additions: 0, // Would need additional API call to get this\n        deletions: 0, // Would need additional API call to get this\n      }));\n  }\n\n  private async getPullRequests(repo: Repository, since: Date): Promise<PRInfo[]> {\n    const octokit = this.getOctokitForRepo(repo);\n    const { data: prs } = await octokit.pulls.list({\n      owner: repo.owner,\n      repo: repo.name,\n      state: 'all',\n      sort: 'updated',\n      direction: 'desc',\n      per_page: this.config.settings.maxPRsPerRepo,\n    });\n\n    return (prs as GitHubPullRequest[])\n      .filter(pr => new Date(pr.updated_at) >= since)\n      .map(pr => ({\n        number: pr.number,\n        title: pr.title,\n        state: pr.state,\n        author: pr.user?.login || 'Unknown',\n        createdAt: pr.created_at,\n        updatedAt: pr.updated_at,\n        url: pr.html_url,\n        additions: pr.additions ?? 0,\n        deletions: pr.deletions ?? 0,\n        changedFiles: pr.changed_files ?? 0,\n      }));\n  }\n\n  private async getIssues(repo: Repository, since: Date): Promise<IssueInfo[]> {\n    if (!this.config.settings.includeIssues) return [];\n\n    const octokit = this.getOctokitForRepo(repo);\n    const { data: issues } = await octokit.issues.listForRepo({\n      owner: repo.owner,\n      repo: repo.name,\n      state: 'all',\n      sort: 'updated',\n      direction: 'desc',\n      per_page: 50,\n    });\n\n    return issues\n      .filter(issue => !issue.pull_request && new Date(issue.updated_at) >= since)\n      .map(issue => ({\n        number: issue.number,\n        title: issue.title,\n        state: issue.state,\n        author: issue.user?.login || 'Unknown',\n        createdAt: issue.created_at,\n        updatedAt: issue.updated_at,\n        url: issue.html_url,\n        labels: issue.labels.map(label => typeof label === 'string' ? label : label.name || ''),\n      }));\n  }\n\n  private async getReleases(repo: Repository, since: Date): Promise<ReleaseInfo[]> {\n    if (!this.config.settings.includeReleases) return [];\n\n    const octokit = this.getOctokitForRepo(repo);\n    const { data: releases } = await octokit.repos.listReleases({\n      owner: repo.owner,\n      repo: repo.name,\n      per_page: 10,\n    });\n\n    return releases\n      .filter(release => release.published_at && new Date(release.published_at) >= since)\n      .map(release => ({\n        id: release.id,\n        name: release.name || release.tag_name,\n        tagName: release.tag_name,\n        publishedAt: release.published_at || '',\n        url: release.html_url,\n        description: release.body || '',\n      }));\n  }\n\n  private shouldIncludeCommit(message: string): boolean {\n    const excludePatterns = this.config.settings.filterPatterns.excludePatterns;\n    return !excludePatterns.some((pattern: string) => {\n      try {\n        return new RegExp(pattern).test(message);\n      } catch (error) {\n        console.error(`Invalid regex pattern: ${pattern}`, error);\n        return false;\n      }\n    });\n  }\n\n  private getTopContributors(commits: CommitInfo[]): string[] {\n    const contributorCounts = commits.reduce((acc, commit) => {\n      acc[commit.author] = (acc[commit.author] || 0) + 1;\n      return acc;\n    }, {} as Record<string, number>);\n\n    return Object.entries(contributorCounts)\n      .sort(([, a], [, b]) => b - a)\n      .slice(0, 5)\n      .map(([author]) => author);\n  }\n\n\n}\n", "import { Octokit as Core } from \"@octokit/core\";\nimport { requestLog } from \"@octokit/plugin-request-log\";\nimport {\n  paginateRest\n} from \"@octokit/plugin-paginate-rest\";\nimport { legacyRestEndpointMethods } from \"@octokit/plugin-rest-endpoint-methods\";\nimport { VERSION } from \"./version.js\";\nconst Octokit = Core.plugin(requestLog, legacyRestEndpointMethods, paginateRest).defaults(\n  {\n    userAgent: `octokit-rest.js/${VERSION}`\n  }\n);\nexport {\n  Octokit\n};\n", "import { getUserAgent } from \"universal-user-agent\";\nimport Hook from \"before-after-hook\";\nimport { request } from \"@octokit/request\";\nimport { withCustomRequest } from \"@octokit/graphql\";\nimport { createTokenAuth } from \"@octokit/auth-token\";\nimport { VERSION } from \"./version.js\";\nconst noop = () => {\n};\nconst consoleWarn = console.warn.bind(console);\nconst consoleError = console.error.bind(console);\nfunction createLogger(logger = {}) {\n  if (typeof logger.debug !== \"function\") {\n    logger.debug = noop;\n  }\n  if (typeof logger.info !== \"function\") {\n    logger.info = noop;\n  }\n  if (typeof logger.warn !== \"function\") {\n    logger.warn = consoleWarn;\n  }\n  if (typeof logger.error !== \"function\") {\n    logger.error = consoleError;\n  }\n  return logger;\n}\nconst userAgentTrail = `octokit-core.js/${VERSION} ${getUserAgent()}`;\nclass Octokit {\n  static VERSION = VERSION;\n  static defaults(defaults) {\n    const OctokitWithDefaults = class extends this {\n      constructor(...args) {\n        const options = args[0] || {};\n        if (typeof defaults === \"function\") {\n          super(defaults(options));\n          return;\n        }\n        super(\n          Object.assign(\n            {},\n            defaults,\n            options,\n            options.userAgent && defaults.userAgent ? {\n              userAgent: `${options.userAgent} ${defaults.userAgent}`\n            } : null\n          )\n        );\n      }\n    };\n    return OctokitWithDefaults;\n  }\n  static plugins = [];\n  /**\n   * Attach a plugin (or many) to your Octokit instance.\n   *\n   * @example\n   * const API = Octokit.plugin(plugin1, plugin2, plugin3, ...)\n   */\n  static plugin(...newPlugins) {\n    const currentPlugins = this.plugins;\n    const NewOctokit = class extends this {\n      static plugins = currentPlugins.concat(\n        newPlugins.filter((plugin) => !currentPlugins.includes(plugin))\n      );\n    };\n    return NewOctokit;\n  }\n  constructor(options = {}) {\n    const hook = new Hook.Collection();\n    const requestDefaults = {\n      baseUrl: request.endpoint.DEFAULTS.baseUrl,\n      headers: {},\n      request: Object.assign({}, options.request, {\n        // @ts-ignore internal usage only, no need to type\n        hook: hook.bind(null, \"request\")\n      }),\n      mediaType: {\n        previews: [],\n        format: \"\"\n      }\n    };\n    requestDefaults.headers[\"user-agent\"] = options.userAgent ? `${options.userAgent} ${userAgentTrail}` : userAgentTrail;\n    if (options.baseUrl) {\n      requestDefaults.baseUrl = options.baseUrl;\n    }\n    if (options.previews) {\n      requestDefaults.mediaType.previews = options.previews;\n    }\n    if (options.timeZone) {\n      requestDefaults.headers[\"time-zone\"] = options.timeZone;\n    }\n    this.request = request.defaults(requestDefaults);\n    this.graphql = withCustomRequest(this.request).defaults(requestDefaults);\n    this.log = createLogger(options.log);\n    this.hook = hook;\n    if (!options.authStrategy) {\n      if (!options.auth) {\n        this.auth = async () => ({\n          type: \"unauthenticated\"\n        });\n      } else {\n        const auth = createTokenAuth(options.auth);\n        hook.wrap(\"request\", auth.hook);\n        this.auth = auth;\n      }\n    } else {\n      const { authStrategy, ...otherOptions } = options;\n      const auth = authStrategy(\n        Object.assign(\n          {\n            request: this.request,\n            log: this.log,\n            // we pass the current octokit instance as well as its constructor options\n            // to allow for authentication strategies that return a new octokit instance\n            // that shares the same internal state as the current one. The original\n            // requirement for this was the \"event-octokit\" authentication strategy\n            // of https://github.com/probot/octokit-auth-probot.\n            octokit: this,\n            octokitOptions: otherOptions\n          },\n          options.auth\n        )\n      );\n      hook.wrap(\"request\", auth.hook);\n      this.auth = auth;\n    }\n    const classConstructor = this.constructor;\n    for (let i = 0; i < classConstructor.plugins.length; ++i) {\n      Object.assign(this, classConstructor.plugins[i](this, options));\n    }\n  }\n  // assigned during constructor\n  request;\n  graphql;\n  log;\n  hook;\n  // TODO: type `octokit.auth` based on passed options.authStrategy\n  auth;\n}\nexport {\n  Octokit\n};\n", "export function getUserAgent() {\n  if (typeof navigator === \"object\" && \"userAgent\" in navigator) {\n    return navigator.userAgent;\n  }\n\n  if (typeof process === \"object\" && process.version !== undefined) {\n    return `Node.js/${process.version.substr(1)} (${process.platform}; ${\n      process.arch\n    })`;\n  }\n\n  return \"<environment undetectable>\";\n}\n", "// @ts-check\n\nimport { register } from \"./lib/register.js\";\nimport { addHook } from \"./lib/add.js\";\nimport { removeHook } from \"./lib/remove.js\";\n\n// bind with array of arguments: https://stackoverflow.com/a/21792913\nconst bind = Function.bind;\nconst bindable = bind.bind(bind);\n\nfunction bindApi(hook, state, name) {\n  const removeHookRef = bindable(removeHook, null).apply(\n    null,\n    name ? [state, name] : [state]\n  );\n  hook.api = { remove: removeHookRef };\n  hook.remove = removeHookRef;\n  [\"before\", \"error\", \"after\", \"wrap\"].forEach((kind) => {\n    const args = name ? [state, kind, name] : [state, kind];\n    hook[kind] = hook.api[kind] = bindable(addHook, null).apply(null, args);\n  });\n}\n\nfunction Singular() {\n  const singularHookName = Symbol(\"Singular\");\n  const singularHookState = {\n    registry: {},\n  };\n  const singularHook = register.bind(null, singularHookState, singularHookName);\n  bindApi(singularHook, singularHookState, singularHookName);\n  return singularHook;\n}\n\nfunction Collection() {\n  const state = {\n    registry: {},\n  };\n\n  const hook = register.bind(null, state);\n  bindApi(hook, state);\n\n  return hook;\n}\n\nexport default { Singular, Collection };\n", "// @ts-check\n\nexport function register(state, name, method, options) {\n  if (typeof method !== \"function\") {\n    throw new Error(\"method for before hook must be a function\");\n  }\n\n  if (!options) {\n    options = {};\n  }\n\n  if (Array.isArray(name)) {\n    return name.reverse().reduce((callback, name) => {\n      return register.bind(null, state, name, callback, options);\n    }, method)();\n  }\n\n  return Promise.resolve().then(() => {\n    if (!state.registry[name]) {\n      return method(options);\n    }\n\n    return state.registry[name].reduce((method, registered) => {\n      return registered.hook.bind(null, method, options);\n    }, method)();\n  });\n}\n", "// @ts-check\n\nexport function addHook(state, kind, name, hook) {\n  const orig = hook;\n  if (!state.registry[name]) {\n    state.registry[name] = [];\n  }\n\n  if (kind === \"before\") {\n    hook = (method, options) => {\n      return Promise.resolve()\n        .then(orig.bind(null, options))\n        .then(method.bind(null, options));\n    };\n  }\n\n  if (kind === \"after\") {\n    hook = (method, options) => {\n      let result;\n      return Promise.resolve()\n        .then(method.bind(null, options))\n        .then((result_) => {\n          result = result_;\n          return orig(result, options);\n        })\n        .then(() => {\n          return result;\n        });\n    };\n  }\n\n  if (kind === \"error\") {\n    hook = (method, options) => {\n      return Promise.resolve()\n        .then(method.bind(null, options))\n        .catch((error) => {\n          return orig(error, options);\n        });\n    };\n  }\n\n  state.registry[name].push({\n    hook: hook,\n    orig: orig,\n  });\n}\n", "// @ts-check\n\nexport function removeHook(state, name, method) {\n  if (!state.registry[name]) {\n    return;\n  }\n\n  const index = state.registry[name]\n    .map((registered) => {\n      return registered.orig;\n    })\n    .indexOf(method);\n\n  if (index === -1) {\n    return;\n  }\n\n  state.registry[name].splice(index, 1);\n}\n", "// pkg/dist-src/index.js\nimport { endpoint } from \"@octokit/endpoint\";\n\n// pkg/dist-src/defaults.js\nimport { getUserAgent } from \"universal-user-agent\";\n\n// pkg/dist-src/version.js\nvar VERSION = \"9.2.4\";\n\n// pkg/dist-src/defaults.js\nvar defaults_default = {\n  headers: {\n    \"user-agent\": `octokit-request.js/${VERSION} ${getUserAgent()}`\n  }\n};\n\n// pkg/dist-src/fetch-wrapper.js\nimport { safeParse } from \"fast-content-type-parse\";\n\n// pkg/dist-src/is-plain-object.js\nfunction isPlainObject(value) {\n  if (typeof value !== \"object\" || value === null) return false;\n  if (Object.prototype.toString.call(value) !== \"[object Object]\") return false;\n  const proto = Object.getPrototypeOf(value);\n  if (proto === null) return true;\n  const Ctor = Object.prototype.hasOwnProperty.call(proto, \"constructor\") && proto.constructor;\n  return typeof Ctor === \"function\" && Ctor instanceof Ctor && Function.prototype.call(Ctor) === Function.prototype.call(value);\n}\n\n// pkg/dist-src/fetch-wrapper.js\nimport { RequestError } from \"@octokit/request-error\";\nasync function fetchWrapper(requestOptions) {\n  const fetch = requestOptions.request?.fetch || globalThis.fetch;\n  if (!fetch) {\n    throw new Error(\n      \"fetch is not set. Please pass a fetch implementation as new Octokit({ request: { fetch }}). Learn more at https://github.com/octokit/octokit.js/#fetch-missing\"\n    );\n  }\n  const log = requestOptions.request?.log || console;\n  const parseSuccessResponseBody = requestOptions.request?.parseSuccessResponseBody !== false;\n  const body = isPlainObject(requestOptions.body) || Array.isArray(requestOptions.body) ? JSON.stringify(requestOptions.body) : requestOptions.body;\n  const requestHeaders = Object.fromEntries(\n    Object.entries(requestOptions.headers).map(([name, value]) => [\n      name,\n      String(value)\n    ])\n  );\n  let fetchResponse;\n  try {\n    fetchResponse = await fetch(requestOptions.url, {\n      method: requestOptions.method,\n      body,\n      redirect: requestOptions.request?.redirect,\n      headers: requestHeaders,\n      signal: requestOptions.request?.signal,\n      // duplex must be set if request.body is ReadableStream or Async Iterables.\n      // See https://fetch.spec.whatwg.org/#dom-requestinit-duplex.\n      ...requestOptions.body && { duplex: \"half\" }\n    });\n  } catch (error) {\n    let message = \"Unknown Error\";\n    if (error instanceof Error) {\n      if (error.name === \"AbortError\") {\n        error.status = 500;\n        throw error;\n      }\n      message = error.message;\n      if (error.name === \"TypeError\" && \"cause\" in error) {\n        if (error.cause instanceof Error) {\n          message = error.cause.message;\n        } else if (typeof error.cause === \"string\") {\n          message = error.cause;\n        }\n      }\n    }\n    const requestError = new RequestError(message, 500, {\n      request: requestOptions\n    });\n    requestError.cause = error;\n    throw requestError;\n  }\n  const status = fetchResponse.status;\n  const url = fetchResponse.url;\n  const responseHeaders = {};\n  for (const [key, value] of fetchResponse.headers) {\n    responseHeaders[key] = value;\n  }\n  const octokitResponse = {\n    url,\n    status,\n    headers: responseHeaders,\n    data: \"\"\n  };\n  if (\"deprecation\" in responseHeaders) {\n    const matches = responseHeaders.link && responseHeaders.link.match(/<([^<>]+)>; rel=\"deprecation\"/);\n    const deprecationLink = matches && matches.pop();\n    log.warn(\n      `[@octokit/request] \"${requestOptions.method} ${requestOptions.url}\" is deprecated. It is scheduled to be removed on ${responseHeaders.sunset}${deprecationLink ? `. See ${deprecationLink}` : \"\"}`\n    );\n  }\n  if (status === 204 || status === 205) {\n    return octokitResponse;\n  }\n  if (requestOptions.method === \"HEAD\") {\n    if (status < 400) {\n      return octokitResponse;\n    }\n    throw new RequestError(fetchResponse.statusText, status, {\n      response: octokitResponse,\n      request: requestOptions\n    });\n  }\n  if (status === 304) {\n    octokitResponse.data = await getResponseData(fetchResponse);\n    throw new RequestError(\"Not modified\", status, {\n      response: octokitResponse,\n      request: requestOptions\n    });\n  }\n  if (status >= 400) {\n    octokitResponse.data = await getResponseData(fetchResponse);\n    throw new RequestError(toErrorMessage(octokitResponse.data), status, {\n      response: octokitResponse,\n      request: requestOptions\n    });\n  }\n  octokitResponse.data = parseSuccessResponseBody ? await getResponseData(fetchResponse) : fetchResponse.body;\n  return octokitResponse;\n}\nasync function getResponseData(response) {\n  const contentType = response.headers.get(\"content-type\");\n  if (!contentType) {\n    return response.text().catch(() => \"\");\n  }\n  const mimetype = safeParse(contentType);\n  if (isJSONResponse(mimetype)) {\n    let text = \"\";\n    try {\n      text = await response.text();\n      return JSON.parse(text);\n    } catch (err) {\n      return text;\n    }\n  } else if (mimetype.type.startsWith(\"text/\") || mimetype.parameters.charset?.toLowerCase() === \"utf-8\") {\n    return response.text().catch(() => \"\");\n  } else {\n    return response.arrayBuffer().catch(() => new ArrayBuffer(0));\n  }\n}\nfunction isJSONResponse(mimetype) {\n  return mimetype.type === \"application/json\" || mimetype.type === \"application/scim+json\";\n}\nfunction toErrorMessage(data) {\n  if (typeof data === \"string\") {\n    return data;\n  }\n  if (data instanceof ArrayBuffer) {\n    return \"Unknown error\";\n  }\n  if (\"message\" in data) {\n    const suffix = \"documentation_url\" in data ? ` - ${data.documentation_url}` : \"\";\n    return Array.isArray(data.errors) ? `${data.message}: ${data.errors.map((v) => JSON.stringify(v)).join(\", \")}${suffix}` : `${data.message}${suffix}`;\n  }\n  return `Unknown error: ${JSON.stringify(data)}`;\n}\n\n// pkg/dist-src/with-defaults.js\nfunction withDefaults(oldEndpoint, newDefaults) {\n  const endpoint2 = oldEndpoint.defaults(newDefaults);\n  const newApi = function(route, parameters) {\n    const endpointOptions = endpoint2.merge(route, parameters);\n    if (!endpointOptions.request || !endpointOptions.request.hook) {\n      return fetchWrapper(endpoint2.parse(endpointOptions));\n    }\n    const request2 = (route2, parameters2) => {\n      return fetchWrapper(\n        endpoint2.parse(endpoint2.merge(route2, parameters2))\n      );\n    };\n    Object.assign(request2, {\n      endpoint: endpoint2,\n      defaults: withDefaults.bind(null, endpoint2)\n    });\n    return endpointOptions.request.hook(request2, endpointOptions);\n  };\n  return Object.assign(newApi, {\n    endpoint: endpoint2,\n    defaults: withDefaults.bind(null, endpoint2)\n  });\n}\n\n// pkg/dist-src/index.js\nvar request = withDefaults(endpoint, defaults_default);\nexport {\n  request\n};\n", "// pkg/dist-src/defaults.js\nimport { getUserAgent } from \"universal-user-agent\";\n\n// pkg/dist-src/version.js\nvar VERSION = \"0.0.0-development\";\n\n// pkg/dist-src/defaults.js\nvar userAgent = `octokit-endpoint.js/${VERSION} ${getUserAgent()}`;\nvar DEFAULTS = {\n  method: \"GET\",\n  baseUrl: \"https://api.github.com\",\n  headers: {\n    accept: \"application/vnd.github.v3+json\",\n    \"user-agent\": userAgent\n  },\n  mediaType: {\n    format: \"\"\n  }\n};\n\n// pkg/dist-src/util/lowercase-keys.js\nfunction lowercaseKeys(object) {\n  if (!object) {\n    return {};\n  }\n  return Object.keys(object).reduce((newObj, key) => {\n    newObj[key.toLowerCase()] = object[key];\n    return newObj;\n  }, {});\n}\n\n// pkg/dist-src/util/is-plain-object.js\nfunction isPlainObject(value) {\n  if (typeof value !== \"object\" || value === null) return false;\n  if (Object.prototype.toString.call(value) !== \"[object Object]\") return false;\n  const proto = Object.getPrototypeOf(value);\n  if (proto === null) return true;\n  const Ctor = Object.prototype.hasOwnProperty.call(proto, \"constructor\") && proto.constructor;\n  return typeof Ctor === \"function\" && Ctor instanceof Ctor && Function.prototype.call(Ctor) === Function.prototype.call(value);\n}\n\n// pkg/dist-src/util/merge-deep.js\nfunction mergeDeep(defaults, options) {\n  const result = Object.assign({}, defaults);\n  Object.keys(options).forEach((key) => {\n    if (isPlainObject(options[key])) {\n      if (!(key in defaults)) Object.assign(result, { [key]: options[key] });\n      else result[key] = mergeDeep(defaults[key], options[key]);\n    } else {\n      Object.assign(result, { [key]: options[key] });\n    }\n  });\n  return result;\n}\n\n// pkg/dist-src/util/remove-undefined-properties.js\nfunction removeUndefinedProperties(obj) {\n  for (const key in obj) {\n    if (obj[key] === void 0) {\n      delete obj[key];\n    }\n  }\n  return obj;\n}\n\n// pkg/dist-src/merge.js\nfunction merge(defaults, route, options) {\n  if (typeof route === \"string\") {\n    let [method, url] = route.split(\" \");\n    options = Object.assign(url ? { method, url } : { url: method }, options);\n  } else {\n    options = Object.assign({}, route);\n  }\n  options.headers = lowercaseKeys(options.headers);\n  removeUndefinedProperties(options);\n  removeUndefinedProperties(options.headers);\n  const mergedOptions = mergeDeep(defaults || {}, options);\n  if (options.url === \"/graphql\") {\n    if (defaults && defaults.mediaType.previews?.length) {\n      mergedOptions.mediaType.previews = defaults.mediaType.previews.filter(\n        (preview) => !mergedOptions.mediaType.previews.includes(preview)\n      ).concat(mergedOptions.mediaType.previews);\n    }\n    mergedOptions.mediaType.previews = (mergedOptions.mediaType.previews || []).map((preview) => preview.replace(/-preview/, \"\"));\n  }\n  return mergedOptions;\n}\n\n// pkg/dist-src/util/add-query-parameters.js\nfunction addQueryParameters(url, parameters) {\n  const separator = /\\?/.test(url) ? \"&\" : \"?\";\n  const names = Object.keys(parameters);\n  if (names.length === 0) {\n    return url;\n  }\n  return url + separator + names.map((name) => {\n    if (name === \"q\") {\n      return \"q=\" + parameters.q.split(\"+\").map(encodeURIComponent).join(\"+\");\n    }\n    return `${name}=${encodeURIComponent(parameters[name])}`;\n  }).join(\"&\");\n}\n\n// pkg/dist-src/util/extract-url-variable-names.js\nvar urlVariableRegex = /\\{[^{}}]+\\}/g;\nfunction removeNonChars(variableName) {\n  return variableName.replace(/(?:^\\W+)|(?:(?<!\\W)\\W+$)/g, \"\").split(/,/);\n}\nfunction extractUrlVariableNames(url) {\n  const matches = url.match(urlVariableRegex);\n  if (!matches) {\n    return [];\n  }\n  return matches.map(removeNonChars).reduce((a, b) => a.concat(b), []);\n}\n\n// pkg/dist-src/util/omit.js\nfunction omit(object, keysToOmit) {\n  const result = { __proto__: null };\n  for (const key of Object.keys(object)) {\n    if (keysToOmit.indexOf(key) === -1) {\n      result[key] = object[key];\n    }\n  }\n  return result;\n}\n\n// pkg/dist-src/util/url-template.js\nfunction encodeReserved(str) {\n  return str.split(/(%[0-9A-Fa-f]{2})/g).map(function(part) {\n    if (!/%[0-9A-Fa-f]/.test(part)) {\n      part = encodeURI(part).replace(/%5B/g, \"[\").replace(/%5D/g, \"]\");\n    }\n    return part;\n  }).join(\"\");\n}\nfunction encodeUnreserved(str) {\n  return encodeURIComponent(str).replace(/[!'()*]/g, function(c) {\n    return \"%\" + c.charCodeAt(0).toString(16).toUpperCase();\n  });\n}\nfunction encodeValue(operator, value, key) {\n  value = operator === \"+\" || operator === \"#\" ? encodeReserved(value) : encodeUnreserved(value);\n  if (key) {\n    return encodeUnreserved(key) + \"=\" + value;\n  } else {\n    return value;\n  }\n}\nfunction isDefined(value) {\n  return value !== void 0 && value !== null;\n}\nfunction isKeyOperator(operator) {\n  return operator === \";\" || operator === \"&\" || operator === \"?\";\n}\nfunction getValues(context, operator, key, modifier) {\n  var value = context[key], result = [];\n  if (isDefined(value) && value !== \"\") {\n    if (typeof value === \"string\" || typeof value === \"number\" || typeof value === \"boolean\") {\n      value = value.toString();\n      if (modifier && modifier !== \"*\") {\n        value = value.substring(0, parseInt(modifier, 10));\n      }\n      result.push(\n        encodeValue(operator, value, isKeyOperator(operator) ? key : \"\")\n      );\n    } else {\n      if (modifier === \"*\") {\n        if (Array.isArray(value)) {\n          value.filter(isDefined).forEach(function(value2) {\n            result.push(\n              encodeValue(operator, value2, isKeyOperator(operator) ? key : \"\")\n            );\n          });\n        } else {\n          Object.keys(value).forEach(function(k) {\n            if (isDefined(value[k])) {\n              result.push(encodeValue(operator, value[k], k));\n            }\n          });\n        }\n      } else {\n        const tmp = [];\n        if (Array.isArray(value)) {\n          value.filter(isDefined).forEach(function(value2) {\n            tmp.push(encodeValue(operator, value2));\n          });\n        } else {\n          Object.keys(value).forEach(function(k) {\n            if (isDefined(value[k])) {\n              tmp.push(encodeUnreserved(k));\n              tmp.push(encodeValue(operator, value[k].toString()));\n            }\n          });\n        }\n        if (isKeyOperator(operator)) {\n          result.push(encodeUnreserved(key) + \"=\" + tmp.join(\",\"));\n        } else if (tmp.length !== 0) {\n          result.push(tmp.join(\",\"));\n        }\n      }\n    }\n  } else {\n    if (operator === \";\") {\n      if (isDefined(value)) {\n        result.push(encodeUnreserved(key));\n      }\n    } else if (value === \"\" && (operator === \"&\" || operator === \"?\")) {\n      result.push(encodeUnreserved(key) + \"=\");\n    } else if (value === \"\") {\n      result.push(\"\");\n    }\n  }\n  return result;\n}\nfunction parseUrl(template) {\n  return {\n    expand: expand.bind(null, template)\n  };\n}\nfunction expand(template, context) {\n  var operators = [\"+\", \"#\", \".\", \"/\", \";\", \"?\", \"&\"];\n  template = template.replace(\n    /\\{([^\\{\\}]+)\\}|([^\\{\\}]+)/g,\n    function(_, expression, literal) {\n      if (expression) {\n        let operator = \"\";\n        const values = [];\n        if (operators.indexOf(expression.charAt(0)) !== -1) {\n          operator = expression.charAt(0);\n          expression = expression.substr(1);\n        }\n        expression.split(/,/g).forEach(function(variable) {\n          var tmp = /([^:\\*]*)(?::(\\d+)|(\\*))?/.exec(variable);\n          values.push(getValues(context, operator, tmp[1], tmp[2] || tmp[3]));\n        });\n        if (operator && operator !== \"+\") {\n          var separator = \",\";\n          if (operator === \"?\") {\n            separator = \"&\";\n          } else if (operator !== \"#\") {\n            separator = operator;\n          }\n          return (values.length !== 0 ? operator : \"\") + values.join(separator);\n        } else {\n          return values.join(\",\");\n        }\n      } else {\n        return encodeReserved(literal);\n      }\n    }\n  );\n  if (template === \"/\") {\n    return template;\n  } else {\n    return template.replace(/\\/$/, \"\");\n  }\n}\n\n// pkg/dist-src/parse.js\nfunction parse(options) {\n  let method = options.method.toUpperCase();\n  let url = (options.url || \"/\").replace(/:([a-z]\\w+)/g, \"{$1}\");\n  let headers = Object.assign({}, options.headers);\n  let body;\n  let parameters = omit(options, [\n    \"method\",\n    \"baseUrl\",\n    \"url\",\n    \"headers\",\n    \"request\",\n    \"mediaType\"\n  ]);\n  const urlVariableNames = extractUrlVariableNames(url);\n  url = parseUrl(url).expand(parameters);\n  if (!/^http/.test(url)) {\n    url = options.baseUrl + url;\n  }\n  const omittedParameters = Object.keys(options).filter((option) => urlVariableNames.includes(option)).concat(\"baseUrl\");\n  const remainingParameters = omit(parameters, omittedParameters);\n  const isBinaryRequest = /application\\/octet-stream/i.test(headers.accept);\n  if (!isBinaryRequest) {\n    if (options.mediaType.format) {\n      headers.accept = headers.accept.split(/,/).map(\n        (format) => format.replace(\n          /application\\/vnd(\\.\\w+)(\\.v3)?(\\.\\w+)?(\\+json)?$/,\n          `application/vnd$1$2.${options.mediaType.format}`\n        )\n      ).join(\",\");\n    }\n    if (url.endsWith(\"/graphql\")) {\n      if (options.mediaType.previews?.length) {\n        const previewsFromAcceptHeader = headers.accept.match(/(?<![\\w-])[\\w-]+(?=-preview)/g) || [];\n        headers.accept = previewsFromAcceptHeader.concat(options.mediaType.previews).map((preview) => {\n          const format = options.mediaType.format ? `.${options.mediaType.format}` : \"+json\";\n          return `application/vnd.github.${preview}-preview${format}`;\n        }).join(\",\");\n      }\n    }\n  }\n  if ([\"GET\", \"HEAD\"].includes(method)) {\n    url = addQueryParameters(url, remainingParameters);\n  } else {\n    if (\"data\" in remainingParameters) {\n      body = remainingParameters.data;\n    } else {\n      if (Object.keys(remainingParameters).length) {\n        body = remainingParameters;\n      }\n    }\n  }\n  if (!headers[\"content-type\"] && typeof body !== \"undefined\") {\n    headers[\"content-type\"] = \"application/json; charset=utf-8\";\n  }\n  if ([\"PATCH\", \"PUT\"].includes(method) && typeof body === \"undefined\") {\n    body = \"\";\n  }\n  return Object.assign(\n    { method, url, headers },\n    typeof body !== \"undefined\" ? { body } : null,\n    options.request ? { request: options.request } : null\n  );\n}\n\n// pkg/dist-src/endpoint-with-defaults.js\nfunction endpointWithDefaults(defaults, route, options) {\n  return parse(merge(defaults, route, options));\n}\n\n// pkg/dist-src/with-defaults.js\nfunction withDefaults(oldDefaults, newDefaults) {\n  const DEFAULTS2 = merge(oldDefaults, newDefaults);\n  const endpoint2 = endpointWithDefaults.bind(null, DEFAULTS2);\n  return Object.assign(endpoint2, {\n    DEFAULTS: DEFAULTS2,\n    defaults: withDefaults.bind(null, DEFAULTS2),\n    merge: merge.bind(null, DEFAULTS2),\n    parse\n  });\n}\n\n// pkg/dist-src/index.js\nvar endpoint = withDefaults(null, DEFAULTS);\nexport {\n  endpoint\n};\n", "class RequestError extends Error {\n  name;\n  /**\n   * http status code\n   */\n  status;\n  /**\n   * Request options that lead to the error.\n   */\n  request;\n  /**\n   * Response object if a response was received\n   */\n  response;\n  constructor(message, statusCode, options) {\n    super(message);\n    this.name = \"HttpError\";\n    this.status = Number.parseInt(statusCode);\n    if (Number.isNaN(this.status)) {\n      this.status = 0;\n    }\n    if (\"response\" in options) {\n      this.response = options.response;\n    }\n    const requestCopy = Object.assign({}, options.request);\n    if (options.request.headers.authorization) {\n      requestCopy.headers = Object.assign({}, options.request.headers, {\n        authorization: options.request.headers.authorization.replace(\n          /(?<! ) .*$/,\n          \" [REDACTED]\"\n        )\n      });\n    }\n    requestCopy.url = requestCopy.url.replace(/\\bclient_secret=\\w+/g, \"client_secret=[REDACTED]\").replace(/\\baccess_token=\\w+/g, \"access_token=[REDACTED]\");\n    this.request = requestCopy;\n  }\n}\nexport {\n  RequestError\n};\n", "// pkg/dist-src/index.js\nimport { request } from \"@octokit/request\";\nimport { getUserAgent } from \"universal-user-agent\";\n\n// pkg/dist-src/version.js\nvar VERSION = \"0.0.0-development\";\n\n// pkg/dist-src/with-defaults.js\nimport { request as Request2 } from \"@octokit/request\";\n\n// pkg/dist-src/graphql.js\nimport { request as Request } from \"@octokit/request\";\n\n// pkg/dist-src/error.js\nfunction _buildMessageForResponseErrors(data) {\n  return `Request failed due to following response errors:\n` + data.errors.map((e) => ` - ${e.message}`).join(\"\\n\");\n}\nvar GraphqlResponseError = class extends Error {\n  constructor(request2, headers, response) {\n    super(_buildMessageForResponseErrors(response));\n    this.request = request2;\n    this.headers = headers;\n    this.response = response;\n    this.errors = response.errors;\n    this.data = response.data;\n    if (Error.captureStackTrace) {\n      Error.captureStackTrace(this, this.constructor);\n    }\n  }\n  name = \"GraphqlResponseError\";\n  errors;\n  data;\n};\n\n// pkg/dist-src/graphql.js\nvar NON_VARIABLE_OPTIONS = [\n  \"method\",\n  \"baseUrl\",\n  \"url\",\n  \"headers\",\n  \"request\",\n  \"query\",\n  \"mediaType\",\n  \"operationName\"\n];\nvar FORBIDDEN_VARIABLE_OPTIONS = [\"query\", \"method\", \"url\"];\nvar GHES_V3_SUFFIX_REGEX = /\\/api\\/v3\\/?$/;\nfunction graphql(request2, query, options) {\n  if (options) {\n    if (typeof query === \"string\" && \"query\" in options) {\n      return Promise.reject(\n        new Error(`[@octokit/graphql] \"query\" cannot be used as variable name`)\n      );\n    }\n    for (const key in options) {\n      if (!FORBIDDEN_VARIABLE_OPTIONS.includes(key)) continue;\n      return Promise.reject(\n        new Error(\n          `[@octokit/graphql] \"${key}\" cannot be used as variable name`\n        )\n      );\n    }\n  }\n  const parsedOptions = typeof query === \"string\" ? Object.assign({ query }, options) : query;\n  const requestOptions = Object.keys(\n    parsedOptions\n  ).reduce((result, key) => {\n    if (NON_VARIABLE_OPTIONS.includes(key)) {\n      result[key] = parsedOptions[key];\n      return result;\n    }\n    if (!result.variables) {\n      result.variables = {};\n    }\n    result.variables[key] = parsedOptions[key];\n    return result;\n  }, {});\n  const baseUrl = parsedOptions.baseUrl || request2.endpoint.DEFAULTS.baseUrl;\n  if (GHES_V3_SUFFIX_REGEX.test(baseUrl)) {\n    requestOptions.url = baseUrl.replace(GHES_V3_SUFFIX_REGEX, \"/api/graphql\");\n  }\n  return request2(requestOptions).then((response) => {\n    if (response.data.errors) {\n      const headers = {};\n      for (const key of Object.keys(response.headers)) {\n        headers[key] = response.headers[key];\n      }\n      throw new GraphqlResponseError(\n        requestOptions,\n        headers,\n        response.data\n      );\n    }\n    return response.data.data;\n  });\n}\n\n// pkg/dist-src/with-defaults.js\nfunction withDefaults(request2, newDefaults) {\n  const newRequest = request2.defaults(newDefaults);\n  const newApi = (query, options) => {\n    return graphql(newRequest, query, options);\n  };\n  return Object.assign(newApi, {\n    defaults: withDefaults.bind(null, newRequest),\n    endpoint: newRequest.endpoint\n  });\n}\n\n// pkg/dist-src/index.js\nvar graphql2 = withDefaults(request, {\n  headers: {\n    \"user-agent\": `octokit-graphql.js/${VERSION} ${getUserAgent()}`\n  },\n  method: \"POST\",\n  url: \"/graphql\"\n});\nfunction withCustomRequest(customRequest) {\n  return withDefaults(customRequest, {\n    method: \"POST\",\n    url: \"/graphql\"\n  });\n}\nexport {\n  GraphqlResponseError,\n  graphql2 as graphql,\n  withCustomRequest\n};\n", "// pkg/dist-src/is-jwt.js\nvar b64url = \"(?:[a-zA-Z0-9_-]+)\";\nvar sep = \"\\\\.\";\nvar jwtRE = new RegExp(`^${b64url}${sep}${b64url}${sep}${b64url}$`);\nvar isJWT = jwtRE.test.bind(jwtRE);\n\n// pkg/dist-src/auth.js\nasync function auth(token) {\n  const isApp = isJWT(token);\n  const isInstallation = token.startsWith(\"v1.\") || token.startsWith(\"ghs_\");\n  const isUserToServer = token.startsWith(\"ghu_\");\n  const tokenType = isApp ? \"app\" : isInstallation ? \"installation\" : isUserToServer ? \"user-to-server\" : \"oauth\";\n  return {\n    type: \"token\",\n    token,\n    tokenType\n  };\n}\n\n// pkg/dist-src/with-authorization-prefix.js\nfunction withAuthorizationPrefix(token) {\n  if (token.split(/\\./).length === 3) {\n    return `bearer ${token}`;\n  }\n  return `token ${token}`;\n}\n\n// pkg/dist-src/hook.js\nasync function hook(token, request, route, parameters) {\n  const endpoint = request.endpoint.merge(\n    route,\n    parameters\n  );\n  endpoint.headers.authorization = withAuthorizationPrefix(token);\n  return request(endpoint);\n}\n\n// pkg/dist-src/index.js\nvar createTokenAuth = function createTokenAuth2(token) {\n  if (!token) {\n    throw new Error(\"[@octokit/auth-token] No token passed to createTokenAuth\");\n  }\n  if (typeof token !== \"string\") {\n    throw new Error(\n      \"[@octokit/auth-token] Token passed to createTokenAuth is not a string\"\n    );\n  }\n  token = token.replace(/^(token|bearer) +/i, \"\");\n  return Object.assign(auth.bind(null, token), {\n    hook: hook.bind(null, token)\n  });\n};\nexport {\n  createTokenAuth\n};\n", "const VERSION = \"6.1.6\";\nexport {\n  VERSION\n};\n", "import { VERSION } from \"./version.js\";\nfunction requestLog(octokit) {\n  octokit.hook.wrap(\"request\", (request, options) => {\n    octokit.log.debug(\"request\", options);\n    const start = Date.now();\n    const requestOptions = octokit.request.endpoint.parse(options);\n    const path = requestOptions.url.replace(options.baseUrl, \"\");\n    return request(options).then((response) => {\n      const requestId = response.headers[\"x-github-request-id\"];\n      octokit.log.info(\n        `${requestOptions.method} ${path} - ${response.status} with id ${requestId} in ${Date.now() - start}ms`\n      );\n      return response;\n    }).catch((error) => {\n      const requestId = error.response?.headers[\"x-github-request-id\"] || \"UNKNOWN\";\n      octokit.log.error(\n        `${requestOptions.method} ${path} - ${error.status} with id ${requestId} in ${Date.now() - start}ms`\n      );\n      throw error;\n    });\n  });\n}\nrequestLog.VERSION = VERSION;\nexport {\n  requestLog\n};\n", "const VERSION = \"5.3.1\";\nexport {\n  VERSION\n};\n", "// pkg/dist-src/version.js\nvar VERSION = \"0.0.0-development\";\n\n// pkg/dist-src/normalize-paginated-list-response.js\nfunction normalizePaginatedListResponse(response) {\n  if (!response.data) {\n    return {\n      ...response,\n      data: []\n    };\n  }\n  const responseNeedsNormalization = \"total_count\" in response.data && !(\"url\" in response.data);\n  if (!responseNeedsNormalization) return response;\n  const incompleteResults = response.data.incomplete_results;\n  const repositorySelection = response.data.repository_selection;\n  const totalCount = response.data.total_count;\n  delete response.data.incomplete_results;\n  delete response.data.repository_selection;\n  delete response.data.total_count;\n  const namespaceKey = Object.keys(response.data)[0];\n  const data = response.data[namespaceKey];\n  response.data = data;\n  if (typeof incompleteResults !== \"undefined\") {\n    response.data.incomplete_results = incompleteResults;\n  }\n  if (typeof repositorySelection !== \"undefined\") {\n    response.data.repository_selection = repositorySelection;\n  }\n  response.data.total_count = totalCount;\n  return response;\n}\n\n// pkg/dist-src/iterator.js\nfunction iterator(octokit, route, parameters) {\n  const options = typeof route === \"function\" ? route.endpoint(parameters) : octokit.request.endpoint(route, parameters);\n  const requestMethod = typeof route === \"function\" ? route : octokit.request;\n  const method = options.method;\n  const headers = options.headers;\n  let url = options.url;\n  return {\n    [Symbol.asyncIterator]: () => ({\n      async next() {\n        if (!url) return { done: true };\n        try {\n          const response = await requestMethod({ method, url, headers });\n          const normalizedResponse = normalizePaginatedListResponse(response);\n          url = ((normalizedResponse.headers.link || \"\").match(\n            /<([^<>]+)>;\\s*rel=\"next\"/\n          ) || [])[1];\n          return { value: normalizedResponse };\n        } catch (error) {\n          if (error.status !== 409) throw error;\n          url = \"\";\n          return {\n            value: {\n              status: 200,\n              headers: {},\n              data: []\n            }\n          };\n        }\n      }\n    })\n  };\n}\n\n// pkg/dist-src/paginate.js\nfunction paginate(octokit, route, parameters, mapFn) {\n  if (typeof parameters === \"function\") {\n    mapFn = parameters;\n    parameters = void 0;\n  }\n  return gather(\n    octokit,\n    [],\n    iterator(octokit, route, parameters)[Symbol.asyncIterator](),\n    mapFn\n  );\n}\nfunction gather(octokit, results, iterator2, mapFn) {\n  return iterator2.next().then((result) => {\n    if (result.done) {\n      return results;\n    }\n    let earlyExit = false;\n    function done() {\n      earlyExit = true;\n    }\n    results = results.concat(\n      mapFn ? mapFn(result.value, done) : result.value.data\n    );\n    if (earlyExit) {\n      return results;\n    }\n    return gather(octokit, results, iterator2, mapFn);\n  });\n}\n\n// pkg/dist-src/compose-paginate.js\nvar composePaginateRest = Object.assign(paginate, {\n  iterator\n});\n\n// pkg/dist-src/generated/paginating-endpoints.js\nvar paginatingEndpoints = [\n  \"GET /advisories\",\n  \"GET /app/hook/deliveries\",\n  \"GET /app/installation-requests\",\n  \"GET /app/installations\",\n  \"GET /assignments/{assignment_id}/accepted_assignments\",\n  \"GET /classrooms\",\n  \"GET /classrooms/{classroom_id}/assignments\",\n  \"GET /enterprises/{enterprise}/code-security/configurations\",\n  \"GET /enterprises/{enterprise}/code-security/configurations/{configuration_id}/repositories\",\n  \"GET /enterprises/{enterprise}/dependabot/alerts\",\n  \"GET /enterprises/{enterprise}/secret-scanning/alerts\",\n  \"GET /events\",\n  \"GET /gists\",\n  \"GET /gists/public\",\n  \"GET /gists/starred\",\n  \"GET /gists/{gist_id}/comments\",\n  \"GET /gists/{gist_id}/commits\",\n  \"GET /gists/{gist_id}/forks\",\n  \"GET /installation/repositories\",\n  \"GET /issues\",\n  \"GET /licenses\",\n  \"GET /marketplace_listing/plans\",\n  \"GET /marketplace_listing/plans/{plan_id}/accounts\",\n  \"GET /marketplace_listing/stubbed/plans\",\n  \"GET /marketplace_listing/stubbed/plans/{plan_id}/accounts\",\n  \"GET /networks/{owner}/{repo}/events\",\n  \"GET /notifications\",\n  \"GET /organizations\",\n  \"GET /orgs/{org}/actions/cache/usage-by-repository\",\n  \"GET /orgs/{org}/actions/hosted-runners\",\n  \"GET /orgs/{org}/actions/permissions/repositories\",\n  \"GET /orgs/{org}/actions/runner-groups\",\n  \"GET /orgs/{org}/actions/runner-groups/{runner_group_id}/hosted-runners\",\n  \"GET /orgs/{org}/actions/runner-groups/{runner_group_id}/repositories\",\n  \"GET /orgs/{org}/actions/runner-groups/{runner_group_id}/runners\",\n  \"GET /orgs/{org}/actions/runners\",\n  \"GET /orgs/{org}/actions/secrets\",\n  \"GET /orgs/{org}/actions/secrets/{secret_name}/repositories\",\n  \"GET /orgs/{org}/actions/variables\",\n  \"GET /orgs/{org}/actions/variables/{name}/repositories\",\n  \"GET /orgs/{org}/attestations/{subject_digest}\",\n  \"GET /orgs/{org}/blocks\",\n  \"GET /orgs/{org}/code-scanning/alerts\",\n  \"GET /orgs/{org}/code-security/configurations\",\n  \"GET /orgs/{org}/code-security/configurations/{configuration_id}/repositories\",\n  \"GET /orgs/{org}/codespaces\",\n  \"GET /orgs/{org}/codespaces/secrets\",\n  \"GET /orgs/{org}/codespaces/secrets/{secret_name}/repositories\",\n  \"GET /orgs/{org}/copilot/billing/seats\",\n  \"GET /orgs/{org}/copilot/metrics\",\n  \"GET /orgs/{org}/copilot/usage\",\n  \"GET /orgs/{org}/dependabot/alerts\",\n  \"GET /orgs/{org}/dependabot/secrets\",\n  \"GET /orgs/{org}/dependabot/secrets/{secret_name}/repositories\",\n  \"GET /orgs/{org}/events\",\n  \"GET /orgs/{org}/failed_invitations\",\n  \"GET /orgs/{org}/hooks\",\n  \"GET /orgs/{org}/hooks/{hook_id}/deliveries\",\n  \"GET /orgs/{org}/insights/api/route-stats/{actor_type}/{actor_id}\",\n  \"GET /orgs/{org}/insights/api/subject-stats\",\n  \"GET /orgs/{org}/insights/api/user-stats/{user_id}\",\n  \"GET /orgs/{org}/installations\",\n  \"GET /orgs/{org}/invitations\",\n  \"GET /orgs/{org}/invitations/{invitation_id}/teams\",\n  \"GET /orgs/{org}/issues\",\n  \"GET /orgs/{org}/members\",\n  \"GET /orgs/{org}/members/{username}/codespaces\",\n  \"GET /orgs/{org}/migrations\",\n  \"GET /orgs/{org}/migrations/{migration_id}/repositories\",\n  \"GET /orgs/{org}/organization-roles/{role_id}/teams\",\n  \"GET /orgs/{org}/organization-roles/{role_id}/users\",\n  \"GET /orgs/{org}/outside_collaborators\",\n  \"GET /orgs/{org}/packages\",\n  \"GET /orgs/{org}/packages/{package_type}/{package_name}/versions\",\n  \"GET /orgs/{org}/personal-access-token-requests\",\n  \"GET /orgs/{org}/personal-access-token-requests/{pat_request_id}/repositories\",\n  \"GET /orgs/{org}/personal-access-tokens\",\n  \"GET /orgs/{org}/personal-access-tokens/{pat_id}/repositories\",\n  \"GET /orgs/{org}/private-registries\",\n  \"GET /orgs/{org}/projects\",\n  \"GET /orgs/{org}/properties/values\",\n  \"GET /orgs/{org}/public_members\",\n  \"GET /orgs/{org}/repos\",\n  \"GET /orgs/{org}/rulesets\",\n  \"GET /orgs/{org}/rulesets/rule-suites\",\n  \"GET /orgs/{org}/rulesets/{ruleset_id}/history\",\n  \"GET /orgs/{org}/secret-scanning/alerts\",\n  \"GET /orgs/{org}/security-advisories\",\n  \"GET /orgs/{org}/settings/network-configurations\",\n  \"GET /orgs/{org}/team/{team_slug}/copilot/metrics\",\n  \"GET /orgs/{org}/team/{team_slug}/copilot/usage\",\n  \"GET /orgs/{org}/teams\",\n  \"GET /orgs/{org}/teams/{team_slug}/discussions\",\n  \"GET /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments\",\n  \"GET /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}/reactions\",\n  \"GET /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/reactions\",\n  \"GET /orgs/{org}/teams/{team_slug}/invitations\",\n  \"GET /orgs/{org}/teams/{team_slug}/members\",\n  \"GET /orgs/{org}/teams/{team_slug}/projects\",\n  \"GET /orgs/{org}/teams/{team_slug}/repos\",\n  \"GET /orgs/{org}/teams/{team_slug}/teams\",\n  \"GET /projects/columns/{column_id}/cards\",\n  \"GET /projects/{project_id}/collaborators\",\n  \"GET /projects/{project_id}/columns\",\n  \"GET /repos/{owner}/{repo}/actions/artifacts\",\n  \"GET /repos/{owner}/{repo}/actions/caches\",\n  \"GET /repos/{owner}/{repo}/actions/organization-secrets\",\n  \"GET /repos/{owner}/{repo}/actions/organization-variables\",\n  \"GET /repos/{owner}/{repo}/actions/runners\",\n  \"GET /repos/{owner}/{repo}/actions/runs\",\n  \"GET /repos/{owner}/{repo}/actions/runs/{run_id}/artifacts\",\n  \"GET /repos/{owner}/{repo}/actions/runs/{run_id}/attempts/{attempt_number}/jobs\",\n  \"GET /repos/{owner}/{repo}/actions/runs/{run_id}/jobs\",\n  \"GET /repos/{owner}/{repo}/actions/secrets\",\n  \"GET /repos/{owner}/{repo}/actions/variables\",\n  \"GET /repos/{owner}/{repo}/actions/workflows\",\n  \"GET /repos/{owner}/{repo}/actions/workflows/{workflow_id}/runs\",\n  \"GET /repos/{owner}/{repo}/activity\",\n  \"GET /repos/{owner}/{repo}/assignees\",\n  \"GET /repos/{owner}/{repo}/attestations/{subject_digest}\",\n  \"GET /repos/{owner}/{repo}/branches\",\n  \"GET /repos/{owner}/{repo}/check-runs/{check_run_id}/annotations\",\n  \"GET /repos/{owner}/{repo}/check-suites/{check_suite_id}/check-runs\",\n  \"GET /repos/{owner}/{repo}/code-scanning/alerts\",\n  \"GET /repos/{owner}/{repo}/code-scanning/alerts/{alert_number}/instances\",\n  \"GET /repos/{owner}/{repo}/code-scanning/analyses\",\n  \"GET /repos/{owner}/{repo}/codespaces\",\n  \"GET /repos/{owner}/{repo}/codespaces/devcontainers\",\n  \"GET /repos/{owner}/{repo}/codespaces/secrets\",\n  \"GET /repos/{owner}/{repo}/collaborators\",\n  \"GET /repos/{owner}/{repo}/comments\",\n  \"GET /repos/{owner}/{repo}/comments/{comment_id}/reactions\",\n  \"GET /repos/{owner}/{repo}/commits\",\n  \"GET /repos/{owner}/{repo}/commits/{commit_sha}/comments\",\n  \"GET /repos/{owner}/{repo}/commits/{commit_sha}/pulls\",\n  \"GET /repos/{owner}/{repo}/commits/{ref}/check-runs\",\n  \"GET /repos/{owner}/{repo}/commits/{ref}/check-suites\",\n  \"GET /repos/{owner}/{repo}/commits/{ref}/status\",\n  \"GET /repos/{owner}/{repo}/commits/{ref}/statuses\",\n  \"GET /repos/{owner}/{repo}/contributors\",\n  \"GET /repos/{owner}/{repo}/dependabot/alerts\",\n  \"GET /repos/{owner}/{repo}/dependabot/secrets\",\n  \"GET /repos/{owner}/{repo}/deployments\",\n  \"GET /repos/{owner}/{repo}/deployments/{deployment_id}/statuses\",\n  \"GET /repos/{owner}/{repo}/environments\",\n  \"GET /repos/{owner}/{repo}/environments/{environment_name}/deployment-branch-policies\",\n  \"GET /repos/{owner}/{repo}/environments/{environment_name}/deployment_protection_rules/apps\",\n  \"GET /repos/{owner}/{repo}/environments/{environment_name}/secrets\",\n  \"GET /repos/{owner}/{repo}/environments/{environment_name}/variables\",\n  \"GET /repos/{owner}/{repo}/events\",\n  \"GET /repos/{owner}/{repo}/forks\",\n  \"GET /repos/{owner}/{repo}/hooks\",\n  \"GET /repos/{owner}/{repo}/hooks/{hook_id}/deliveries\",\n  \"GET /repos/{owner}/{repo}/invitations\",\n  \"GET /repos/{owner}/{repo}/issues\",\n  \"GET /repos/{owner}/{repo}/issues/comments\",\n  \"GET /repos/{owner}/{repo}/issues/comments/{comment_id}/reactions\",\n  \"GET /repos/{owner}/{repo}/issues/events\",\n  \"GET /repos/{owner}/{repo}/issues/{issue_number}/comments\",\n  \"GET /repos/{owner}/{repo}/issues/{issue_number}/events\",\n  \"GET /repos/{owner}/{repo}/issues/{issue_number}/labels\",\n  \"GET /repos/{owner}/{repo}/issues/{issue_number}/reactions\",\n  \"GET /repos/{owner}/{repo}/issues/{issue_number}/sub_issues\",\n  \"GET /repos/{owner}/{repo}/issues/{issue_number}/timeline\",\n  \"GET /repos/{owner}/{repo}/keys\",\n  \"GET /repos/{owner}/{repo}/labels\",\n  \"GET /repos/{owner}/{repo}/milestones\",\n  \"GET /repos/{owner}/{repo}/milestones/{milestone_number}/labels\",\n  \"GET /repos/{owner}/{repo}/notifications\",\n  \"GET /repos/{owner}/{repo}/pages/builds\",\n  \"GET /repos/{owner}/{repo}/projects\",\n  \"GET /repos/{owner}/{repo}/pulls\",\n  \"GET /repos/{owner}/{repo}/pulls/comments\",\n  \"GET /repos/{owner}/{repo}/pulls/comments/{comment_id}/reactions\",\n  \"GET /repos/{owner}/{repo}/pulls/{pull_number}/comments\",\n  \"GET /repos/{owner}/{repo}/pulls/{pull_number}/commits\",\n  \"GET /repos/{owner}/{repo}/pulls/{pull_number}/files\",\n  \"GET /repos/{owner}/{repo}/pulls/{pull_number}/reviews\",\n  \"GET /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}/comments\",\n  \"GET /repos/{owner}/{repo}/releases\",\n  \"GET /repos/{owner}/{repo}/releases/{release_id}/assets\",\n  \"GET /repos/{owner}/{repo}/releases/{release_id}/reactions\",\n  \"GET /repos/{owner}/{repo}/rules/branches/{branch}\",\n  \"GET /repos/{owner}/{repo}/rulesets\",\n  \"GET /repos/{owner}/{repo}/rulesets/rule-suites\",\n  \"GET /repos/{owner}/{repo}/rulesets/{ruleset_id}/history\",\n  \"GET /repos/{owner}/{repo}/secret-scanning/alerts\",\n  \"GET /repos/{owner}/{repo}/secret-scanning/alerts/{alert_number}/locations\",\n  \"GET /repos/{owner}/{repo}/security-advisories\",\n  \"GET /repos/{owner}/{repo}/stargazers\",\n  \"GET /repos/{owner}/{repo}/subscribers\",\n  \"GET /repos/{owner}/{repo}/tags\",\n  \"GET /repos/{owner}/{repo}/teams\",\n  \"GET /repos/{owner}/{repo}/topics\",\n  \"GET /repositories\",\n  \"GET /search/code\",\n  \"GET /search/commits\",\n  \"GET /search/issues\",\n  \"GET /search/labels\",\n  \"GET /search/repositories\",\n  \"GET /search/topics\",\n  \"GET /search/users\",\n  \"GET /teams/{team_id}/discussions\",\n  \"GET /teams/{team_id}/discussions/{discussion_number}/comments\",\n  \"GET /teams/{team_id}/discussions/{discussion_number}/comments/{comment_number}/reactions\",\n  \"GET /teams/{team_id}/discussions/{discussion_number}/reactions\",\n  \"GET /teams/{team_id}/invitations\",\n  \"GET /teams/{team_id}/members\",\n  \"GET /teams/{team_id}/projects\",\n  \"GET /teams/{team_id}/repos\",\n  \"GET /teams/{team_id}/teams\",\n  \"GET /user/blocks\",\n  \"GET /user/codespaces\",\n  \"GET /user/codespaces/secrets\",\n  \"GET /user/emails\",\n  \"GET /user/followers\",\n  \"GET /user/following\",\n  \"GET /user/gpg_keys\",\n  \"GET /user/installations\",\n  \"GET /user/installations/{installation_id}/repositories\",\n  \"GET /user/issues\",\n  \"GET /user/keys\",\n  \"GET /user/marketplace_purchases\",\n  \"GET /user/marketplace_purchases/stubbed\",\n  \"GET /user/memberships/orgs\",\n  \"GET /user/migrations\",\n  \"GET /user/migrations/{migration_id}/repositories\",\n  \"GET /user/orgs\",\n  \"GET /user/packages\",\n  \"GET /user/packages/{package_type}/{package_name}/versions\",\n  \"GET /user/public_emails\",\n  \"GET /user/repos\",\n  \"GET /user/repository_invitations\",\n  \"GET /user/social_accounts\",\n  \"GET /user/ssh_signing_keys\",\n  \"GET /user/starred\",\n  \"GET /user/subscriptions\",\n  \"GET /user/teams\",\n  \"GET /users\",\n  \"GET /users/{username}/attestations/{subject_digest}\",\n  \"GET /users/{username}/events\",\n  \"GET /users/{username}/events/orgs/{org}\",\n  \"GET /users/{username}/events/public\",\n  \"GET /users/{username}/followers\",\n  \"GET /users/{username}/following\",\n  \"GET /users/{username}/gists\",\n  \"GET /users/{username}/gpg_keys\",\n  \"GET /users/{username}/keys\",\n  \"GET /users/{username}/orgs\",\n  \"GET /users/{username}/packages\",\n  \"GET /users/{username}/projects\",\n  \"GET /users/{username}/received_events\",\n  \"GET /users/{username}/received_events/public\",\n  \"GET /users/{username}/repos\",\n  \"GET /users/{username}/social_accounts\",\n  \"GET /users/{username}/ssh_signing_keys\",\n  \"GET /users/{username}/starred\",\n  \"GET /users/{username}/subscriptions\"\n];\n\n// pkg/dist-src/paginating-endpoints.js\nfunction isPaginatingEndpoint(arg) {\n  if (typeof arg === \"string\") {\n    return paginatingEndpoints.includes(arg);\n  } else {\n    return false;\n  }\n}\n\n// pkg/dist-src/index.js\nfunction paginateRest(octokit) {\n  return {\n    paginate: Object.assign(paginate.bind(null, octokit), {\n      iterator: iterator.bind(null, octokit)\n    })\n  };\n}\npaginateRest.VERSION = VERSION;\nexport {\n  composePaginateRest,\n  isPaginatingEndpoint,\n  paginateRest,\n  paginatingEndpoints\n};\n", "import type { Octokit } from \"@octokit/core\";\n\nexport type { RestEndpointMethodTypes } from \"./generated/parameters-and-response-types.js\";\nimport { VERSION } from \"./version.js\";\nimport type { Api } from \"./types.js\";\nimport { endpointsToMethods } from \"./endpoints-to-methods.js\";\n\n// Export the type for downstream users in order to fix a TypeScript error\n// The inferred type of 'Octokit' cannot be named without a reference to '../node_modules/@octokit/plugin-rest-endpoint-methods/dist-types/types.js'. This is likely not portable. A type annotation is necessary.\nexport type { Api };\n\nexport function restEndpointMethods(octokit: Octokit): Api {\n  const api = endpointsToMethods(octokit);\n  return {\n    rest: api,\n  };\n}\nrestEndpointMethods.VERSION = VERSION;\n\nexport function legacyRestEndpointMethods(octokit: Octokit): Api[\"rest\"] & Api {\n  const api = endpointsToMethods(octokit);\n  return {\n    ...api,\n    rest: api,\n  };\n}\nlegacyRestEndpointMethods.VERSION = VERSION;\n", "export const VERSION = \"13.5.0\";\n", "import type { Octokit } from \"@octokit/core\";\nimport type { EndpointOptions, RequestParameters, Route } from \"@octokit/types\";\nimport ENDPOINTS from \"./generated/endpoints.js\";\nimport type { RestEndpointMethods } from \"./generated/method-types.js\";\nimport type { EndpointDecorations } from \"./types.js\";\n\n// The following code was refactored in: https://github.com/octokit/plugin-rest-endpoint-methods.js/pull/622\n// to optimise the runtime performance of Octokit initialization.\n//\n// This optimization involves two key changes:\n// 1. Pre-Computation: The endpoint methods are pre-computed once at module load\n//    time instead of each invocation of `endpointsToMethods()`.\n// 2. Lazy initialization and caching: We use a Proxy for each scope to only\n//    initialize methods that are actually called. This reduces runtime overhead\n//    as the initialization involves deep merging of objects. The initialized\n//    methods are then cached for future use.\n\nconst endpointMethodsMap = new Map();\nfor (const [scope, endpoints] of Object.entries(ENDPOINTS)) {\n  for (const [methodName, endpoint] of Object.entries(endpoints)) {\n    const [route, defaults, decorations] = endpoint;\n    const [method, url] = route.split(/ /);\n    const endpointDefaults = Object.assign(\n      {\n        method,\n        url,\n      },\n      defaults,\n    );\n\n    if (!endpointMethodsMap.has(scope)) {\n      endpointMethodsMap.set(scope, new Map());\n    }\n\n    endpointMethodsMap.get(scope).set(methodName, {\n      scope,\n      methodName,\n      endpointDefaults,\n      decorations,\n    });\n  }\n}\n\ntype ProxyTarget = {\n  octokit: Octokit;\n  scope: string;\n  cache: Record<string, (...args: any[]) => any>;\n};\n\nconst handler = {\n  has({ scope }: ProxyTarget, methodName: string) {\n    return endpointMethodsMap.get(scope).has(methodName);\n  },\n  getOwnPropertyDescriptor(target: ProxyTarget, methodName: string) {\n    return {\n      value: this.get(target, methodName), // ensures method is in the cache\n      configurable: true,\n      writable: true,\n      enumerable: true,\n    };\n  },\n  defineProperty(\n    target: ProxyTarget,\n    methodName: string,\n    descriptor: PropertyDescriptor,\n  ) {\n    Object.defineProperty(target.cache, methodName, descriptor);\n    return true;\n  },\n  deleteProperty(target: ProxyTarget, methodName: string) {\n    delete target.cache[methodName];\n    return true;\n  },\n  ownKeys({ scope }: ProxyTarget) {\n    return [...endpointMethodsMap.get(scope).keys()];\n  },\n  set(target: ProxyTarget, methodName: string, value: any) {\n    return (target.cache[methodName] = value);\n  },\n  get({ octokit, scope, cache }: ProxyTarget, methodName: string) {\n    if (cache[methodName]) {\n      return cache[methodName];\n    }\n\n    const method = endpointMethodsMap.get(scope).get(methodName);\n    if (!method) {\n      return undefined;\n    }\n\n    const { endpointDefaults, decorations } = method;\n\n    if (decorations) {\n      cache[methodName] = decorate(\n        octokit,\n        scope,\n        methodName,\n        endpointDefaults,\n        decorations,\n      );\n    } else {\n      cache[methodName] = octokit.request.defaults(endpointDefaults);\n    }\n\n    return cache[methodName];\n  },\n};\n\nexport function endpointsToMethods(octokit: Octokit): RestEndpointMethods {\n  const newMethods = {} as { [key: string]: object };\n\n  for (const scope of endpointMethodsMap.keys()) {\n    newMethods[scope] = new Proxy({ octokit, scope, cache: {} }, handler);\n  }\n\n  return newMethods as RestEndpointMethods;\n}\n\nfunction decorate(\n  octokit: Octokit,\n  scope: string,\n  methodName: string,\n  defaults: EndpointOptions,\n  decorations: EndpointDecorations,\n) {\n  const requestWithDefaults = octokit.request.defaults(defaults);\n\n  /* istanbul ignore next */\n  function withDecorations(\n    ...args: [Route, RequestParameters?] | [EndpointOptions]\n  ) {\n    // @ts-ignore https://github.com/microsoft/TypeScript/issues/25488\n    let options = requestWithDefaults.endpoint.merge(...args);\n\n    // There are currently no other decorations than `.mapToData`\n    if (decorations.mapToData) {\n      options = Object.assign({}, options, {\n        data: options[decorations.mapToData],\n        [decorations.mapToData]: undefined,\n      });\n      return requestWithDefaults(options);\n    }\n\n    if (decorations.renamed) {\n      const [newScope, newMethodName] = decorations.renamed;\n      octokit.log.warn(\n        `octokit.${scope}.${methodName}() has been renamed to octokit.${newScope}.${newMethodName}()`,\n      );\n    }\n    if (decorations.deprecated) {\n      octokit.log.warn(decorations.deprecated);\n    }\n\n    if (decorations.renamedParameters) {\n      // @ts-ignore https://github.com/microsoft/TypeScript/issues/25488\n      const options = requestWithDefaults.endpoint.merge(...args);\n\n      for (const [name, alias] of Object.entries(\n        decorations.renamedParameters,\n      )) {\n        if (name in options) {\n          octokit.log.warn(\n            `\"${name}\" parameter is deprecated for \"octokit.${scope}.${methodName}()\". Use \"${alias}\" instead`,\n          );\n          if (!(alias in options)) {\n            options[alias] = options[name];\n          }\n          delete options[name];\n        }\n      }\n      return requestWithDefaults(options);\n    }\n\n    // @ts-ignore https://github.com/microsoft/TypeScript/issues/25488\n    return requestWithDefaults(...args);\n  }\n  return Object.assign(withDecorations, requestWithDefaults);\n}\n", "import type { EndpointsDefaultsAndDecorations } from \"../types.js\";\nconst Endpoints: EndpointsDefaultsAndDecorations = {\n  actions: {\n    addCustomLabelsToSelfHostedRunnerForOrg: [\n      \"POST /orgs/{org}/actions/runners/{runner_id}/labels\",\n    ],\n    addCustomLabelsToSelfHostedRunnerForRepo: [\n      \"POST /repos/{owner}/{repo}/actions/runners/{runner_id}/labels\",\n    ],\n    addRepoAccessToSelfHostedRunnerGroupInOrg: [\n      \"PUT /orgs/{org}/actions/runner-groups/{runner_group_id}/repositories/{repository_id}\",\n    ],\n    addSelectedRepoToOrgSecret: [\n      \"PUT /orgs/{org}/actions/secrets/{secret_name}/repositories/{repository_id}\",\n    ],\n    addSelectedRepoToOrgVariable: [\n      \"PUT /orgs/{org}/actions/variables/{name}/repositories/{repository_id}\",\n    ],\n    approveWorkflowRun: [\n      \"POST /repos/{owner}/{repo}/actions/runs/{run_id}/approve\",\n    ],\n    cancelWorkflowRun: [\n      \"POST /repos/{owner}/{repo}/actions/runs/{run_id}/cancel\",\n    ],\n    createEnvironmentVariable: [\n      \"POST /repos/{owner}/{repo}/environments/{environment_name}/variables\",\n    ],\n    createHostedRunnerForOrg: [\"POST /orgs/{org}/actions/hosted-runners\"],\n    createOrUpdateEnvironmentSecret: [\n      \"PUT /repos/{owner}/{repo}/environments/{environment_name}/secrets/{secret_name}\",\n    ],\n    createOrUpdateOrgSecret: [\"PUT /orgs/{org}/actions/secrets/{secret_name}\"],\n    createOrUpdateRepoSecret: [\n      \"PUT /repos/{owner}/{repo}/actions/secrets/{secret_name}\",\n    ],\n    createOrgVariable: [\"POST /orgs/{org}/actions/variables\"],\n    createRegistrationTokenForOrg: [\n      \"POST /orgs/{org}/actions/runners/registration-token\",\n    ],\n    createRegistrationTokenForRepo: [\n      \"POST /repos/{owner}/{repo}/actions/runners/registration-token\",\n    ],\n    createRemoveTokenForOrg: [\"POST /orgs/{org}/actions/runners/remove-token\"],\n    createRemoveTokenForRepo: [\n      \"POST /repos/{owner}/{repo}/actions/runners/remove-token\",\n    ],\n    createRepoVariable: [\"POST /repos/{owner}/{repo}/actions/variables\"],\n    createWorkflowDispatch: [\n      \"POST /repos/{owner}/{repo}/actions/workflows/{workflow_id}/dispatches\",\n    ],\n    deleteActionsCacheById: [\n      \"DELETE /repos/{owner}/{repo}/actions/caches/{cache_id}\",\n    ],\n    deleteActionsCacheByKey: [\n      \"DELETE /repos/{owner}/{repo}/actions/caches{?key,ref}\",\n    ],\n    deleteArtifact: [\n      \"DELETE /repos/{owner}/{repo}/actions/artifacts/{artifact_id}\",\n    ],\n    deleteEnvironmentSecret: [\n      \"DELETE /repos/{owner}/{repo}/environments/{environment_name}/secrets/{secret_name}\",\n    ],\n    deleteEnvironmentVariable: [\n      \"DELETE /repos/{owner}/{repo}/environments/{environment_name}/variables/{name}\",\n    ],\n    deleteHostedRunnerForOrg: [\n      \"DELETE /orgs/{org}/actions/hosted-runners/{hosted_runner_id}\",\n    ],\n    deleteOrgSecret: [\"DELETE /orgs/{org}/actions/secrets/{secret_name}\"],\n    deleteOrgVariable: [\"DELETE /orgs/{org}/actions/variables/{name}\"],\n    deleteRepoSecret: [\n      \"DELETE /repos/{owner}/{repo}/actions/secrets/{secret_name}\",\n    ],\n    deleteRepoVariable: [\n      \"DELETE /repos/{owner}/{repo}/actions/variables/{name}\",\n    ],\n    deleteSelfHostedRunnerFromOrg: [\n      \"DELETE /orgs/{org}/actions/runners/{runner_id}\",\n    ],\n    deleteSelfHostedRunnerFromRepo: [\n      \"DELETE /repos/{owner}/{repo}/actions/runners/{runner_id}\",\n    ],\n    deleteWorkflowRun: [\"DELETE /repos/{owner}/{repo}/actions/runs/{run_id}\"],\n    deleteWorkflowRunLogs: [\n      \"DELETE /repos/{owner}/{repo}/actions/runs/{run_id}/logs\",\n    ],\n    disableSelectedRepositoryGithubActionsOrganization: [\n      \"DELETE /orgs/{org}/actions/permissions/repositories/{repository_id}\",\n    ],\n    disableWorkflow: [\n      \"PUT /repos/{owner}/{repo}/actions/workflows/{workflow_id}/disable\",\n    ],\n    downloadArtifact: [\n      \"GET /repos/{owner}/{repo}/actions/artifacts/{artifact_id}/{archive_format}\",\n    ],\n    downloadJobLogsForWorkflowRun: [\n      \"GET /repos/{owner}/{repo}/actions/jobs/{job_id}/logs\",\n    ],\n    downloadWorkflowRunAttemptLogs: [\n      \"GET /repos/{owner}/{repo}/actions/runs/{run_id}/attempts/{attempt_number}/logs\",\n    ],\n    downloadWorkflowRunLogs: [\n      \"GET /repos/{owner}/{repo}/actions/runs/{run_id}/logs\",\n    ],\n    enableSelectedRepositoryGithubActionsOrganization: [\n      \"PUT /orgs/{org}/actions/permissions/repositories/{repository_id}\",\n    ],\n    enableWorkflow: [\n      \"PUT /repos/{owner}/{repo}/actions/workflows/{workflow_id}/enable\",\n    ],\n    forceCancelWorkflowRun: [\n      \"POST /repos/{owner}/{repo}/actions/runs/{run_id}/force-cancel\",\n    ],\n    generateRunnerJitconfigForOrg: [\n      \"POST /orgs/{org}/actions/runners/generate-jitconfig\",\n    ],\n    generateRunnerJitconfigForRepo: [\n      \"POST /repos/{owner}/{repo}/actions/runners/generate-jitconfig\",\n    ],\n    getActionsCacheList: [\"GET /repos/{owner}/{repo}/actions/caches\"],\n    getActionsCacheUsage: [\"GET /repos/{owner}/{repo}/actions/cache/usage\"],\n    getActionsCacheUsageByRepoForOrg: [\n      \"GET /orgs/{org}/actions/cache/usage-by-repository\",\n    ],\n    getActionsCacheUsageForOrg: [\"GET /orgs/{org}/actions/cache/usage\"],\n    getAllowedActionsOrganization: [\n      \"GET /orgs/{org}/actions/permissions/selected-actions\",\n    ],\n    getAllowedActionsRepository: [\n      \"GET /repos/{owner}/{repo}/actions/permissions/selected-actions\",\n    ],\n    getArtifact: [\"GET /repos/{owner}/{repo}/actions/artifacts/{artifact_id}\"],\n    getCustomOidcSubClaimForRepo: [\n      \"GET /repos/{owner}/{repo}/actions/oidc/customization/sub\",\n    ],\n    getEnvironmentPublicKey: [\n      \"GET /repos/{owner}/{repo}/environments/{environment_name}/secrets/public-key\",\n    ],\n    getEnvironmentSecret: [\n      \"GET /repos/{owner}/{repo}/environments/{environment_name}/secrets/{secret_name}\",\n    ],\n    getEnvironmentVariable: [\n      \"GET /repos/{owner}/{repo}/environments/{environment_name}/variables/{name}\",\n    ],\n    getGithubActionsDefaultWorkflowPermissionsOrganization: [\n      \"GET /orgs/{org}/actions/permissions/workflow\",\n    ],\n    getGithubActionsDefaultWorkflowPermissionsRepository: [\n      \"GET /repos/{owner}/{repo}/actions/permissions/workflow\",\n    ],\n    getGithubActionsPermissionsOrganization: [\n      \"GET /orgs/{org}/actions/permissions\",\n    ],\n    getGithubActionsPermissionsRepository: [\n      \"GET /repos/{owner}/{repo}/actions/permissions\",\n    ],\n    getHostedRunnerForOrg: [\n      \"GET /orgs/{org}/actions/hosted-runners/{hosted_runner_id}\",\n    ],\n    getHostedRunnersGithubOwnedImagesForOrg: [\n      \"GET /orgs/{org}/actions/hosted-runners/images/github-owned\",\n    ],\n    getHostedRunnersLimitsForOrg: [\n      \"GET /orgs/{org}/actions/hosted-runners/limits\",\n    ],\n    getHostedRunnersMachineSpecsForOrg: [\n      \"GET /orgs/{org}/actions/hosted-runners/machine-sizes\",\n    ],\n    getHostedRunnersPartnerImagesForOrg: [\n      \"GET /orgs/{org}/actions/hosted-runners/images/partner\",\n    ],\n    getHostedRunnersPlatformsForOrg: [\n      \"GET /orgs/{org}/actions/hosted-runners/platforms\",\n    ],\n    getJobForWorkflowRun: [\"GET /repos/{owner}/{repo}/actions/jobs/{job_id}\"],\n    getOrgPublicKey: [\"GET /orgs/{org}/actions/secrets/public-key\"],\n    getOrgSecret: [\"GET /orgs/{org}/actions/secrets/{secret_name}\"],\n    getOrgVariable: [\"GET /orgs/{org}/actions/variables/{name}\"],\n    getPendingDeploymentsForRun: [\n      \"GET /repos/{owner}/{repo}/actions/runs/{run_id}/pending_deployments\",\n    ],\n    getRepoPermissions: [\n      \"GET /repos/{owner}/{repo}/actions/permissions\",\n      {},\n      { renamed: [\"actions\", \"getGithubActionsPermissionsRepository\"] },\n    ],\n    getRepoPublicKey: [\"GET /repos/{owner}/{repo}/actions/secrets/public-key\"],\n    getRepoSecret: [\"GET /repos/{owner}/{repo}/actions/secrets/{secret_name}\"],\n    getRepoVariable: [\"GET /repos/{owner}/{repo}/actions/variables/{name}\"],\n    getReviewsForRun: [\n      \"GET /repos/{owner}/{repo}/actions/runs/{run_id}/approvals\",\n    ],\n    getSelfHostedRunnerForOrg: [\"GET /orgs/{org}/actions/runners/{runner_id}\"],\n    getSelfHostedRunnerForRepo: [\n      \"GET /repos/{owner}/{repo}/actions/runners/{runner_id}\",\n    ],\n    getWorkflow: [\"GET /repos/{owner}/{repo}/actions/workflows/{workflow_id}\"],\n    getWorkflowAccessToRepository: [\n      \"GET /repos/{owner}/{repo}/actions/permissions/access\",\n    ],\n    getWorkflowRun: [\"GET /repos/{owner}/{repo}/actions/runs/{run_id}\"],\n    getWorkflowRunAttempt: [\n      \"GET /repos/{owner}/{repo}/actions/runs/{run_id}/attempts/{attempt_number}\",\n    ],\n    getWorkflowRunUsage: [\n      \"GET /repos/{owner}/{repo}/actions/runs/{run_id}/timing\",\n    ],\n    getWorkflowUsage: [\n      \"GET /repos/{owner}/{repo}/actions/workflows/{workflow_id}/timing\",\n    ],\n    listArtifactsForRepo: [\"GET /repos/{owner}/{repo}/actions/artifacts\"],\n    listEnvironmentSecrets: [\n      \"GET /repos/{owner}/{repo}/environments/{environment_name}/secrets\",\n    ],\n    listEnvironmentVariables: [\n      \"GET /repos/{owner}/{repo}/environments/{environment_name}/variables\",\n    ],\n    listGithubHostedRunnersInGroupForOrg: [\n      \"GET /orgs/{org}/actions/runner-groups/{runner_group_id}/hosted-runners\",\n    ],\n    listHostedRunnersForOrg: [\"GET /orgs/{org}/actions/hosted-runners\"],\n    listJobsForWorkflowRun: [\n      \"GET /repos/{owner}/{repo}/actions/runs/{run_id}/jobs\",\n    ],\n    listJobsForWorkflowRunAttempt: [\n      \"GET /repos/{owner}/{repo}/actions/runs/{run_id}/attempts/{attempt_number}/jobs\",\n    ],\n    listLabelsForSelfHostedRunnerForOrg: [\n      \"GET /orgs/{org}/actions/runners/{runner_id}/labels\",\n    ],\n    listLabelsForSelfHostedRunnerForRepo: [\n      \"GET /repos/{owner}/{repo}/actions/runners/{runner_id}/labels\",\n    ],\n    listOrgSecrets: [\"GET /orgs/{org}/actions/secrets\"],\n    listOrgVariables: [\"GET /orgs/{org}/actions/variables\"],\n    listRepoOrganizationSecrets: [\n      \"GET /repos/{owner}/{repo}/actions/organization-secrets\",\n    ],\n    listRepoOrganizationVariables: [\n      \"GET /repos/{owner}/{repo}/actions/organization-variables\",\n    ],\n    listRepoSecrets: [\"GET /repos/{owner}/{repo}/actions/secrets\"],\n    listRepoVariables: [\"GET /repos/{owner}/{repo}/actions/variables\"],\n    listRepoWorkflows: [\"GET /repos/{owner}/{repo}/actions/workflows\"],\n    listRunnerApplicationsForOrg: [\"GET /orgs/{org}/actions/runners/downloads\"],\n    listRunnerApplicationsForRepo: [\n      \"GET /repos/{owner}/{repo}/actions/runners/downloads\",\n    ],\n    listSelectedReposForOrgSecret: [\n      \"GET /orgs/{org}/actions/secrets/{secret_name}/repositories\",\n    ],\n    listSelectedReposForOrgVariable: [\n      \"GET /orgs/{org}/actions/variables/{name}/repositories\",\n    ],\n    listSelectedRepositoriesEnabledGithubActionsOrganization: [\n      \"GET /orgs/{org}/actions/permissions/repositories\",\n    ],\n    listSelfHostedRunnersForOrg: [\"GET /orgs/{org}/actions/runners\"],\n    listSelfHostedRunnersForRepo: [\"GET /repos/{owner}/{repo}/actions/runners\"],\n    listWorkflowRunArtifacts: [\n      \"GET /repos/{owner}/{repo}/actions/runs/{run_id}/artifacts\",\n    ],\n    listWorkflowRuns: [\n      \"GET /repos/{owner}/{repo}/actions/workflows/{workflow_id}/runs\",\n    ],\n    listWorkflowRunsForRepo: [\"GET /repos/{owner}/{repo}/actions/runs\"],\n    reRunJobForWorkflowRun: [\n      \"POST /repos/{owner}/{repo}/actions/jobs/{job_id}/rerun\",\n    ],\n    reRunWorkflow: [\"POST /repos/{owner}/{repo}/actions/runs/{run_id}/rerun\"],\n    reRunWorkflowFailedJobs: [\n      \"POST /repos/{owner}/{repo}/actions/runs/{run_id}/rerun-failed-jobs\",\n    ],\n    removeAllCustomLabelsFromSelfHostedRunnerForOrg: [\n      \"DELETE /orgs/{org}/actions/runners/{runner_id}/labels\",\n    ],\n    removeAllCustomLabelsFromSelfHostedRunnerForRepo: [\n      \"DELETE /repos/{owner}/{repo}/actions/runners/{runner_id}/labels\",\n    ],\n    removeCustomLabelFromSelfHostedRunnerForOrg: [\n      \"DELETE /orgs/{org}/actions/runners/{runner_id}/labels/{name}\",\n    ],\n    removeCustomLabelFromSelfHostedRunnerForRepo: [\n      \"DELETE /repos/{owner}/{repo}/actions/runners/{runner_id}/labels/{name}\",\n    ],\n    removeSelectedRepoFromOrgSecret: [\n      \"DELETE /orgs/{org}/actions/secrets/{secret_name}/repositories/{repository_id}\",\n    ],\n    removeSelectedRepoFromOrgVariable: [\n      \"DELETE /orgs/{org}/actions/variables/{name}/repositories/{repository_id}\",\n    ],\n    reviewCustomGatesForRun: [\n      \"POST /repos/{owner}/{repo}/actions/runs/{run_id}/deployment_protection_rule\",\n    ],\n    reviewPendingDeploymentsForRun: [\n      \"POST /repos/{owner}/{repo}/actions/runs/{run_id}/pending_deployments\",\n    ],\n    setAllowedActionsOrganization: [\n      \"PUT /orgs/{org}/actions/permissions/selected-actions\",\n    ],\n    setAllowedActionsRepository: [\n      \"PUT /repos/{owner}/{repo}/actions/permissions/selected-actions\",\n    ],\n    setCustomLabelsForSelfHostedRunnerForOrg: [\n      \"PUT /orgs/{org}/actions/runners/{runner_id}/labels\",\n    ],\n    setCustomLabelsForSelfHostedRunnerForRepo: [\n      \"PUT /repos/{owner}/{repo}/actions/runners/{runner_id}/labels\",\n    ],\n    setCustomOidcSubClaimForRepo: [\n      \"PUT /repos/{owner}/{repo}/actions/oidc/customization/sub\",\n    ],\n    setGithubActionsDefaultWorkflowPermissionsOrganization: [\n      \"PUT /orgs/{org}/actions/permissions/workflow\",\n    ],\n    setGithubActionsDefaultWorkflowPermissionsRepository: [\n      \"PUT /repos/{owner}/{repo}/actions/permissions/workflow\",\n    ],\n    setGithubActionsPermissionsOrganization: [\n      \"PUT /orgs/{org}/actions/permissions\",\n    ],\n    setGithubActionsPermissionsRepository: [\n      \"PUT /repos/{owner}/{repo}/actions/permissions\",\n    ],\n    setSelectedReposForOrgSecret: [\n      \"PUT /orgs/{org}/actions/secrets/{secret_name}/repositories\",\n    ],\n    setSelectedReposForOrgVariable: [\n      \"PUT /orgs/{org}/actions/variables/{name}/repositories\",\n    ],\n    setSelectedRepositoriesEnabledGithubActionsOrganization: [\n      \"PUT /orgs/{org}/actions/permissions/repositories\",\n    ],\n    setWorkflowAccessToRepository: [\n      \"PUT /repos/{owner}/{repo}/actions/permissions/access\",\n    ],\n    updateEnvironmentVariable: [\n      \"PATCH /repos/{owner}/{repo}/environments/{environment_name}/variables/{name}\",\n    ],\n    updateHostedRunnerForOrg: [\n      \"PATCH /orgs/{org}/actions/hosted-runners/{hosted_runner_id}\",\n    ],\n    updateOrgVariable: [\"PATCH /orgs/{org}/actions/variables/{name}\"],\n    updateRepoVariable: [\n      \"PATCH /repos/{owner}/{repo}/actions/variables/{name}\",\n    ],\n  },\n  activity: {\n    checkRepoIsStarredByAuthenticatedUser: [\"GET /user/starred/{owner}/{repo}\"],\n    deleteRepoSubscription: [\"DELETE /repos/{owner}/{repo}/subscription\"],\n    deleteThreadSubscription: [\n      \"DELETE /notifications/threads/{thread_id}/subscription\",\n    ],\n    getFeeds: [\"GET /feeds\"],\n    getRepoSubscription: [\"GET /repos/{owner}/{repo}/subscription\"],\n    getThread: [\"GET /notifications/threads/{thread_id}\"],\n    getThreadSubscriptionForAuthenticatedUser: [\n      \"GET /notifications/threads/{thread_id}/subscription\",\n    ],\n    listEventsForAuthenticatedUser: [\"GET /users/{username}/events\"],\n    listNotificationsForAuthenticatedUser: [\"GET /notifications\"],\n    listOrgEventsForAuthenticatedUser: [\n      \"GET /users/{username}/events/orgs/{org}\",\n    ],\n    listPublicEvents: [\"GET /events\"],\n    listPublicEventsForRepoNetwork: [\"GET /networks/{owner}/{repo}/events\"],\n    listPublicEventsForUser: [\"GET /users/{username}/events/public\"],\n    listPublicOrgEvents: [\"GET /orgs/{org}/events\"],\n    listReceivedEventsForUser: [\"GET /users/{username}/received_events\"],\n    listReceivedPublicEventsForUser: [\n      \"GET /users/{username}/received_events/public\",\n    ],\n    listRepoEvents: [\"GET /repos/{owner}/{repo}/events\"],\n    listRepoNotificationsForAuthenticatedUser: [\n      \"GET /repos/{owner}/{repo}/notifications\",\n    ],\n    listReposStarredByAuthenticatedUser: [\"GET /user/starred\"],\n    listReposStarredByUser: [\"GET /users/{username}/starred\"],\n    listReposWatchedByUser: [\"GET /users/{username}/subscriptions\"],\n    listStargazersForRepo: [\"GET /repos/{owner}/{repo}/stargazers\"],\n    listWatchedReposForAuthenticatedUser: [\"GET /user/subscriptions\"],\n    listWatchersForRepo: [\"GET /repos/{owner}/{repo}/subscribers\"],\n    markNotificationsAsRead: [\"PUT /notifications\"],\n    markRepoNotificationsAsRead: [\"PUT /repos/{owner}/{repo}/notifications\"],\n    markThreadAsDone: [\"DELETE /notifications/threads/{thread_id}\"],\n    markThreadAsRead: [\"PATCH /notifications/threads/{thread_id}\"],\n    setRepoSubscription: [\"PUT /repos/{owner}/{repo}/subscription\"],\n    setThreadSubscription: [\n      \"PUT /notifications/threads/{thread_id}/subscription\",\n    ],\n    starRepoForAuthenticatedUser: [\"PUT /user/starred/{owner}/{repo}\"],\n    unstarRepoForAuthenticatedUser: [\"DELETE /user/starred/{owner}/{repo}\"],\n  },\n  apps: {\n    addRepoToInstallation: [\n      \"PUT /user/installations/{installation_id}/repositories/{repository_id}\",\n      {},\n      { renamed: [\"apps\", \"addRepoToInstallationForAuthenticatedUser\"] },\n    ],\n    addRepoToInstallationForAuthenticatedUser: [\n      \"PUT /user/installations/{installation_id}/repositories/{repository_id}\",\n    ],\n    checkToken: [\"POST /applications/{client_id}/token\"],\n    createFromManifest: [\"POST /app-manifests/{code}/conversions\"],\n    createInstallationAccessToken: [\n      \"POST /app/installations/{installation_id}/access_tokens\",\n    ],\n    deleteAuthorization: [\"DELETE /applications/{client_id}/grant\"],\n    deleteInstallation: [\"DELETE /app/installations/{installation_id}\"],\n    deleteToken: [\"DELETE /applications/{client_id}/token\"],\n    getAuthenticated: [\"GET /app\"],\n    getBySlug: [\"GET /apps/{app_slug}\"],\n    getInstallation: [\"GET /app/installations/{installation_id}\"],\n    getOrgInstallation: [\"GET /orgs/{org}/installation\"],\n    getRepoInstallation: [\"GET /repos/{owner}/{repo}/installation\"],\n    getSubscriptionPlanForAccount: [\n      \"GET /marketplace_listing/accounts/{account_id}\",\n    ],\n    getSubscriptionPlanForAccountStubbed: [\n      \"GET /marketplace_listing/stubbed/accounts/{account_id}\",\n    ],\n    getUserInstallation: [\"GET /users/{username}/installation\"],\n    getWebhookConfigForApp: [\"GET /app/hook/config\"],\n    getWebhookDelivery: [\"GET /app/hook/deliveries/{delivery_id}\"],\n    listAccountsForPlan: [\"GET /marketplace_listing/plans/{plan_id}/accounts\"],\n    listAccountsForPlanStubbed: [\n      \"GET /marketplace_listing/stubbed/plans/{plan_id}/accounts\",\n    ],\n    listInstallationReposForAuthenticatedUser: [\n      \"GET /user/installations/{installation_id}/repositories\",\n    ],\n    listInstallationRequestsForAuthenticatedApp: [\n      \"GET /app/installation-requests\",\n    ],\n    listInstallations: [\"GET /app/installations\"],\n    listInstallationsForAuthenticatedUser: [\"GET /user/installations\"],\n    listPlans: [\"GET /marketplace_listing/plans\"],\n    listPlansStubbed: [\"GET /marketplace_listing/stubbed/plans\"],\n    listReposAccessibleToInstallation: [\"GET /installation/repositories\"],\n    listSubscriptionsForAuthenticatedUser: [\"GET /user/marketplace_purchases\"],\n    listSubscriptionsForAuthenticatedUserStubbed: [\n      \"GET /user/marketplace_purchases/stubbed\",\n    ],\n    listWebhookDeliveries: [\"GET /app/hook/deliveries\"],\n    redeliverWebhookDelivery: [\n      \"POST /app/hook/deliveries/{delivery_id}/attempts\",\n    ],\n    removeRepoFromInstallation: [\n      \"DELETE /user/installations/{installation_id}/repositories/{repository_id}\",\n      {},\n      { renamed: [\"apps\", \"removeRepoFromInstallationForAuthenticatedUser\"] },\n    ],\n    removeRepoFromInstallationForAuthenticatedUser: [\n      \"DELETE /user/installations/{installation_id}/repositories/{repository_id}\",\n    ],\n    resetToken: [\"PATCH /applications/{client_id}/token\"],\n    revokeInstallationAccessToken: [\"DELETE /installation/token\"],\n    scopeToken: [\"POST /applications/{client_id}/token/scoped\"],\n    suspendInstallation: [\"PUT /app/installations/{installation_id}/suspended\"],\n    unsuspendInstallation: [\n      \"DELETE /app/installations/{installation_id}/suspended\",\n    ],\n    updateWebhookConfigForApp: [\"PATCH /app/hook/config\"],\n  },\n  billing: {\n    getGithubActionsBillingOrg: [\"GET /orgs/{org}/settings/billing/actions\"],\n    getGithubActionsBillingUser: [\n      \"GET /users/{username}/settings/billing/actions\",\n    ],\n    getGithubBillingUsageReportOrg: [\n      \"GET /organizations/{org}/settings/billing/usage\",\n    ],\n    getGithubPackagesBillingOrg: [\"GET /orgs/{org}/settings/billing/packages\"],\n    getGithubPackagesBillingUser: [\n      \"GET /users/{username}/settings/billing/packages\",\n    ],\n    getSharedStorageBillingOrg: [\n      \"GET /orgs/{org}/settings/billing/shared-storage\",\n    ],\n    getSharedStorageBillingUser: [\n      \"GET /users/{username}/settings/billing/shared-storage\",\n    ],\n  },\n  checks: {\n    create: [\"POST /repos/{owner}/{repo}/check-runs\"],\n    createSuite: [\"POST /repos/{owner}/{repo}/check-suites\"],\n    get: [\"GET /repos/{owner}/{repo}/check-runs/{check_run_id}\"],\n    getSuite: [\"GET /repos/{owner}/{repo}/check-suites/{check_suite_id}\"],\n    listAnnotations: [\n      \"GET /repos/{owner}/{repo}/check-runs/{check_run_id}/annotations\",\n    ],\n    listForRef: [\"GET /repos/{owner}/{repo}/commits/{ref}/check-runs\"],\n    listForSuite: [\n      \"GET /repos/{owner}/{repo}/check-suites/{check_suite_id}/check-runs\",\n    ],\n    listSuitesForRef: [\"GET /repos/{owner}/{repo}/commits/{ref}/check-suites\"],\n    rerequestRun: [\n      \"POST /repos/{owner}/{repo}/check-runs/{check_run_id}/rerequest\",\n    ],\n    rerequestSuite: [\n      \"POST /repos/{owner}/{repo}/check-suites/{check_suite_id}/rerequest\",\n    ],\n    setSuitesPreferences: [\n      \"PATCH /repos/{owner}/{repo}/check-suites/preferences\",\n    ],\n    update: [\"PATCH /repos/{owner}/{repo}/check-runs/{check_run_id}\"],\n  },\n  codeScanning: {\n    commitAutofix: [\n      \"POST /repos/{owner}/{repo}/code-scanning/alerts/{alert_number}/autofix/commits\",\n    ],\n    createAutofix: [\n      \"POST /repos/{owner}/{repo}/code-scanning/alerts/{alert_number}/autofix\",\n    ],\n    createVariantAnalysis: [\n      \"POST /repos/{owner}/{repo}/code-scanning/codeql/variant-analyses\",\n    ],\n    deleteAnalysis: [\n      \"DELETE /repos/{owner}/{repo}/code-scanning/analyses/{analysis_id}{?confirm_delete}\",\n    ],\n    deleteCodeqlDatabase: [\n      \"DELETE /repos/{owner}/{repo}/code-scanning/codeql/databases/{language}\",\n    ],\n    getAlert: [\n      \"GET /repos/{owner}/{repo}/code-scanning/alerts/{alert_number}\",\n      {},\n      { renamedParameters: { alert_id: \"alert_number\" } },\n    ],\n    getAnalysis: [\n      \"GET /repos/{owner}/{repo}/code-scanning/analyses/{analysis_id}\",\n    ],\n    getAutofix: [\n      \"GET /repos/{owner}/{repo}/code-scanning/alerts/{alert_number}/autofix\",\n    ],\n    getCodeqlDatabase: [\n      \"GET /repos/{owner}/{repo}/code-scanning/codeql/databases/{language}\",\n    ],\n    getDefaultSetup: [\"GET /repos/{owner}/{repo}/code-scanning/default-setup\"],\n    getSarif: [\"GET /repos/{owner}/{repo}/code-scanning/sarifs/{sarif_id}\"],\n    getVariantAnalysis: [\n      \"GET /repos/{owner}/{repo}/code-scanning/codeql/variant-analyses/{codeql_variant_analysis_id}\",\n    ],\n    getVariantAnalysisRepoTask: [\n      \"GET /repos/{owner}/{repo}/code-scanning/codeql/variant-analyses/{codeql_variant_analysis_id}/repos/{repo_owner}/{repo_name}\",\n    ],\n    listAlertInstances: [\n      \"GET /repos/{owner}/{repo}/code-scanning/alerts/{alert_number}/instances\",\n    ],\n    listAlertsForOrg: [\"GET /orgs/{org}/code-scanning/alerts\"],\n    listAlertsForRepo: [\"GET /repos/{owner}/{repo}/code-scanning/alerts\"],\n    listAlertsInstances: [\n      \"GET /repos/{owner}/{repo}/code-scanning/alerts/{alert_number}/instances\",\n      {},\n      { renamed: [\"codeScanning\", \"listAlertInstances\"] },\n    ],\n    listCodeqlDatabases: [\n      \"GET /repos/{owner}/{repo}/code-scanning/codeql/databases\",\n    ],\n    listRecentAnalyses: [\"GET /repos/{owner}/{repo}/code-scanning/analyses\"],\n    updateAlert: [\n      \"PATCH /repos/{owner}/{repo}/code-scanning/alerts/{alert_number}\",\n    ],\n    updateDefaultSetup: [\n      \"PATCH /repos/{owner}/{repo}/code-scanning/default-setup\",\n    ],\n    uploadSarif: [\"POST /repos/{owner}/{repo}/code-scanning/sarifs\"],\n  },\n  codeSecurity: {\n    attachConfiguration: [\n      \"POST /orgs/{org}/code-security/configurations/{configuration_id}/attach\",\n    ],\n    attachEnterpriseConfiguration: [\n      \"POST /enterprises/{enterprise}/code-security/configurations/{configuration_id}/attach\",\n    ],\n    createConfiguration: [\"POST /orgs/{org}/code-security/configurations\"],\n    createConfigurationForEnterprise: [\n      \"POST /enterprises/{enterprise}/code-security/configurations\",\n    ],\n    deleteConfiguration: [\n      \"DELETE /orgs/{org}/code-security/configurations/{configuration_id}\",\n    ],\n    deleteConfigurationForEnterprise: [\n      \"DELETE /enterprises/{enterprise}/code-security/configurations/{configuration_id}\",\n    ],\n    detachConfiguration: [\n      \"DELETE /orgs/{org}/code-security/configurations/detach\",\n    ],\n    getConfiguration: [\n      \"GET /orgs/{org}/code-security/configurations/{configuration_id}\",\n    ],\n    getConfigurationForRepository: [\n      \"GET /repos/{owner}/{repo}/code-security-configuration\",\n    ],\n    getConfigurationsForEnterprise: [\n      \"GET /enterprises/{enterprise}/code-security/configurations\",\n    ],\n    getConfigurationsForOrg: [\"GET /orgs/{org}/code-security/configurations\"],\n    getDefaultConfigurations: [\n      \"GET /orgs/{org}/code-security/configurations/defaults\",\n    ],\n    getDefaultConfigurationsForEnterprise: [\n      \"GET /enterprises/{enterprise}/code-security/configurations/defaults\",\n    ],\n    getRepositoriesForConfiguration: [\n      \"GET /orgs/{org}/code-security/configurations/{configuration_id}/repositories\",\n    ],\n    getRepositoriesForEnterpriseConfiguration: [\n      \"GET /enterprises/{enterprise}/code-security/configurations/{configuration_id}/repositories\",\n    ],\n    getSingleConfigurationForEnterprise: [\n      \"GET /enterprises/{enterprise}/code-security/configurations/{configuration_id}\",\n    ],\n    setConfigurationAsDefault: [\n      \"PUT /orgs/{org}/code-security/configurations/{configuration_id}/defaults\",\n    ],\n    setConfigurationAsDefaultForEnterprise: [\n      \"PUT /enterprises/{enterprise}/code-security/configurations/{configuration_id}/defaults\",\n    ],\n    updateConfiguration: [\n      \"PATCH /orgs/{org}/code-security/configurations/{configuration_id}\",\n    ],\n    updateEnterpriseConfiguration: [\n      \"PATCH /enterprises/{enterprise}/code-security/configurations/{configuration_id}\",\n    ],\n  },\n  codesOfConduct: {\n    getAllCodesOfConduct: [\"GET /codes_of_conduct\"],\n    getConductCode: [\"GET /codes_of_conduct/{key}\"],\n  },\n  codespaces: {\n    addRepositoryForSecretForAuthenticatedUser: [\n      \"PUT /user/codespaces/secrets/{secret_name}/repositories/{repository_id}\",\n    ],\n    addSelectedRepoToOrgSecret: [\n      \"PUT /orgs/{org}/codespaces/secrets/{secret_name}/repositories/{repository_id}\",\n    ],\n    checkPermissionsForDevcontainer: [\n      \"GET /repos/{owner}/{repo}/codespaces/permissions_check\",\n    ],\n    codespaceMachinesForAuthenticatedUser: [\n      \"GET /user/codespaces/{codespace_name}/machines\",\n    ],\n    createForAuthenticatedUser: [\"POST /user/codespaces\"],\n    createOrUpdateOrgSecret: [\n      \"PUT /orgs/{org}/codespaces/secrets/{secret_name}\",\n    ],\n    createOrUpdateRepoSecret: [\n      \"PUT /repos/{owner}/{repo}/codespaces/secrets/{secret_name}\",\n    ],\n    createOrUpdateSecretForAuthenticatedUser: [\n      \"PUT /user/codespaces/secrets/{secret_name}\",\n    ],\n    createWithPrForAuthenticatedUser: [\n      \"POST /repos/{owner}/{repo}/pulls/{pull_number}/codespaces\",\n    ],\n    createWithRepoForAuthenticatedUser: [\n      \"POST /repos/{owner}/{repo}/codespaces\",\n    ],\n    deleteForAuthenticatedUser: [\"DELETE /user/codespaces/{codespace_name}\"],\n    deleteFromOrganization: [\n      \"DELETE /orgs/{org}/members/{username}/codespaces/{codespace_name}\",\n    ],\n    deleteOrgSecret: [\"DELETE /orgs/{org}/codespaces/secrets/{secret_name}\"],\n    deleteRepoSecret: [\n      \"DELETE /repos/{owner}/{repo}/codespaces/secrets/{secret_name}\",\n    ],\n    deleteSecretForAuthenticatedUser: [\n      \"DELETE /user/codespaces/secrets/{secret_name}\",\n    ],\n    exportForAuthenticatedUser: [\n      \"POST /user/codespaces/{codespace_name}/exports\",\n    ],\n    getCodespacesForUserInOrg: [\n      \"GET /orgs/{org}/members/{username}/codespaces\",\n    ],\n    getExportDetailsForAuthenticatedUser: [\n      \"GET /user/codespaces/{codespace_name}/exports/{export_id}\",\n    ],\n    getForAuthenticatedUser: [\"GET /user/codespaces/{codespace_name}\"],\n    getOrgPublicKey: [\"GET /orgs/{org}/codespaces/secrets/public-key\"],\n    getOrgSecret: [\"GET /orgs/{org}/codespaces/secrets/{secret_name}\"],\n    getPublicKeyForAuthenticatedUser: [\n      \"GET /user/codespaces/secrets/public-key\",\n    ],\n    getRepoPublicKey: [\n      \"GET /repos/{owner}/{repo}/codespaces/secrets/public-key\",\n    ],\n    getRepoSecret: [\n      \"GET /repos/{owner}/{repo}/codespaces/secrets/{secret_name}\",\n    ],\n    getSecretForAuthenticatedUser: [\n      \"GET /user/codespaces/secrets/{secret_name}\",\n    ],\n    listDevcontainersInRepositoryForAuthenticatedUser: [\n      \"GET /repos/{owner}/{repo}/codespaces/devcontainers\",\n    ],\n    listForAuthenticatedUser: [\"GET /user/codespaces\"],\n    listInOrganization: [\n      \"GET /orgs/{org}/codespaces\",\n      {},\n      { renamedParameters: { org_id: \"org\" } },\n    ],\n    listInRepositoryForAuthenticatedUser: [\n      \"GET /repos/{owner}/{repo}/codespaces\",\n    ],\n    listOrgSecrets: [\"GET /orgs/{org}/codespaces/secrets\"],\n    listRepoSecrets: [\"GET /repos/{owner}/{repo}/codespaces/secrets\"],\n    listRepositoriesForSecretForAuthenticatedUser: [\n      \"GET /user/codespaces/secrets/{secret_name}/repositories\",\n    ],\n    listSecretsForAuthenticatedUser: [\"GET /user/codespaces/secrets\"],\n    listSelectedReposForOrgSecret: [\n      \"GET /orgs/{org}/codespaces/secrets/{secret_name}/repositories\",\n    ],\n    preFlightWithRepoForAuthenticatedUser: [\n      \"GET /repos/{owner}/{repo}/codespaces/new\",\n    ],\n    publishForAuthenticatedUser: [\n      \"POST /user/codespaces/{codespace_name}/publish\",\n    ],\n    removeRepositoryForSecretForAuthenticatedUser: [\n      \"DELETE /user/codespaces/secrets/{secret_name}/repositories/{repository_id}\",\n    ],\n    removeSelectedRepoFromOrgSecret: [\n      \"DELETE /orgs/{org}/codespaces/secrets/{secret_name}/repositories/{repository_id}\",\n    ],\n    repoMachinesForAuthenticatedUser: [\n      \"GET /repos/{owner}/{repo}/codespaces/machines\",\n    ],\n    setRepositoriesForSecretForAuthenticatedUser: [\n      \"PUT /user/codespaces/secrets/{secret_name}/repositories\",\n    ],\n    setSelectedReposForOrgSecret: [\n      \"PUT /orgs/{org}/codespaces/secrets/{secret_name}/repositories\",\n    ],\n    startForAuthenticatedUser: [\"POST /user/codespaces/{codespace_name}/start\"],\n    stopForAuthenticatedUser: [\"POST /user/codespaces/{codespace_name}/stop\"],\n    stopInOrganization: [\n      \"POST /orgs/{org}/members/{username}/codespaces/{codespace_name}/stop\",\n    ],\n    updateForAuthenticatedUser: [\"PATCH /user/codespaces/{codespace_name}\"],\n  },\n  copilot: {\n    addCopilotSeatsForTeams: [\n      \"POST /orgs/{org}/copilot/billing/selected_teams\",\n    ],\n    addCopilotSeatsForUsers: [\n      \"POST /orgs/{org}/copilot/billing/selected_users\",\n    ],\n    cancelCopilotSeatAssignmentForTeams: [\n      \"DELETE /orgs/{org}/copilot/billing/selected_teams\",\n    ],\n    cancelCopilotSeatAssignmentForUsers: [\n      \"DELETE /orgs/{org}/copilot/billing/selected_users\",\n    ],\n    copilotMetricsForOrganization: [\"GET /orgs/{org}/copilot/metrics\"],\n    copilotMetricsForTeam: [\"GET /orgs/{org}/team/{team_slug}/copilot/metrics\"],\n    getCopilotOrganizationDetails: [\"GET /orgs/{org}/copilot/billing\"],\n    getCopilotSeatDetailsForUser: [\n      \"GET /orgs/{org}/members/{username}/copilot\",\n    ],\n    listCopilotSeats: [\"GET /orgs/{org}/copilot/billing/seats\"],\n    usageMetricsForOrg: [\"GET /orgs/{org}/copilot/usage\"],\n    usageMetricsForTeam: [\"GET /orgs/{org}/team/{team_slug}/copilot/usage\"],\n  },\n  dependabot: {\n    addSelectedRepoToOrgSecret: [\n      \"PUT /orgs/{org}/dependabot/secrets/{secret_name}/repositories/{repository_id}\",\n    ],\n    createOrUpdateOrgSecret: [\n      \"PUT /orgs/{org}/dependabot/secrets/{secret_name}\",\n    ],\n    createOrUpdateRepoSecret: [\n      \"PUT /repos/{owner}/{repo}/dependabot/secrets/{secret_name}\",\n    ],\n    deleteOrgSecret: [\"DELETE /orgs/{org}/dependabot/secrets/{secret_name}\"],\n    deleteRepoSecret: [\n      \"DELETE /repos/{owner}/{repo}/dependabot/secrets/{secret_name}\",\n    ],\n    getAlert: [\"GET /repos/{owner}/{repo}/dependabot/alerts/{alert_number}\"],\n    getOrgPublicKey: [\"GET /orgs/{org}/dependabot/secrets/public-key\"],\n    getOrgSecret: [\"GET /orgs/{org}/dependabot/secrets/{secret_name}\"],\n    getRepoPublicKey: [\n      \"GET /repos/{owner}/{repo}/dependabot/secrets/public-key\",\n    ],\n    getRepoSecret: [\n      \"GET /repos/{owner}/{repo}/dependabot/secrets/{secret_name}\",\n    ],\n    listAlertsForEnterprise: [\n      \"GET /enterprises/{enterprise}/dependabot/alerts\",\n    ],\n    listAlertsForOrg: [\"GET /orgs/{org}/dependabot/alerts\"],\n    listAlertsForRepo: [\"GET /repos/{owner}/{repo}/dependabot/alerts\"],\n    listOrgSecrets: [\"GET /orgs/{org}/dependabot/secrets\"],\n    listRepoSecrets: [\"GET /repos/{owner}/{repo}/dependabot/secrets\"],\n    listSelectedReposForOrgSecret: [\n      \"GET /orgs/{org}/dependabot/secrets/{secret_name}/repositories\",\n    ],\n    removeSelectedRepoFromOrgSecret: [\n      \"DELETE /orgs/{org}/dependabot/secrets/{secret_name}/repositories/{repository_id}\",\n    ],\n    setSelectedReposForOrgSecret: [\n      \"PUT /orgs/{org}/dependabot/secrets/{secret_name}/repositories\",\n    ],\n    updateAlert: [\n      \"PATCH /repos/{owner}/{repo}/dependabot/alerts/{alert_number}\",\n    ],\n  },\n  dependencyGraph: {\n    createRepositorySnapshot: [\n      \"POST /repos/{owner}/{repo}/dependency-graph/snapshots\",\n    ],\n    diffRange: [\n      \"GET /repos/{owner}/{repo}/dependency-graph/compare/{basehead}\",\n    ],\n    exportSbom: [\"GET /repos/{owner}/{repo}/dependency-graph/sbom\"],\n  },\n  emojis: { get: [\"GET /emojis\"] },\n  gists: {\n    checkIsStarred: [\"GET /gists/{gist_id}/star\"],\n    create: [\"POST /gists\"],\n    createComment: [\"POST /gists/{gist_id}/comments\"],\n    delete: [\"DELETE /gists/{gist_id}\"],\n    deleteComment: [\"DELETE /gists/{gist_id}/comments/{comment_id}\"],\n    fork: [\"POST /gists/{gist_id}/forks\"],\n    get: [\"GET /gists/{gist_id}\"],\n    getComment: [\"GET /gists/{gist_id}/comments/{comment_id}\"],\n    getRevision: [\"GET /gists/{gist_id}/{sha}\"],\n    list: [\"GET /gists\"],\n    listComments: [\"GET /gists/{gist_id}/comments\"],\n    listCommits: [\"GET /gists/{gist_id}/commits\"],\n    listForUser: [\"GET /users/{username}/gists\"],\n    listForks: [\"GET /gists/{gist_id}/forks\"],\n    listPublic: [\"GET /gists/public\"],\n    listStarred: [\"GET /gists/starred\"],\n    star: [\"PUT /gists/{gist_id}/star\"],\n    unstar: [\"DELETE /gists/{gist_id}/star\"],\n    update: [\"PATCH /gists/{gist_id}\"],\n    updateComment: [\"PATCH /gists/{gist_id}/comments/{comment_id}\"],\n  },\n  git: {\n    createBlob: [\"POST /repos/{owner}/{repo}/git/blobs\"],\n    createCommit: [\"POST /repos/{owner}/{repo}/git/commits\"],\n    createRef: [\"POST /repos/{owner}/{repo}/git/refs\"],\n    createTag: [\"POST /repos/{owner}/{repo}/git/tags\"],\n    createTree: [\"POST /repos/{owner}/{repo}/git/trees\"],\n    deleteRef: [\"DELETE /repos/{owner}/{repo}/git/refs/{ref}\"],\n    getBlob: [\"GET /repos/{owner}/{repo}/git/blobs/{file_sha}\"],\n    getCommit: [\"GET /repos/{owner}/{repo}/git/commits/{commit_sha}\"],\n    getRef: [\"GET /repos/{owner}/{repo}/git/ref/{ref}\"],\n    getTag: [\"GET /repos/{owner}/{repo}/git/tags/{tag_sha}\"],\n    getTree: [\"GET /repos/{owner}/{repo}/git/trees/{tree_sha}\"],\n    listMatchingRefs: [\"GET /repos/{owner}/{repo}/git/matching-refs/{ref}\"],\n    updateRef: [\"PATCH /repos/{owner}/{repo}/git/refs/{ref}\"],\n  },\n  gitignore: {\n    getAllTemplates: [\"GET /gitignore/templates\"],\n    getTemplate: [\"GET /gitignore/templates/{name}\"],\n  },\n  hostedCompute: {\n    createNetworkConfigurationForOrg: [\n      \"POST /orgs/{org}/settings/network-configurations\",\n    ],\n    deleteNetworkConfigurationFromOrg: [\n      \"DELETE /orgs/{org}/settings/network-configurations/{network_configuration_id}\",\n    ],\n    getNetworkConfigurationForOrg: [\n      \"GET /orgs/{org}/settings/network-configurations/{network_configuration_id}\",\n    ],\n    getNetworkSettingsForOrg: [\n      \"GET /orgs/{org}/settings/network-settings/{network_settings_id}\",\n    ],\n    listNetworkConfigurationsForOrg: [\n      \"GET /orgs/{org}/settings/network-configurations\",\n    ],\n    updateNetworkConfigurationForOrg: [\n      \"PATCH /orgs/{org}/settings/network-configurations/{network_configuration_id}\",\n    ],\n  },\n  interactions: {\n    getRestrictionsForAuthenticatedUser: [\"GET /user/interaction-limits\"],\n    getRestrictionsForOrg: [\"GET /orgs/{org}/interaction-limits\"],\n    getRestrictionsForRepo: [\"GET /repos/{owner}/{repo}/interaction-limits\"],\n    getRestrictionsForYourPublicRepos: [\n      \"GET /user/interaction-limits\",\n      {},\n      { renamed: [\"interactions\", \"getRestrictionsForAuthenticatedUser\"] },\n    ],\n    removeRestrictionsForAuthenticatedUser: [\"DELETE /user/interaction-limits\"],\n    removeRestrictionsForOrg: [\"DELETE /orgs/{org}/interaction-limits\"],\n    removeRestrictionsForRepo: [\n      \"DELETE /repos/{owner}/{repo}/interaction-limits\",\n    ],\n    removeRestrictionsForYourPublicRepos: [\n      \"DELETE /user/interaction-limits\",\n      {},\n      { renamed: [\"interactions\", \"removeRestrictionsForAuthenticatedUser\"] },\n    ],\n    setRestrictionsForAuthenticatedUser: [\"PUT /user/interaction-limits\"],\n    setRestrictionsForOrg: [\"PUT /orgs/{org}/interaction-limits\"],\n    setRestrictionsForRepo: [\"PUT /repos/{owner}/{repo}/interaction-limits\"],\n    setRestrictionsForYourPublicRepos: [\n      \"PUT /user/interaction-limits\",\n      {},\n      { renamed: [\"interactions\", \"setRestrictionsForAuthenticatedUser\"] },\n    ],\n  },\n  issues: {\n    addAssignees: [\n      \"POST /repos/{owner}/{repo}/issues/{issue_number}/assignees\",\n    ],\n    addLabels: [\"POST /repos/{owner}/{repo}/issues/{issue_number}/labels\"],\n    addSubIssue: [\n      \"POST /repos/{owner}/{repo}/issues/{issue_number}/sub_issues\",\n    ],\n    checkUserCanBeAssigned: [\"GET /repos/{owner}/{repo}/assignees/{assignee}\"],\n    checkUserCanBeAssignedToIssue: [\n      \"GET /repos/{owner}/{repo}/issues/{issue_number}/assignees/{assignee}\",\n    ],\n    create: [\"POST /repos/{owner}/{repo}/issues\"],\n    createComment: [\n      \"POST /repos/{owner}/{repo}/issues/{issue_number}/comments\",\n    ],\n    createLabel: [\"POST /repos/{owner}/{repo}/labels\"],\n    createMilestone: [\"POST /repos/{owner}/{repo}/milestones\"],\n    deleteComment: [\n      \"DELETE /repos/{owner}/{repo}/issues/comments/{comment_id}\",\n    ],\n    deleteLabel: [\"DELETE /repos/{owner}/{repo}/labels/{name}\"],\n    deleteMilestone: [\n      \"DELETE /repos/{owner}/{repo}/milestones/{milestone_number}\",\n    ],\n    get: [\"GET /repos/{owner}/{repo}/issues/{issue_number}\"],\n    getComment: [\"GET /repos/{owner}/{repo}/issues/comments/{comment_id}\"],\n    getEvent: [\"GET /repos/{owner}/{repo}/issues/events/{event_id}\"],\n    getLabel: [\"GET /repos/{owner}/{repo}/labels/{name}\"],\n    getMilestone: [\"GET /repos/{owner}/{repo}/milestones/{milestone_number}\"],\n    list: [\"GET /issues\"],\n    listAssignees: [\"GET /repos/{owner}/{repo}/assignees\"],\n    listComments: [\"GET /repos/{owner}/{repo}/issues/{issue_number}/comments\"],\n    listCommentsForRepo: [\"GET /repos/{owner}/{repo}/issues/comments\"],\n    listEvents: [\"GET /repos/{owner}/{repo}/issues/{issue_number}/events\"],\n    listEventsForRepo: [\"GET /repos/{owner}/{repo}/issues/events\"],\n    listEventsForTimeline: [\n      \"GET /repos/{owner}/{repo}/issues/{issue_number}/timeline\",\n    ],\n    listForAuthenticatedUser: [\"GET /user/issues\"],\n    listForOrg: [\"GET /orgs/{org}/issues\"],\n    listForRepo: [\"GET /repos/{owner}/{repo}/issues\"],\n    listLabelsForMilestone: [\n      \"GET /repos/{owner}/{repo}/milestones/{milestone_number}/labels\",\n    ],\n    listLabelsForRepo: [\"GET /repos/{owner}/{repo}/labels\"],\n    listLabelsOnIssue: [\n      \"GET /repos/{owner}/{repo}/issues/{issue_number}/labels\",\n    ],\n    listMilestones: [\"GET /repos/{owner}/{repo}/milestones\"],\n    listSubIssues: [\n      \"GET /repos/{owner}/{repo}/issues/{issue_number}/sub_issues\",\n    ],\n    lock: [\"PUT /repos/{owner}/{repo}/issues/{issue_number}/lock\"],\n    removeAllLabels: [\n      \"DELETE /repos/{owner}/{repo}/issues/{issue_number}/labels\",\n    ],\n    removeAssignees: [\n      \"DELETE /repos/{owner}/{repo}/issues/{issue_number}/assignees\",\n    ],\n    removeLabel: [\n      \"DELETE /repos/{owner}/{repo}/issues/{issue_number}/labels/{name}\",\n    ],\n    removeSubIssue: [\n      \"DELETE /repos/{owner}/{repo}/issues/{issue_number}/sub_issue\",\n    ],\n    reprioritizeSubIssue: [\n      \"PATCH /repos/{owner}/{repo}/issues/{issue_number}/sub_issues/priority\",\n    ],\n    setLabels: [\"PUT /repos/{owner}/{repo}/issues/{issue_number}/labels\"],\n    unlock: [\"DELETE /repos/{owner}/{repo}/issues/{issue_number}/lock\"],\n    update: [\"PATCH /repos/{owner}/{repo}/issues/{issue_number}\"],\n    updateComment: [\"PATCH /repos/{owner}/{repo}/issues/comments/{comment_id}\"],\n    updateLabel: [\"PATCH /repos/{owner}/{repo}/labels/{name}\"],\n    updateMilestone: [\n      \"PATCH /repos/{owner}/{repo}/milestones/{milestone_number}\",\n    ],\n  },\n  licenses: {\n    get: [\"GET /licenses/{license}\"],\n    getAllCommonlyUsed: [\"GET /licenses\"],\n    getForRepo: [\"GET /repos/{owner}/{repo}/license\"],\n  },\n  markdown: {\n    render: [\"POST /markdown\"],\n    renderRaw: [\n      \"POST /markdown/raw\",\n      { headers: { \"content-type\": \"text/plain; charset=utf-8\" } },\n    ],\n  },\n  meta: {\n    get: [\"GET /meta\"],\n    getAllVersions: [\"GET /versions\"],\n    getOctocat: [\"GET /octocat\"],\n    getZen: [\"GET /zen\"],\n    root: [\"GET /\"],\n  },\n  migrations: {\n    deleteArchiveForAuthenticatedUser: [\n      \"DELETE /user/migrations/{migration_id}/archive\",\n    ],\n    deleteArchiveForOrg: [\n      \"DELETE /orgs/{org}/migrations/{migration_id}/archive\",\n    ],\n    downloadArchiveForOrg: [\n      \"GET /orgs/{org}/migrations/{migration_id}/archive\",\n    ],\n    getArchiveForAuthenticatedUser: [\n      \"GET /user/migrations/{migration_id}/archive\",\n    ],\n    getStatusForAuthenticatedUser: [\"GET /user/migrations/{migration_id}\"],\n    getStatusForOrg: [\"GET /orgs/{org}/migrations/{migration_id}\"],\n    listForAuthenticatedUser: [\"GET /user/migrations\"],\n    listForOrg: [\"GET /orgs/{org}/migrations\"],\n    listReposForAuthenticatedUser: [\n      \"GET /user/migrations/{migration_id}/repositories\",\n    ],\n    listReposForOrg: [\"GET /orgs/{org}/migrations/{migration_id}/repositories\"],\n    listReposForUser: [\n      \"GET /user/migrations/{migration_id}/repositories\",\n      {},\n      { renamed: [\"migrations\", \"listReposForAuthenticatedUser\"] },\n    ],\n    startForAuthenticatedUser: [\"POST /user/migrations\"],\n    startForOrg: [\"POST /orgs/{org}/migrations\"],\n    unlockRepoForAuthenticatedUser: [\n      \"DELETE /user/migrations/{migration_id}/repos/{repo_name}/lock\",\n    ],\n    unlockRepoForOrg: [\n      \"DELETE /orgs/{org}/migrations/{migration_id}/repos/{repo_name}/lock\",\n    ],\n  },\n  oidc: {\n    getOidcCustomSubTemplateForOrg: [\n      \"GET /orgs/{org}/actions/oidc/customization/sub\",\n    ],\n    updateOidcCustomSubTemplateForOrg: [\n      \"PUT /orgs/{org}/actions/oidc/customization/sub\",\n    ],\n  },\n  orgs: {\n    addSecurityManagerTeam: [\n      \"PUT /orgs/{org}/security-managers/teams/{team_slug}\",\n      {},\n      {\n        deprecated:\n          \"octokit.rest.orgs.addSecurityManagerTeam() is deprecated, see https://docs.github.com/rest/orgs/security-managers#add-a-security-manager-team\",\n      },\n    ],\n    assignTeamToOrgRole: [\n      \"PUT /orgs/{org}/organization-roles/teams/{team_slug}/{role_id}\",\n    ],\n    assignUserToOrgRole: [\n      \"PUT /orgs/{org}/organization-roles/users/{username}/{role_id}\",\n    ],\n    blockUser: [\"PUT /orgs/{org}/blocks/{username}\"],\n    cancelInvitation: [\"DELETE /orgs/{org}/invitations/{invitation_id}\"],\n    checkBlockedUser: [\"GET /orgs/{org}/blocks/{username}\"],\n    checkMembershipForUser: [\"GET /orgs/{org}/members/{username}\"],\n    checkPublicMembershipForUser: [\"GET /orgs/{org}/public_members/{username}\"],\n    convertMemberToOutsideCollaborator: [\n      \"PUT /orgs/{org}/outside_collaborators/{username}\",\n    ],\n    createInvitation: [\"POST /orgs/{org}/invitations\"],\n    createIssueType: [\"POST /orgs/{org}/issue-types\"],\n    createOrUpdateCustomProperties: [\"PATCH /orgs/{org}/properties/schema\"],\n    createOrUpdateCustomPropertiesValuesForRepos: [\n      \"PATCH /orgs/{org}/properties/values\",\n    ],\n    createOrUpdateCustomProperty: [\n      \"PUT /orgs/{org}/properties/schema/{custom_property_name}\",\n    ],\n    createWebhook: [\"POST /orgs/{org}/hooks\"],\n    delete: [\"DELETE /orgs/{org}\"],\n    deleteIssueType: [\"DELETE /orgs/{org}/issue-types/{issue_type_id}\"],\n    deleteWebhook: [\"DELETE /orgs/{org}/hooks/{hook_id}\"],\n    enableOrDisableSecurityProductOnAllOrgRepos: [\n      \"POST /orgs/{org}/{security_product}/{enablement}\",\n      {},\n      {\n        deprecated:\n          \"octokit.rest.orgs.enableOrDisableSecurityProductOnAllOrgRepos() is deprecated, see https://docs.github.com/rest/orgs/orgs#enable-or-disable-a-security-feature-for-an-organization\",\n      },\n    ],\n    get: [\"GET /orgs/{org}\"],\n    getAllCustomProperties: [\"GET /orgs/{org}/properties/schema\"],\n    getCustomProperty: [\n      \"GET /orgs/{org}/properties/schema/{custom_property_name}\",\n    ],\n    getMembershipForAuthenticatedUser: [\"GET /user/memberships/orgs/{org}\"],\n    getMembershipForUser: [\"GET /orgs/{org}/memberships/{username}\"],\n    getOrgRole: [\"GET /orgs/{org}/organization-roles/{role_id}\"],\n    getOrgRulesetHistory: [\"GET /orgs/{org}/rulesets/{ruleset_id}/history\"],\n    getOrgRulesetVersion: [\n      \"GET /orgs/{org}/rulesets/{ruleset_id}/history/{version_id}\",\n    ],\n    getWebhook: [\"GET /orgs/{org}/hooks/{hook_id}\"],\n    getWebhookConfigForOrg: [\"GET /orgs/{org}/hooks/{hook_id}/config\"],\n    getWebhookDelivery: [\n      \"GET /orgs/{org}/hooks/{hook_id}/deliveries/{delivery_id}\",\n    ],\n    list: [\"GET /organizations\"],\n    listAppInstallations: [\"GET /orgs/{org}/installations\"],\n    listAttestations: [\"GET /orgs/{org}/attestations/{subject_digest}\"],\n    listBlockedUsers: [\"GET /orgs/{org}/blocks\"],\n    listCustomPropertiesValuesForRepos: [\"GET /orgs/{org}/properties/values\"],\n    listFailedInvitations: [\"GET /orgs/{org}/failed_invitations\"],\n    listForAuthenticatedUser: [\"GET /user/orgs\"],\n    listForUser: [\"GET /users/{username}/orgs\"],\n    listInvitationTeams: [\"GET /orgs/{org}/invitations/{invitation_id}/teams\"],\n    listIssueTypes: [\"GET /orgs/{org}/issue-types\"],\n    listMembers: [\"GET /orgs/{org}/members\"],\n    listMembershipsForAuthenticatedUser: [\"GET /user/memberships/orgs\"],\n    listOrgRoleTeams: [\"GET /orgs/{org}/organization-roles/{role_id}/teams\"],\n    listOrgRoleUsers: [\"GET /orgs/{org}/organization-roles/{role_id}/users\"],\n    listOrgRoles: [\"GET /orgs/{org}/organization-roles\"],\n    listOrganizationFineGrainedPermissions: [\n      \"GET /orgs/{org}/organization-fine-grained-permissions\",\n    ],\n    listOutsideCollaborators: [\"GET /orgs/{org}/outside_collaborators\"],\n    listPatGrantRepositories: [\n      \"GET /orgs/{org}/personal-access-tokens/{pat_id}/repositories\",\n    ],\n    listPatGrantRequestRepositories: [\n      \"GET /orgs/{org}/personal-access-token-requests/{pat_request_id}/repositories\",\n    ],\n    listPatGrantRequests: [\"GET /orgs/{org}/personal-access-token-requests\"],\n    listPatGrants: [\"GET /orgs/{org}/personal-access-tokens\"],\n    listPendingInvitations: [\"GET /orgs/{org}/invitations\"],\n    listPublicMembers: [\"GET /orgs/{org}/public_members\"],\n    listSecurityManagerTeams: [\n      \"GET /orgs/{org}/security-managers\",\n      {},\n      {\n        deprecated:\n          \"octokit.rest.orgs.listSecurityManagerTeams() is deprecated, see https://docs.github.com/rest/orgs/security-managers#list-security-manager-teams\",\n      },\n    ],\n    listWebhookDeliveries: [\"GET /orgs/{org}/hooks/{hook_id}/deliveries\"],\n    listWebhooks: [\"GET /orgs/{org}/hooks\"],\n    pingWebhook: [\"POST /orgs/{org}/hooks/{hook_id}/pings\"],\n    redeliverWebhookDelivery: [\n      \"POST /orgs/{org}/hooks/{hook_id}/deliveries/{delivery_id}/attempts\",\n    ],\n    removeCustomProperty: [\n      \"DELETE /orgs/{org}/properties/schema/{custom_property_name}\",\n    ],\n    removeMember: [\"DELETE /orgs/{org}/members/{username}\"],\n    removeMembershipForUser: [\"DELETE /orgs/{org}/memberships/{username}\"],\n    removeOutsideCollaborator: [\n      \"DELETE /orgs/{org}/outside_collaborators/{username}\",\n    ],\n    removePublicMembershipForAuthenticatedUser: [\n      \"DELETE /orgs/{org}/public_members/{username}\",\n    ],\n    removeSecurityManagerTeam: [\n      \"DELETE /orgs/{org}/security-managers/teams/{team_slug}\",\n      {},\n      {\n        deprecated:\n          \"octokit.rest.orgs.removeSecurityManagerTeam() is deprecated, see https://docs.github.com/rest/orgs/security-managers#remove-a-security-manager-team\",\n      },\n    ],\n    reviewPatGrantRequest: [\n      \"POST /orgs/{org}/personal-access-token-requests/{pat_request_id}\",\n    ],\n    reviewPatGrantRequestsInBulk: [\n      \"POST /orgs/{org}/personal-access-token-requests\",\n    ],\n    revokeAllOrgRolesTeam: [\n      \"DELETE /orgs/{org}/organization-roles/teams/{team_slug}\",\n    ],\n    revokeAllOrgRolesUser: [\n      \"DELETE /orgs/{org}/organization-roles/users/{username}\",\n    ],\n    revokeOrgRoleTeam: [\n      \"DELETE /orgs/{org}/organization-roles/teams/{team_slug}/{role_id}\",\n    ],\n    revokeOrgRoleUser: [\n      \"DELETE /orgs/{org}/organization-roles/users/{username}/{role_id}\",\n    ],\n    setMembershipForUser: [\"PUT /orgs/{org}/memberships/{username}\"],\n    setPublicMembershipForAuthenticatedUser: [\n      \"PUT /orgs/{org}/public_members/{username}\",\n    ],\n    unblockUser: [\"DELETE /orgs/{org}/blocks/{username}\"],\n    update: [\"PATCH /orgs/{org}\"],\n    updateIssueType: [\"PUT /orgs/{org}/issue-types/{issue_type_id}\"],\n    updateMembershipForAuthenticatedUser: [\n      \"PATCH /user/memberships/orgs/{org}\",\n    ],\n    updatePatAccess: [\"POST /orgs/{org}/personal-access-tokens/{pat_id}\"],\n    updatePatAccesses: [\"POST /orgs/{org}/personal-access-tokens\"],\n    updateWebhook: [\"PATCH /orgs/{org}/hooks/{hook_id}\"],\n    updateWebhookConfigForOrg: [\"PATCH /orgs/{org}/hooks/{hook_id}/config\"],\n  },\n  packages: {\n    deletePackageForAuthenticatedUser: [\n      \"DELETE /user/packages/{package_type}/{package_name}\",\n    ],\n    deletePackageForOrg: [\n      \"DELETE /orgs/{org}/packages/{package_type}/{package_name}\",\n    ],\n    deletePackageForUser: [\n      \"DELETE /users/{username}/packages/{package_type}/{package_name}\",\n    ],\n    deletePackageVersionForAuthenticatedUser: [\n      \"DELETE /user/packages/{package_type}/{package_name}/versions/{package_version_id}\",\n    ],\n    deletePackageVersionForOrg: [\n      \"DELETE /orgs/{org}/packages/{package_type}/{package_name}/versions/{package_version_id}\",\n    ],\n    deletePackageVersionForUser: [\n      \"DELETE /users/{username}/packages/{package_type}/{package_name}/versions/{package_version_id}\",\n    ],\n    getAllPackageVersionsForAPackageOwnedByAnOrg: [\n      \"GET /orgs/{org}/packages/{package_type}/{package_name}/versions\",\n      {},\n      { renamed: [\"packages\", \"getAllPackageVersionsForPackageOwnedByOrg\"] },\n    ],\n    getAllPackageVersionsForAPackageOwnedByTheAuthenticatedUser: [\n      \"GET /user/packages/{package_type}/{package_name}/versions\",\n      {},\n      {\n        renamed: [\n          \"packages\",\n          \"getAllPackageVersionsForPackageOwnedByAuthenticatedUser\",\n        ],\n      },\n    ],\n    getAllPackageVersionsForPackageOwnedByAuthenticatedUser: [\n      \"GET /user/packages/{package_type}/{package_name}/versions\",\n    ],\n    getAllPackageVersionsForPackageOwnedByOrg: [\n      \"GET /orgs/{org}/packages/{package_type}/{package_name}/versions\",\n    ],\n    getAllPackageVersionsForPackageOwnedByUser: [\n      \"GET /users/{username}/packages/{package_type}/{package_name}/versions\",\n    ],\n    getPackageForAuthenticatedUser: [\n      \"GET /user/packages/{package_type}/{package_name}\",\n    ],\n    getPackageForOrganization: [\n      \"GET /orgs/{org}/packages/{package_type}/{package_name}\",\n    ],\n    getPackageForUser: [\n      \"GET /users/{username}/packages/{package_type}/{package_name}\",\n    ],\n    getPackageVersionForAuthenticatedUser: [\n      \"GET /user/packages/{package_type}/{package_name}/versions/{package_version_id}\",\n    ],\n    getPackageVersionForOrganization: [\n      \"GET /orgs/{org}/packages/{package_type}/{package_name}/versions/{package_version_id}\",\n    ],\n    getPackageVersionForUser: [\n      \"GET /users/{username}/packages/{package_type}/{package_name}/versions/{package_version_id}\",\n    ],\n    listDockerMigrationConflictingPackagesForAuthenticatedUser: [\n      \"GET /user/docker/conflicts\",\n    ],\n    listDockerMigrationConflictingPackagesForOrganization: [\n      \"GET /orgs/{org}/docker/conflicts\",\n    ],\n    listDockerMigrationConflictingPackagesForUser: [\n      \"GET /users/{username}/docker/conflicts\",\n    ],\n    listPackagesForAuthenticatedUser: [\"GET /user/packages\"],\n    listPackagesForOrganization: [\"GET /orgs/{org}/packages\"],\n    listPackagesForUser: [\"GET /users/{username}/packages\"],\n    restorePackageForAuthenticatedUser: [\n      \"POST /user/packages/{package_type}/{package_name}/restore{?token}\",\n    ],\n    restorePackageForOrg: [\n      \"POST /orgs/{org}/packages/{package_type}/{package_name}/restore{?token}\",\n    ],\n    restorePackageForUser: [\n      \"POST /users/{username}/packages/{package_type}/{package_name}/restore{?token}\",\n    ],\n    restorePackageVersionForAuthenticatedUser: [\n      \"POST /user/packages/{package_type}/{package_name}/versions/{package_version_id}/restore\",\n    ],\n    restorePackageVersionForOrg: [\n      \"POST /orgs/{org}/packages/{package_type}/{package_name}/versions/{package_version_id}/restore\",\n    ],\n    restorePackageVersionForUser: [\n      \"POST /users/{username}/packages/{package_type}/{package_name}/versions/{package_version_id}/restore\",\n    ],\n  },\n  privateRegistries: {\n    createOrgPrivateRegistry: [\"POST /orgs/{org}/private-registries\"],\n    deleteOrgPrivateRegistry: [\n      \"DELETE /orgs/{org}/private-registries/{secret_name}\",\n    ],\n    getOrgPrivateRegistry: [\"GET /orgs/{org}/private-registries/{secret_name}\"],\n    getOrgPublicKey: [\"GET /orgs/{org}/private-registries/public-key\"],\n    listOrgPrivateRegistries: [\"GET /orgs/{org}/private-registries\"],\n    updateOrgPrivateRegistry: [\n      \"PATCH /orgs/{org}/private-registries/{secret_name}\",\n    ],\n  },\n  projects: {\n    addCollaborator: [\n      \"PUT /projects/{project_id}/collaborators/{username}\",\n      {},\n      {\n        deprecated:\n          \"octokit.rest.projects.addCollaborator() is deprecated, see https://docs.github.com/rest/projects/collaborators#add-project-collaborator\",\n      },\n    ],\n    createCard: [\n      \"POST /projects/columns/{column_id}/cards\",\n      {},\n      {\n        deprecated:\n          \"octokit.rest.projects.createCard() is deprecated, see https://docs.github.com/rest/projects/cards#create-a-project-card\",\n      },\n    ],\n    createColumn: [\n      \"POST /projects/{project_id}/columns\",\n      {},\n      {\n        deprecated:\n          \"octokit.rest.projects.createColumn() is deprecated, see https://docs.github.com/rest/projects/columns#create-a-project-column\",\n      },\n    ],\n    createForAuthenticatedUser: [\n      \"POST /user/projects\",\n      {},\n      {\n        deprecated:\n          \"octokit.rest.projects.createForAuthenticatedUser() is deprecated, see https://docs.github.com/rest/projects/projects#create-a-user-project\",\n      },\n    ],\n    createForOrg: [\n      \"POST /orgs/{org}/projects\",\n      {},\n      {\n        deprecated:\n          \"octokit.rest.projects.createForOrg() is deprecated, see https://docs.github.com/rest/projects/projects#create-an-organization-project\",\n      },\n    ],\n    createForRepo: [\n      \"POST /repos/{owner}/{repo}/projects\",\n      {},\n      {\n        deprecated:\n          \"octokit.rest.projects.createForRepo() is deprecated, see https://docs.github.com/rest/projects/projects#create-a-repository-project\",\n      },\n    ],\n    delete: [\n      \"DELETE /projects/{project_id}\",\n      {},\n      {\n        deprecated:\n          \"octokit.rest.projects.delete() is deprecated, see https://docs.github.com/rest/projects/projects#delete-a-project\",\n      },\n    ],\n    deleteCard: [\n      \"DELETE /projects/columns/cards/{card_id}\",\n      {},\n      {\n        deprecated:\n          \"octokit.rest.projects.deleteCard() is deprecated, see https://docs.github.com/rest/projects/cards#delete-a-project-card\",\n      },\n    ],\n    deleteColumn: [\n      \"DELETE /projects/columns/{column_id}\",\n      {},\n      {\n        deprecated:\n          \"octokit.rest.projects.deleteColumn() is deprecated, see https://docs.github.com/rest/projects/columns#delete-a-project-column\",\n      },\n    ],\n    get: [\n      \"GET /projects/{project_id}\",\n      {},\n      {\n        deprecated:\n          \"octokit.rest.projects.get() is deprecated, see https://docs.github.com/rest/projects/projects#get-a-project\",\n      },\n    ],\n    getCard: [\n      \"GET /projects/columns/cards/{card_id}\",\n      {},\n      {\n        deprecated:\n          \"octokit.rest.projects.getCard() is deprecated, see https://docs.github.com/rest/projects/cards#get-a-project-card\",\n      },\n    ],\n    getColumn: [\n      \"GET /projects/columns/{column_id}\",\n      {},\n      {\n        deprecated:\n          \"octokit.rest.projects.getColumn() is deprecated, see https://docs.github.com/rest/projects/columns#get-a-project-column\",\n      },\n    ],\n    getPermissionForUser: [\n      \"GET /projects/{project_id}/collaborators/{username}/permission\",\n      {},\n      {\n        deprecated:\n          \"octokit.rest.projects.getPermissionForUser() is deprecated, see https://docs.github.com/rest/projects/collaborators#get-project-permission-for-a-user\",\n      },\n    ],\n    listCards: [\n      \"GET /projects/columns/{column_id}/cards\",\n      {},\n      {\n        deprecated:\n          \"octokit.rest.projects.listCards() is deprecated, see https://docs.github.com/rest/projects/cards#list-project-cards\",\n      },\n    ],\n    listCollaborators: [\n      \"GET /projects/{project_id}/collaborators\",\n      {},\n      {\n        deprecated:\n          \"octokit.rest.projects.listCollaborators() is deprecated, see https://docs.github.com/rest/projects/collaborators#list-project-collaborators\",\n      },\n    ],\n    listColumns: [\n      \"GET /projects/{project_id}/columns\",\n      {},\n      {\n        deprecated:\n          \"octokit.rest.projects.listColumns() is deprecated, see https://docs.github.com/rest/projects/columns#list-project-columns\",\n      },\n    ],\n    listForOrg: [\n      \"GET /orgs/{org}/projects\",\n      {},\n      {\n        deprecated:\n          \"octokit.rest.projects.listForOrg() is deprecated, see https://docs.github.com/rest/projects/projects#list-organization-projects\",\n      },\n    ],\n    listForRepo: [\n      \"GET /repos/{owner}/{repo}/projects\",\n      {},\n      {\n        deprecated:\n          \"octokit.rest.projects.listForRepo() is deprecated, see https://docs.github.com/rest/projects/projects#list-repository-projects\",\n      },\n    ],\n    listForUser: [\n      \"GET /users/{username}/projects\",\n      {},\n      {\n        deprecated:\n          \"octokit.rest.projects.listForUser() is deprecated, see https://docs.github.com/rest/projects/projects#list-user-projects\",\n      },\n    ],\n    moveCard: [\n      \"POST /projects/columns/cards/{card_id}/moves\",\n      {},\n      {\n        deprecated:\n          \"octokit.rest.projects.moveCard() is deprecated, see https://docs.github.com/rest/projects/cards#move-a-project-card\",\n      },\n    ],\n    moveColumn: [\n      \"POST /projects/columns/{column_id}/moves\",\n      {},\n      {\n        deprecated:\n          \"octokit.rest.projects.moveColumn() is deprecated, see https://docs.github.com/rest/projects/columns#move-a-project-column\",\n      },\n    ],\n    removeCollaborator: [\n      \"DELETE /projects/{project_id}/collaborators/{username}\",\n      {},\n      {\n        deprecated:\n          \"octokit.rest.projects.removeCollaborator() is deprecated, see https://docs.github.com/rest/projects/collaborators#remove-user-as-a-collaborator\",\n      },\n    ],\n    update: [\n      \"PATCH /projects/{project_id}\",\n      {},\n      {\n        deprecated:\n          \"octokit.rest.projects.update() is deprecated, see https://docs.github.com/rest/projects/projects#update-a-project\",\n      },\n    ],\n    updateCard: [\n      \"PATCH /projects/columns/cards/{card_id}\",\n      {},\n      {\n        deprecated:\n          \"octokit.rest.projects.updateCard() is deprecated, see https://docs.github.com/rest/projects/cards#update-an-existing-project-card\",\n      },\n    ],\n    updateColumn: [\n      \"PATCH /projects/columns/{column_id}\",\n      {},\n      {\n        deprecated:\n          \"octokit.rest.projects.updateColumn() is deprecated, see https://docs.github.com/rest/projects/columns#update-an-existing-project-column\",\n      },\n    ],\n  },\n  pulls: {\n    checkIfMerged: [\"GET /repos/{owner}/{repo}/pulls/{pull_number}/merge\"],\n    create: [\"POST /repos/{owner}/{repo}/pulls\"],\n    createReplyForReviewComment: [\n      \"POST /repos/{owner}/{repo}/pulls/{pull_number}/comments/{comment_id}/replies\",\n    ],\n    createReview: [\"POST /repos/{owner}/{repo}/pulls/{pull_number}/reviews\"],\n    createReviewComment: [\n      \"POST /repos/{owner}/{repo}/pulls/{pull_number}/comments\",\n    ],\n    deletePendingReview: [\n      \"DELETE /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}\",\n    ],\n    deleteReviewComment: [\n      \"DELETE /repos/{owner}/{repo}/pulls/comments/{comment_id}\",\n    ],\n    dismissReview: [\n      \"PUT /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}/dismissals\",\n    ],\n    get: [\"GET /repos/{owner}/{repo}/pulls/{pull_number}\"],\n    getReview: [\n      \"GET /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}\",\n    ],\n    getReviewComment: [\"GET /repos/{owner}/{repo}/pulls/comments/{comment_id}\"],\n    list: [\"GET /repos/{owner}/{repo}/pulls\"],\n    listCommentsForReview: [\n      \"GET /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}/comments\",\n    ],\n    listCommits: [\"GET /repos/{owner}/{repo}/pulls/{pull_number}/commits\"],\n    listFiles: [\"GET /repos/{owner}/{repo}/pulls/{pull_number}/files\"],\n    listRequestedReviewers: [\n      \"GET /repos/{owner}/{repo}/pulls/{pull_number}/requested_reviewers\",\n    ],\n    listReviewComments: [\n      \"GET /repos/{owner}/{repo}/pulls/{pull_number}/comments\",\n    ],\n    listReviewCommentsForRepo: [\"GET /repos/{owner}/{repo}/pulls/comments\"],\n    listReviews: [\"GET /repos/{owner}/{repo}/pulls/{pull_number}/reviews\"],\n    merge: [\"PUT /repos/{owner}/{repo}/pulls/{pull_number}/merge\"],\n    removeRequestedReviewers: [\n      \"DELETE /repos/{owner}/{repo}/pulls/{pull_number}/requested_reviewers\",\n    ],\n    requestReviewers: [\n      \"POST /repos/{owner}/{repo}/pulls/{pull_number}/requested_reviewers\",\n    ],\n    submitReview: [\n      \"POST /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}/events\",\n    ],\n    update: [\"PATCH /repos/{owner}/{repo}/pulls/{pull_number}\"],\n    updateBranch: [\n      \"PUT /repos/{owner}/{repo}/pulls/{pull_number}/update-branch\",\n    ],\n    updateReview: [\n      \"PUT /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}\",\n    ],\n    updateReviewComment: [\n      \"PATCH /repos/{owner}/{repo}/pulls/comments/{comment_id}\",\n    ],\n  },\n  rateLimit: { get: [\"GET /rate_limit\"] },\n  reactions: {\n    createForCommitComment: [\n      \"POST /repos/{owner}/{repo}/comments/{comment_id}/reactions\",\n    ],\n    createForIssue: [\n      \"POST /repos/{owner}/{repo}/issues/{issue_number}/reactions\",\n    ],\n    createForIssueComment: [\n      \"POST /repos/{owner}/{repo}/issues/comments/{comment_id}/reactions\",\n    ],\n    createForPullRequestReviewComment: [\n      \"POST /repos/{owner}/{repo}/pulls/comments/{comment_id}/reactions\",\n    ],\n    createForRelease: [\n      \"POST /repos/{owner}/{repo}/releases/{release_id}/reactions\",\n    ],\n    createForTeamDiscussionCommentInOrg: [\n      \"POST /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}/reactions\",\n    ],\n    createForTeamDiscussionInOrg: [\n      \"POST /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/reactions\",\n    ],\n    deleteForCommitComment: [\n      \"DELETE /repos/{owner}/{repo}/comments/{comment_id}/reactions/{reaction_id}\",\n    ],\n    deleteForIssue: [\n      \"DELETE /repos/{owner}/{repo}/issues/{issue_number}/reactions/{reaction_id}\",\n    ],\n    deleteForIssueComment: [\n      \"DELETE /repos/{owner}/{repo}/issues/comments/{comment_id}/reactions/{reaction_id}\",\n    ],\n    deleteForPullRequestComment: [\n      \"DELETE /repos/{owner}/{repo}/pulls/comments/{comment_id}/reactions/{reaction_id}\",\n    ],\n    deleteForRelease: [\n      \"DELETE /repos/{owner}/{repo}/releases/{release_id}/reactions/{reaction_id}\",\n    ],\n    deleteForTeamDiscussion: [\n      \"DELETE /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/reactions/{reaction_id}\",\n    ],\n    deleteForTeamDiscussionComment: [\n      \"DELETE /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}/reactions/{reaction_id}\",\n    ],\n    listForCommitComment: [\n      \"GET /repos/{owner}/{repo}/comments/{comment_id}/reactions\",\n    ],\n    listForIssue: [\"GET /repos/{owner}/{repo}/issues/{issue_number}/reactions\"],\n    listForIssueComment: [\n      \"GET /repos/{owner}/{repo}/issues/comments/{comment_id}/reactions\",\n    ],\n    listForPullRequestReviewComment: [\n      \"GET /repos/{owner}/{repo}/pulls/comments/{comment_id}/reactions\",\n    ],\n    listForRelease: [\n      \"GET /repos/{owner}/{repo}/releases/{release_id}/reactions\",\n    ],\n    listForTeamDiscussionCommentInOrg: [\n      \"GET /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}/reactions\",\n    ],\n    listForTeamDiscussionInOrg: [\n      \"GET /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/reactions\",\n    ],\n  },\n  repos: {\n    acceptInvitation: [\n      \"PATCH /user/repository_invitations/{invitation_id}\",\n      {},\n      { renamed: [\"repos\", \"acceptInvitationForAuthenticatedUser\"] },\n    ],\n    acceptInvitationForAuthenticatedUser: [\n      \"PATCH /user/repository_invitations/{invitation_id}\",\n    ],\n    addAppAccessRestrictions: [\n      \"POST /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/apps\",\n      {},\n      { mapToData: \"apps\" },\n    ],\n    addCollaborator: [\"PUT /repos/{owner}/{repo}/collaborators/{username}\"],\n    addStatusCheckContexts: [\n      \"POST /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks/contexts\",\n      {},\n      { mapToData: \"contexts\" },\n    ],\n    addTeamAccessRestrictions: [\n      \"POST /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/teams\",\n      {},\n      { mapToData: \"teams\" },\n    ],\n    addUserAccessRestrictions: [\n      \"POST /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/users\",\n      {},\n      { mapToData: \"users\" },\n    ],\n    cancelPagesDeployment: [\n      \"POST /repos/{owner}/{repo}/pages/deployments/{pages_deployment_id}/cancel\",\n    ],\n    checkAutomatedSecurityFixes: [\n      \"GET /repos/{owner}/{repo}/automated-security-fixes\",\n    ],\n    checkCollaborator: [\"GET /repos/{owner}/{repo}/collaborators/{username}\"],\n    checkPrivateVulnerabilityReporting: [\n      \"GET /repos/{owner}/{repo}/private-vulnerability-reporting\",\n    ],\n    checkVulnerabilityAlerts: [\n      \"GET /repos/{owner}/{repo}/vulnerability-alerts\",\n    ],\n    codeownersErrors: [\"GET /repos/{owner}/{repo}/codeowners/errors\"],\n    compareCommits: [\"GET /repos/{owner}/{repo}/compare/{base}...{head}\"],\n    compareCommitsWithBasehead: [\n      \"GET /repos/{owner}/{repo}/compare/{basehead}\",\n    ],\n    createAttestation: [\"POST /repos/{owner}/{repo}/attestations\"],\n    createAutolink: [\"POST /repos/{owner}/{repo}/autolinks\"],\n    createCommitComment: [\n      \"POST /repos/{owner}/{repo}/commits/{commit_sha}/comments\",\n    ],\n    createCommitSignatureProtection: [\n      \"POST /repos/{owner}/{repo}/branches/{branch}/protection/required_signatures\",\n    ],\n    createCommitStatus: [\"POST /repos/{owner}/{repo}/statuses/{sha}\"],\n    createDeployKey: [\"POST /repos/{owner}/{repo}/keys\"],\n    createDeployment: [\"POST /repos/{owner}/{repo}/deployments\"],\n    createDeploymentBranchPolicy: [\n      \"POST /repos/{owner}/{repo}/environments/{environment_name}/deployment-branch-policies\",\n    ],\n    createDeploymentProtectionRule: [\n      \"POST /repos/{owner}/{repo}/environments/{environment_name}/deployment_protection_rules\",\n    ],\n    createDeploymentStatus: [\n      \"POST /repos/{owner}/{repo}/deployments/{deployment_id}/statuses\",\n    ],\n    createDispatchEvent: [\"POST /repos/{owner}/{repo}/dispatches\"],\n    createForAuthenticatedUser: [\"POST /user/repos\"],\n    createFork: [\"POST /repos/{owner}/{repo}/forks\"],\n    createInOrg: [\"POST /orgs/{org}/repos\"],\n    createOrUpdateCustomPropertiesValues: [\n      \"PATCH /repos/{owner}/{repo}/properties/values\",\n    ],\n    createOrUpdateEnvironment: [\n      \"PUT /repos/{owner}/{repo}/environments/{environment_name}\",\n    ],\n    createOrUpdateFileContents: [\"PUT /repos/{owner}/{repo}/contents/{path}\"],\n    createOrgRuleset: [\"POST /orgs/{org}/rulesets\"],\n    createPagesDeployment: [\"POST /repos/{owner}/{repo}/pages/deployments\"],\n    createPagesSite: [\"POST /repos/{owner}/{repo}/pages\"],\n    createRelease: [\"POST /repos/{owner}/{repo}/releases\"],\n    createRepoRuleset: [\"POST /repos/{owner}/{repo}/rulesets\"],\n    createUsingTemplate: [\n      \"POST /repos/{template_owner}/{template_repo}/generate\",\n    ],\n    createWebhook: [\"POST /repos/{owner}/{repo}/hooks\"],\n    declineInvitation: [\n      \"DELETE /user/repository_invitations/{invitation_id}\",\n      {},\n      { renamed: [\"repos\", \"declineInvitationForAuthenticatedUser\"] },\n    ],\n    declineInvitationForAuthenticatedUser: [\n      \"DELETE /user/repository_invitations/{invitation_id}\",\n    ],\n    delete: [\"DELETE /repos/{owner}/{repo}\"],\n    deleteAccessRestrictions: [\n      \"DELETE /repos/{owner}/{repo}/branches/{branch}/protection/restrictions\",\n    ],\n    deleteAdminBranchProtection: [\n      \"DELETE /repos/{owner}/{repo}/branches/{branch}/protection/enforce_admins\",\n    ],\n    deleteAnEnvironment: [\n      \"DELETE /repos/{owner}/{repo}/environments/{environment_name}\",\n    ],\n    deleteAutolink: [\"DELETE /repos/{owner}/{repo}/autolinks/{autolink_id}\"],\n    deleteBranchProtection: [\n      \"DELETE /repos/{owner}/{repo}/branches/{branch}/protection\",\n    ],\n    deleteCommitComment: [\"DELETE /repos/{owner}/{repo}/comments/{comment_id}\"],\n    deleteCommitSignatureProtection: [\n      \"DELETE /repos/{owner}/{repo}/branches/{branch}/protection/required_signatures\",\n    ],\n    deleteDeployKey: [\"DELETE /repos/{owner}/{repo}/keys/{key_id}\"],\n    deleteDeployment: [\n      \"DELETE /repos/{owner}/{repo}/deployments/{deployment_id}\",\n    ],\n    deleteDeploymentBranchPolicy: [\n      \"DELETE /repos/{owner}/{repo}/environments/{environment_name}/deployment-branch-policies/{branch_policy_id}\",\n    ],\n    deleteFile: [\"DELETE /repos/{owner}/{repo}/contents/{path}\"],\n    deleteInvitation: [\n      \"DELETE /repos/{owner}/{repo}/invitations/{invitation_id}\",\n    ],\n    deleteOrgRuleset: [\"DELETE /orgs/{org}/rulesets/{ruleset_id}\"],\n    deletePagesSite: [\"DELETE /repos/{owner}/{repo}/pages\"],\n    deletePullRequestReviewProtection: [\n      \"DELETE /repos/{owner}/{repo}/branches/{branch}/protection/required_pull_request_reviews\",\n    ],\n    deleteRelease: [\"DELETE /repos/{owner}/{repo}/releases/{release_id}\"],\n    deleteReleaseAsset: [\n      \"DELETE /repos/{owner}/{repo}/releases/assets/{asset_id}\",\n    ],\n    deleteRepoRuleset: [\"DELETE /repos/{owner}/{repo}/rulesets/{ruleset_id}\"],\n    deleteWebhook: [\"DELETE /repos/{owner}/{repo}/hooks/{hook_id}\"],\n    disableAutomatedSecurityFixes: [\n      \"DELETE /repos/{owner}/{repo}/automated-security-fixes\",\n    ],\n    disableDeploymentProtectionRule: [\n      \"DELETE /repos/{owner}/{repo}/environments/{environment_name}/deployment_protection_rules/{protection_rule_id}\",\n    ],\n    disablePrivateVulnerabilityReporting: [\n      \"DELETE /repos/{owner}/{repo}/private-vulnerability-reporting\",\n    ],\n    disableVulnerabilityAlerts: [\n      \"DELETE /repos/{owner}/{repo}/vulnerability-alerts\",\n    ],\n    downloadArchive: [\n      \"GET /repos/{owner}/{repo}/zipball/{ref}\",\n      {},\n      { renamed: [\"repos\", \"downloadZipballArchive\"] },\n    ],\n    downloadTarballArchive: [\"GET /repos/{owner}/{repo}/tarball/{ref}\"],\n    downloadZipballArchive: [\"GET /repos/{owner}/{repo}/zipball/{ref}\"],\n    enableAutomatedSecurityFixes: [\n      \"PUT /repos/{owner}/{repo}/automated-security-fixes\",\n    ],\n    enablePrivateVulnerabilityReporting: [\n      \"PUT /repos/{owner}/{repo}/private-vulnerability-reporting\",\n    ],\n    enableVulnerabilityAlerts: [\n      \"PUT /repos/{owner}/{repo}/vulnerability-alerts\",\n    ],\n    generateReleaseNotes: [\n      \"POST /repos/{owner}/{repo}/releases/generate-notes\",\n    ],\n    get: [\"GET /repos/{owner}/{repo}\"],\n    getAccessRestrictions: [\n      \"GET /repos/{owner}/{repo}/branches/{branch}/protection/restrictions\",\n    ],\n    getAdminBranchProtection: [\n      \"GET /repos/{owner}/{repo}/branches/{branch}/protection/enforce_admins\",\n    ],\n    getAllDeploymentProtectionRules: [\n      \"GET /repos/{owner}/{repo}/environments/{environment_name}/deployment_protection_rules\",\n    ],\n    getAllEnvironments: [\"GET /repos/{owner}/{repo}/environments\"],\n    getAllStatusCheckContexts: [\n      \"GET /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks/contexts\",\n    ],\n    getAllTopics: [\"GET /repos/{owner}/{repo}/topics\"],\n    getAppsWithAccessToProtectedBranch: [\n      \"GET /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/apps\",\n    ],\n    getAutolink: [\"GET /repos/{owner}/{repo}/autolinks/{autolink_id}\"],\n    getBranch: [\"GET /repos/{owner}/{repo}/branches/{branch}\"],\n    getBranchProtection: [\n      \"GET /repos/{owner}/{repo}/branches/{branch}/protection\",\n    ],\n    getBranchRules: [\"GET /repos/{owner}/{repo}/rules/branches/{branch}\"],\n    getClones: [\"GET /repos/{owner}/{repo}/traffic/clones\"],\n    getCodeFrequencyStats: [\"GET /repos/{owner}/{repo}/stats/code_frequency\"],\n    getCollaboratorPermissionLevel: [\n      \"GET /repos/{owner}/{repo}/collaborators/{username}/permission\",\n    ],\n    getCombinedStatusForRef: [\"GET /repos/{owner}/{repo}/commits/{ref}/status\"],\n    getCommit: [\"GET /repos/{owner}/{repo}/commits/{ref}\"],\n    getCommitActivityStats: [\"GET /repos/{owner}/{repo}/stats/commit_activity\"],\n    getCommitComment: [\"GET /repos/{owner}/{repo}/comments/{comment_id}\"],\n    getCommitSignatureProtection: [\n      \"GET /repos/{owner}/{repo}/branches/{branch}/protection/required_signatures\",\n    ],\n    getCommunityProfileMetrics: [\"GET /repos/{owner}/{repo}/community/profile\"],\n    getContent: [\"GET /repos/{owner}/{repo}/contents/{path}\"],\n    getContributorsStats: [\"GET /repos/{owner}/{repo}/stats/contributors\"],\n    getCustomDeploymentProtectionRule: [\n      \"GET /repos/{owner}/{repo}/environments/{environment_name}/deployment_protection_rules/{protection_rule_id}\",\n    ],\n    getCustomPropertiesValues: [\"GET /repos/{owner}/{repo}/properties/values\"],\n    getDeployKey: [\"GET /repos/{owner}/{repo}/keys/{key_id}\"],\n    getDeployment: [\"GET /repos/{owner}/{repo}/deployments/{deployment_id}\"],\n    getDeploymentBranchPolicy: [\n      \"GET /repos/{owner}/{repo}/environments/{environment_name}/deployment-branch-policies/{branch_policy_id}\",\n    ],\n    getDeploymentStatus: [\n      \"GET /repos/{owner}/{repo}/deployments/{deployment_id}/statuses/{status_id}\",\n    ],\n    getEnvironment: [\n      \"GET /repos/{owner}/{repo}/environments/{environment_name}\",\n    ],\n    getLatestPagesBuild: [\"GET /repos/{owner}/{repo}/pages/builds/latest\"],\n    getLatestRelease: [\"GET /repos/{owner}/{repo}/releases/latest\"],\n    getOrgRuleSuite: [\"GET /orgs/{org}/rulesets/rule-suites/{rule_suite_id}\"],\n    getOrgRuleSuites: [\"GET /orgs/{org}/rulesets/rule-suites\"],\n    getOrgRuleset: [\"GET /orgs/{org}/rulesets/{ruleset_id}\"],\n    getOrgRulesets: [\"GET /orgs/{org}/rulesets\"],\n    getPages: [\"GET /repos/{owner}/{repo}/pages\"],\n    getPagesBuild: [\"GET /repos/{owner}/{repo}/pages/builds/{build_id}\"],\n    getPagesDeployment: [\n      \"GET /repos/{owner}/{repo}/pages/deployments/{pages_deployment_id}\",\n    ],\n    getPagesHealthCheck: [\"GET /repos/{owner}/{repo}/pages/health\"],\n    getParticipationStats: [\"GET /repos/{owner}/{repo}/stats/participation\"],\n    getPullRequestReviewProtection: [\n      \"GET /repos/{owner}/{repo}/branches/{branch}/protection/required_pull_request_reviews\",\n    ],\n    getPunchCardStats: [\"GET /repos/{owner}/{repo}/stats/punch_card\"],\n    getReadme: [\"GET /repos/{owner}/{repo}/readme\"],\n    getReadmeInDirectory: [\"GET /repos/{owner}/{repo}/readme/{dir}\"],\n    getRelease: [\"GET /repos/{owner}/{repo}/releases/{release_id}\"],\n    getReleaseAsset: [\"GET /repos/{owner}/{repo}/releases/assets/{asset_id}\"],\n    getReleaseByTag: [\"GET /repos/{owner}/{repo}/releases/tags/{tag}\"],\n    getRepoRuleSuite: [\n      \"GET /repos/{owner}/{repo}/rulesets/rule-suites/{rule_suite_id}\",\n    ],\n    getRepoRuleSuites: [\"GET /repos/{owner}/{repo}/rulesets/rule-suites\"],\n    getRepoRuleset: [\"GET /repos/{owner}/{repo}/rulesets/{ruleset_id}\"],\n    getRepoRulesetHistory: [\n      \"GET /repos/{owner}/{repo}/rulesets/{ruleset_id}/history\",\n    ],\n    getRepoRulesetVersion: [\n      \"GET /repos/{owner}/{repo}/rulesets/{ruleset_id}/history/{version_id}\",\n    ],\n    getRepoRulesets: [\"GET /repos/{owner}/{repo}/rulesets\"],\n    getStatusChecksProtection: [\n      \"GET /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks\",\n    ],\n    getTeamsWithAccessToProtectedBranch: [\n      \"GET /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/teams\",\n    ],\n    getTopPaths: [\"GET /repos/{owner}/{repo}/traffic/popular/paths\"],\n    getTopReferrers: [\"GET /repos/{owner}/{repo}/traffic/popular/referrers\"],\n    getUsersWithAccessToProtectedBranch: [\n      \"GET /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/users\",\n    ],\n    getViews: [\"GET /repos/{owner}/{repo}/traffic/views\"],\n    getWebhook: [\"GET /repos/{owner}/{repo}/hooks/{hook_id}\"],\n    getWebhookConfigForRepo: [\n      \"GET /repos/{owner}/{repo}/hooks/{hook_id}/config\",\n    ],\n    getWebhookDelivery: [\n      \"GET /repos/{owner}/{repo}/hooks/{hook_id}/deliveries/{delivery_id}\",\n    ],\n    listActivities: [\"GET /repos/{owner}/{repo}/activity\"],\n    listAttestations: [\n      \"GET /repos/{owner}/{repo}/attestations/{subject_digest}\",\n    ],\n    listAutolinks: [\"GET /repos/{owner}/{repo}/autolinks\"],\n    listBranches: [\"GET /repos/{owner}/{repo}/branches\"],\n    listBranchesForHeadCommit: [\n      \"GET /repos/{owner}/{repo}/commits/{commit_sha}/branches-where-head\",\n    ],\n    listCollaborators: [\"GET /repos/{owner}/{repo}/collaborators\"],\n    listCommentsForCommit: [\n      \"GET /repos/{owner}/{repo}/commits/{commit_sha}/comments\",\n    ],\n    listCommitCommentsForRepo: [\"GET /repos/{owner}/{repo}/comments\"],\n    listCommitStatusesForRef: [\n      \"GET /repos/{owner}/{repo}/commits/{ref}/statuses\",\n    ],\n    listCommits: [\"GET /repos/{owner}/{repo}/commits\"],\n    listContributors: [\"GET /repos/{owner}/{repo}/contributors\"],\n    listCustomDeploymentRuleIntegrations: [\n      \"GET /repos/{owner}/{repo}/environments/{environment_name}/deployment_protection_rules/apps\",\n    ],\n    listDeployKeys: [\"GET /repos/{owner}/{repo}/keys\"],\n    listDeploymentBranchPolicies: [\n      \"GET /repos/{owner}/{repo}/environments/{environment_name}/deployment-branch-policies\",\n    ],\n    listDeploymentStatuses: [\n      \"GET /repos/{owner}/{repo}/deployments/{deployment_id}/statuses\",\n    ],\n    listDeployments: [\"GET /repos/{owner}/{repo}/deployments\"],\n    listForAuthenticatedUser: [\"GET /user/repos\"],\n    listForOrg: [\"GET /orgs/{org}/repos\"],\n    listForUser: [\"GET /users/{username}/repos\"],\n    listForks: [\"GET /repos/{owner}/{repo}/forks\"],\n    listInvitations: [\"GET /repos/{owner}/{repo}/invitations\"],\n    listInvitationsForAuthenticatedUser: [\"GET /user/repository_invitations\"],\n    listLanguages: [\"GET /repos/{owner}/{repo}/languages\"],\n    listPagesBuilds: [\"GET /repos/{owner}/{repo}/pages/builds\"],\n    listPublic: [\"GET /repositories\"],\n    listPullRequestsAssociatedWithCommit: [\n      \"GET /repos/{owner}/{repo}/commits/{commit_sha}/pulls\",\n    ],\n    listReleaseAssets: [\n      \"GET /repos/{owner}/{repo}/releases/{release_id}/assets\",\n    ],\n    listReleases: [\"GET /repos/{owner}/{repo}/releases\"],\n    listTags: [\"GET /repos/{owner}/{repo}/tags\"],\n    listTeams: [\"GET /repos/{owner}/{repo}/teams\"],\n    listWebhookDeliveries: [\n      \"GET /repos/{owner}/{repo}/hooks/{hook_id}/deliveries\",\n    ],\n    listWebhooks: [\"GET /repos/{owner}/{repo}/hooks\"],\n    merge: [\"POST /repos/{owner}/{repo}/merges\"],\n    mergeUpstream: [\"POST /repos/{owner}/{repo}/merge-upstream\"],\n    pingWebhook: [\"POST /repos/{owner}/{repo}/hooks/{hook_id}/pings\"],\n    redeliverWebhookDelivery: [\n      \"POST /repos/{owner}/{repo}/hooks/{hook_id}/deliveries/{delivery_id}/attempts\",\n    ],\n    removeAppAccessRestrictions: [\n      \"DELETE /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/apps\",\n      {},\n      { mapToData: \"apps\" },\n    ],\n    removeCollaborator: [\n      \"DELETE /repos/{owner}/{repo}/collaborators/{username}\",\n    ],\n    removeStatusCheckContexts: [\n      \"DELETE /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks/contexts\",\n      {},\n      { mapToData: \"contexts\" },\n    ],\n    removeStatusCheckProtection: [\n      \"DELETE /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks\",\n    ],\n    removeTeamAccessRestrictions: [\n      \"DELETE /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/teams\",\n      {},\n      { mapToData: \"teams\" },\n    ],\n    removeUserAccessRestrictions: [\n      \"DELETE /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/users\",\n      {},\n      { mapToData: \"users\" },\n    ],\n    renameBranch: [\"POST /repos/{owner}/{repo}/branches/{branch}/rename\"],\n    replaceAllTopics: [\"PUT /repos/{owner}/{repo}/topics\"],\n    requestPagesBuild: [\"POST /repos/{owner}/{repo}/pages/builds\"],\n    setAdminBranchProtection: [\n      \"POST /repos/{owner}/{repo}/branches/{branch}/protection/enforce_admins\",\n    ],\n    setAppAccessRestrictions: [\n      \"PUT /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/apps\",\n      {},\n      { mapToData: \"apps\" },\n    ],\n    setStatusCheckContexts: [\n      \"PUT /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks/contexts\",\n      {},\n      { mapToData: \"contexts\" },\n    ],\n    setTeamAccessRestrictions: [\n      \"PUT /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/teams\",\n      {},\n      { mapToData: \"teams\" },\n    ],\n    setUserAccessRestrictions: [\n      \"PUT /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/users\",\n      {},\n      { mapToData: \"users\" },\n    ],\n    testPushWebhook: [\"POST /repos/{owner}/{repo}/hooks/{hook_id}/tests\"],\n    transfer: [\"POST /repos/{owner}/{repo}/transfer\"],\n    update: [\"PATCH /repos/{owner}/{repo}\"],\n    updateBranchProtection: [\n      \"PUT /repos/{owner}/{repo}/branches/{branch}/protection\",\n    ],\n    updateCommitComment: [\"PATCH /repos/{owner}/{repo}/comments/{comment_id}\"],\n    updateDeploymentBranchPolicy: [\n      \"PUT /repos/{owner}/{repo}/environments/{environment_name}/deployment-branch-policies/{branch_policy_id}\",\n    ],\n    updateInformationAboutPagesSite: [\"PUT /repos/{owner}/{repo}/pages\"],\n    updateInvitation: [\n      \"PATCH /repos/{owner}/{repo}/invitations/{invitation_id}\",\n    ],\n    updateOrgRuleset: [\"PUT /orgs/{org}/rulesets/{ruleset_id}\"],\n    updatePullRequestReviewProtection: [\n      \"PATCH /repos/{owner}/{repo}/branches/{branch}/protection/required_pull_request_reviews\",\n    ],\n    updateRelease: [\"PATCH /repos/{owner}/{repo}/releases/{release_id}\"],\n    updateReleaseAsset: [\n      \"PATCH /repos/{owner}/{repo}/releases/assets/{asset_id}\",\n    ],\n    updateRepoRuleset: [\"PUT /repos/{owner}/{repo}/rulesets/{ruleset_id}\"],\n    updateStatusCheckPotection: [\n      \"PATCH /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks\",\n      {},\n      { renamed: [\"repos\", \"updateStatusCheckProtection\"] },\n    ],\n    updateStatusCheckProtection: [\n      \"PATCH /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks\",\n    ],\n    updateWebhook: [\"PATCH /repos/{owner}/{repo}/hooks/{hook_id}\"],\n    updateWebhookConfigForRepo: [\n      \"PATCH /repos/{owner}/{repo}/hooks/{hook_id}/config\",\n    ],\n    uploadReleaseAsset: [\n      \"POST /repos/{owner}/{repo}/releases/{release_id}/assets{?name,label}\",\n      { baseUrl: \"https://uploads.github.com\" },\n    ],\n  },\n  search: {\n    code: [\"GET /search/code\"],\n    commits: [\"GET /search/commits\"],\n    issuesAndPullRequests: [\n      \"GET /search/issues\",\n      {},\n      {\n        deprecated:\n          \"octokit.rest.search.issuesAndPullRequests() is deprecated, see https://docs.github.com/rest/search/search#search-issues-and-pull-requests\",\n      },\n    ],\n    labels: [\"GET /search/labels\"],\n    repos: [\"GET /search/repositories\"],\n    topics: [\"GET /search/topics\"],\n    users: [\"GET /search/users\"],\n  },\n  secretScanning: {\n    createPushProtectionBypass: [\n      \"POST /repos/{owner}/{repo}/secret-scanning/push-protection-bypasses\",\n    ],\n    getAlert: [\n      \"GET /repos/{owner}/{repo}/secret-scanning/alerts/{alert_number}\",\n    ],\n    getScanHistory: [\"GET /repos/{owner}/{repo}/secret-scanning/scan-history\"],\n    listAlertsForEnterprise: [\n      \"GET /enterprises/{enterprise}/secret-scanning/alerts\",\n    ],\n    listAlertsForOrg: [\"GET /orgs/{org}/secret-scanning/alerts\"],\n    listAlertsForRepo: [\"GET /repos/{owner}/{repo}/secret-scanning/alerts\"],\n    listLocationsForAlert: [\n      \"GET /repos/{owner}/{repo}/secret-scanning/alerts/{alert_number}/locations\",\n    ],\n    updateAlert: [\n      \"PATCH /repos/{owner}/{repo}/secret-scanning/alerts/{alert_number}\",\n    ],\n  },\n  securityAdvisories: {\n    createFork: [\n      \"POST /repos/{owner}/{repo}/security-advisories/{ghsa_id}/forks\",\n    ],\n    createPrivateVulnerabilityReport: [\n      \"POST /repos/{owner}/{repo}/security-advisories/reports\",\n    ],\n    createRepositoryAdvisory: [\n      \"POST /repos/{owner}/{repo}/security-advisories\",\n    ],\n    createRepositoryAdvisoryCveRequest: [\n      \"POST /repos/{owner}/{repo}/security-advisories/{ghsa_id}/cve\",\n    ],\n    getGlobalAdvisory: [\"GET /advisories/{ghsa_id}\"],\n    getRepositoryAdvisory: [\n      \"GET /repos/{owner}/{repo}/security-advisories/{ghsa_id}\",\n    ],\n    listGlobalAdvisories: [\"GET /advisories\"],\n    listOrgRepositoryAdvisories: [\"GET /orgs/{org}/security-advisories\"],\n    listRepositoryAdvisories: [\"GET /repos/{owner}/{repo}/security-advisories\"],\n    updateRepositoryAdvisory: [\n      \"PATCH /repos/{owner}/{repo}/security-advisories/{ghsa_id}\",\n    ],\n  },\n  teams: {\n    addOrUpdateMembershipForUserInOrg: [\n      \"PUT /orgs/{org}/teams/{team_slug}/memberships/{username}\",\n    ],\n    addOrUpdateProjectPermissionsInOrg: [\n      \"PUT /orgs/{org}/teams/{team_slug}/projects/{project_id}\",\n      {},\n      {\n        deprecated:\n          \"octokit.rest.teams.addOrUpdateProjectPermissionsInOrg() is deprecated, see https://docs.github.com/rest/teams/teams#add-or-update-team-project-permissions\",\n      },\n    ],\n    addOrUpdateProjectPermissionsLegacy: [\n      \"PUT /teams/{team_id}/projects/{project_id}\",\n      {},\n      {\n        deprecated:\n          \"octokit.rest.teams.addOrUpdateProjectPermissionsLegacy() is deprecated, see https://docs.github.com/rest/teams/teams#add-or-update-team-project-permissions-legacy\",\n      },\n    ],\n    addOrUpdateRepoPermissionsInOrg: [\n      \"PUT /orgs/{org}/teams/{team_slug}/repos/{owner}/{repo}\",\n    ],\n    checkPermissionsForProjectInOrg: [\n      \"GET /orgs/{org}/teams/{team_slug}/projects/{project_id}\",\n      {},\n      {\n        deprecated:\n          \"octokit.rest.teams.checkPermissionsForProjectInOrg() is deprecated, see https://docs.github.com/rest/teams/teams#check-team-permissions-for-a-project\",\n      },\n    ],\n    checkPermissionsForProjectLegacy: [\n      \"GET /teams/{team_id}/projects/{project_id}\",\n      {},\n      {\n        deprecated:\n          \"octokit.rest.teams.checkPermissionsForProjectLegacy() is deprecated, see https://docs.github.com/rest/teams/teams#check-team-permissions-for-a-project-legacy\",\n      },\n    ],\n    checkPermissionsForRepoInOrg: [\n      \"GET /orgs/{org}/teams/{team_slug}/repos/{owner}/{repo}\",\n    ],\n    create: [\"POST /orgs/{org}/teams\"],\n    createDiscussionCommentInOrg: [\n      \"POST /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments\",\n    ],\n    createDiscussionInOrg: [\"POST /orgs/{org}/teams/{team_slug}/discussions\"],\n    deleteDiscussionCommentInOrg: [\n      \"DELETE /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}\",\n    ],\n    deleteDiscussionInOrg: [\n      \"DELETE /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}\",\n    ],\n    deleteInOrg: [\"DELETE /orgs/{org}/teams/{team_slug}\"],\n    getByName: [\"GET /orgs/{org}/teams/{team_slug}\"],\n    getDiscussionCommentInOrg: [\n      \"GET /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}\",\n    ],\n    getDiscussionInOrg: [\n      \"GET /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}\",\n    ],\n    getMembershipForUserInOrg: [\n      \"GET /orgs/{org}/teams/{team_slug}/memberships/{username}\",\n    ],\n    list: [\"GET /orgs/{org}/teams\"],\n    listChildInOrg: [\"GET /orgs/{org}/teams/{team_slug}/teams\"],\n    listDiscussionCommentsInOrg: [\n      \"GET /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments\",\n    ],\n    listDiscussionsInOrg: [\"GET /orgs/{org}/teams/{team_slug}/discussions\"],\n    listForAuthenticatedUser: [\"GET /user/teams\"],\n    listMembersInOrg: [\"GET /orgs/{org}/teams/{team_slug}/members\"],\n    listPendingInvitationsInOrg: [\n      \"GET /orgs/{org}/teams/{team_slug}/invitations\",\n    ],\n    listProjectsInOrg: [\n      \"GET /orgs/{org}/teams/{team_slug}/projects\",\n      {},\n      {\n        deprecated:\n          \"octokit.rest.teams.listProjectsInOrg() is deprecated, see https://docs.github.com/rest/teams/teams#list-team-projects\",\n      },\n    ],\n    listProjectsLegacy: [\n      \"GET /teams/{team_id}/projects\",\n      {},\n      {\n        deprecated:\n          \"octokit.rest.teams.listProjectsLegacy() is deprecated, see https://docs.github.com/rest/teams/teams#list-team-projects-legacy\",\n      },\n    ],\n    listReposInOrg: [\"GET /orgs/{org}/teams/{team_slug}/repos\"],\n    removeMembershipForUserInOrg: [\n      \"DELETE /orgs/{org}/teams/{team_slug}/memberships/{username}\",\n    ],\n    removeProjectInOrg: [\n      \"DELETE /orgs/{org}/teams/{team_slug}/projects/{project_id}\",\n      {},\n      {\n        deprecated:\n          \"octokit.rest.teams.removeProjectInOrg() is deprecated, see https://docs.github.com/rest/teams/teams#remove-a-project-from-a-team\",\n      },\n    ],\n    removeProjectLegacy: [\n      \"DELETE /teams/{team_id}/projects/{project_id}\",\n      {},\n      {\n        deprecated:\n          \"octokit.rest.teams.removeProjectLegacy() is deprecated, see https://docs.github.com/rest/teams/teams#remove-a-project-from-a-team-legacy\",\n      },\n    ],\n    removeRepoInOrg: [\n      \"DELETE /orgs/{org}/teams/{team_slug}/repos/{owner}/{repo}\",\n    ],\n    updateDiscussionCommentInOrg: [\n      \"PATCH /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}\",\n    ],\n    updateDiscussionInOrg: [\n      \"PATCH /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}\",\n    ],\n    updateInOrg: [\"PATCH /orgs/{org}/teams/{team_slug}\"],\n  },\n  users: {\n    addEmailForAuthenticated: [\n      \"POST /user/emails\",\n      {},\n      { renamed: [\"users\", \"addEmailForAuthenticatedUser\"] },\n    ],\n    addEmailForAuthenticatedUser: [\"POST /user/emails\"],\n    addSocialAccountForAuthenticatedUser: [\"POST /user/social_accounts\"],\n    block: [\"PUT /user/blocks/{username}\"],\n    checkBlocked: [\"GET /user/blocks/{username}\"],\n    checkFollowingForUser: [\"GET /users/{username}/following/{target_user}\"],\n    checkPersonIsFollowedByAuthenticated: [\"GET /user/following/{username}\"],\n    createGpgKeyForAuthenticated: [\n      \"POST /user/gpg_keys\",\n      {},\n      { renamed: [\"users\", \"createGpgKeyForAuthenticatedUser\"] },\n    ],\n    createGpgKeyForAuthenticatedUser: [\"POST /user/gpg_keys\"],\n    createPublicSshKeyForAuthenticated: [\n      \"POST /user/keys\",\n      {},\n      { renamed: [\"users\", \"createPublicSshKeyForAuthenticatedUser\"] },\n    ],\n    createPublicSshKeyForAuthenticatedUser: [\"POST /user/keys\"],\n    createSshSigningKeyForAuthenticatedUser: [\"POST /user/ssh_signing_keys\"],\n    deleteEmailForAuthenticated: [\n      \"DELETE /user/emails\",\n      {},\n      { renamed: [\"users\", \"deleteEmailForAuthenticatedUser\"] },\n    ],\n    deleteEmailForAuthenticatedUser: [\"DELETE /user/emails\"],\n    deleteGpgKeyForAuthenticated: [\n      \"DELETE /user/gpg_keys/{gpg_key_id}\",\n      {},\n      { renamed: [\"users\", \"deleteGpgKeyForAuthenticatedUser\"] },\n    ],\n    deleteGpgKeyForAuthenticatedUser: [\"DELETE /user/gpg_keys/{gpg_key_id}\"],\n    deletePublicSshKeyForAuthenticated: [\n      \"DELETE /user/keys/{key_id}\",\n      {},\n      { renamed: [\"users\", \"deletePublicSshKeyForAuthenticatedUser\"] },\n    ],\n    deletePublicSshKeyForAuthenticatedUser: [\"DELETE /user/keys/{key_id}\"],\n    deleteSocialAccountForAuthenticatedUser: [\"DELETE /user/social_accounts\"],\n    deleteSshSigningKeyForAuthenticatedUser: [\n      \"DELETE /user/ssh_signing_keys/{ssh_signing_key_id}\",\n    ],\n    follow: [\"PUT /user/following/{username}\"],\n    getAuthenticated: [\"GET /user\"],\n    getById: [\"GET /user/{account_id}\"],\n    getByUsername: [\"GET /users/{username}\"],\n    getContextForUser: [\"GET /users/{username}/hovercard\"],\n    getGpgKeyForAuthenticated: [\n      \"GET /user/gpg_keys/{gpg_key_id}\",\n      {},\n      { renamed: [\"users\", \"getGpgKeyForAuthenticatedUser\"] },\n    ],\n    getGpgKeyForAuthenticatedUser: [\"GET /user/gpg_keys/{gpg_key_id}\"],\n    getPublicSshKeyForAuthenticated: [\n      \"GET /user/keys/{key_id}\",\n      {},\n      { renamed: [\"users\", \"getPublicSshKeyForAuthenticatedUser\"] },\n    ],\n    getPublicSshKeyForAuthenticatedUser: [\"GET /user/keys/{key_id}\"],\n    getSshSigningKeyForAuthenticatedUser: [\n      \"GET /user/ssh_signing_keys/{ssh_signing_key_id}\",\n    ],\n    list: [\"GET /users\"],\n    listAttestations: [\"GET /users/{username}/attestations/{subject_digest}\"],\n    listBlockedByAuthenticated: [\n      \"GET /user/blocks\",\n      {},\n      { renamed: [\"users\", \"listBlockedByAuthenticatedUser\"] },\n    ],\n    listBlockedByAuthenticatedUser: [\"GET /user/blocks\"],\n    listEmailsForAuthenticated: [\n      \"GET /user/emails\",\n      {},\n      { renamed: [\"users\", \"listEmailsForAuthenticatedUser\"] },\n    ],\n    listEmailsForAuthenticatedUser: [\"GET /user/emails\"],\n    listFollowedByAuthenticated: [\n      \"GET /user/following\",\n      {},\n      { renamed: [\"users\", \"listFollowedByAuthenticatedUser\"] },\n    ],\n    listFollowedByAuthenticatedUser: [\"GET /user/following\"],\n    listFollowersForAuthenticatedUser: [\"GET /user/followers\"],\n    listFollowersForUser: [\"GET /users/{username}/followers\"],\n    listFollowingForUser: [\"GET /users/{username}/following\"],\n    listGpgKeysForAuthenticated: [\n      \"GET /user/gpg_keys\",\n      {},\n      { renamed: [\"users\", \"listGpgKeysForAuthenticatedUser\"] },\n    ],\n    listGpgKeysForAuthenticatedUser: [\"GET /user/gpg_keys\"],\n    listGpgKeysForUser: [\"GET /users/{username}/gpg_keys\"],\n    listPublicEmailsForAuthenticated: [\n      \"GET /user/public_emails\",\n      {},\n      { renamed: [\"users\", \"listPublicEmailsForAuthenticatedUser\"] },\n    ],\n    listPublicEmailsForAuthenticatedUser: [\"GET /user/public_emails\"],\n    listPublicKeysForUser: [\"GET /users/{username}/keys\"],\n    listPublicSshKeysForAuthenticated: [\n      \"GET /user/keys\",\n      {},\n      { renamed: [\"users\", \"listPublicSshKeysForAuthenticatedUser\"] },\n    ],\n    listPublicSshKeysForAuthenticatedUser: [\"GET /user/keys\"],\n    listSocialAccountsForAuthenticatedUser: [\"GET /user/social_accounts\"],\n    listSocialAccountsForUser: [\"GET /users/{username}/social_accounts\"],\n    listSshSigningKeysForAuthenticatedUser: [\"GET /user/ssh_signing_keys\"],\n    listSshSigningKeysForUser: [\"GET /users/{username}/ssh_signing_keys\"],\n    setPrimaryEmailVisibilityForAuthenticated: [\n      \"PATCH /user/email/visibility\",\n      {},\n      { renamed: [\"users\", \"setPrimaryEmailVisibilityForAuthenticatedUser\"] },\n    ],\n    setPrimaryEmailVisibilityForAuthenticatedUser: [\n      \"PATCH /user/email/visibility\",\n    ],\n    unblock: [\"DELETE /user/blocks/{username}\"],\n    unfollow: [\"DELETE /user/following/{username}\"],\n    updateAuthenticated: [\"PATCH /user\"],\n  },\n};\n\nexport default Endpoints;\n", "const VERSION = \"21.1.1\";\nexport {\n  VERSION\n};\n", "{\n  \"repositories\": [\n    {\n      \"name\": \"pcl-labs\",\n      \"owner\": \"paulchrisluke\",\n      \"type\": \"personal\",\n      \"enabled\": true,\n      \"description\": \"Main portfolio and blog site\",\n      \"tokenKey\": \"GITHUB_TOKEN_PAULCHRISLUKE\"\n    },\n    {\n      \"name\": \"preact-cloudflare-intake-chatbot\",\n      \"owner\": \"Blawby\",\n      \"type\": \"organization\",\n      \"enabled\": true,\n      \"description\": \"Legal intake chatbot using Cloudflare Workers AI\",\n      \"tokenKey\": \"GITHUB_TOKEN_BLAWBY\"\n    }\n  ],\n  \"settings\": {\n    \"lookbackHours\": 24,\n    \"maxCommitsPerRepo\": 50,\n    \"maxPRsPerRepo\": 20,\n    \"includeIssues\": true,\n    \"includeReleases\": true,\n    \"filterPatterns\": {\n      \"includeBranches\": [\"main\", \"staging\", \"develop\"],\n      \"excludePatterns\": [\"^dependabot/\", \"^renovate/\", \"^chore/\", \"^docs/\"]\n    }\n  }\n}\n", "import type { Middleware } from \"./common\";\n\nconst drainBody: Middleware = async (request, env, _ctx, middlewareCtx) => {\n\ttry {\n\t\treturn await middlewareCtx.next(request, env);\n\t} finally {\n\t\ttry {\n\t\t\tif (request.body !== null && !request.bodyUsed) {\n\t\t\t\tconst reader = request.body.getReader();\n\t\t\t\twhile (!(await reader.read()).done) {}\n\t\t\t}\n\t\t} catch (e) {\n\t\t\tconsole.error(\"Failed to drain the unused request body.\", e);\n\t\t}\n\t}\n};\n\nexport default drainBody;\n", "import type { Middleware } from \"./common\";\n\ninterface JsonError {\n\tmessage?: string;\n\tname?: string;\n\tstack?: string;\n\tcause?: JsonError;\n}\n\nfunction reduceError(e: any): JsonError {\n\treturn {\n\t\tname: e?.name,\n\t\tmessage: e?.message ?? String(e),\n\t\tstack: e?.stack,\n\t\tcause: e?.cause === undefined ? undefined : reduceError(e.cause),\n\t};\n}\n\n// See comment in `bundle.ts` for details on why this is needed\nconst jsonError: Middleware = async (request, env, _ctx, middlewareCtx) => {\n\ttry {\n\t\treturn await middlewareCtx.next(request, env);\n\t} catch (e: any) {\n\t\tconst error = reduceError(e);\n\t\treturn Response.json(error, {\n\t\t\tstatus: 500,\n\t\t\theaders: { \"MF-Experimental-Error-Stack\": \"true\" },\n\t\t});\n\t}\n};\n\nexport default jsonError;\n", "export type Awaitable<T> = T | Promise<T>;\n// TODO: allow dispatching more events?\nexport type Dispatcher = (\n\ttype: \"scheduled\",\n\tinit: { cron?: string }\n) => Awaitable<void>;\n\nexport type IncomingRequest = Request<\n\tunknown,\n\tIncomingRequestCfProperties<unknown>\n>;\n\nexport interface MiddlewareContext {\n\tdispatch: Dispatcher;\n\tnext(request: IncomingRequest, env: any): Awaitable<Response>;\n}\n\nexport type Middleware = (\n\trequest: IncomingRequest,\n\tenv: any,\n\tctx: ExecutionContext,\n\tmiddlewareCtx: MiddlewareContext\n) => Awaitable<Response>;\n\nconst __facade_middleware__: Middleware[] = [];\n\n// The register functions allow for the insertion of one or many middleware,\n// We register internal middleware first in the stack, but have no way of controlling\n// the order that addMiddleware is run in service workers so need an internal function.\nexport function __facade_register__(...args: (Middleware | Middleware[])[]) {\n\t__facade_middleware__.push(...args.flat());\n}\nexport function __facade_registerInternal__(\n\t...args: (Middleware | Middleware[])[]\n) {\n\t__facade_middleware__.unshift(...args.flat());\n}\n\nfunction __facade_invokeChain__(\n\trequest: IncomingRequest,\n\tenv: any,\n\tctx: ExecutionContext,\n\tdispatch: Dispatcher,\n\tmiddlewareChain: Middleware[]\n): Awaitable<Response> {\n\tconst [head, ...tail] = middlewareChain;\n\tconst middlewareCtx: MiddlewareContext = {\n\t\tdispatch,\n\t\tnext(newRequest, newEnv) {\n\t\t\treturn __facade_invokeChain__(newRequest, newEnv, ctx, dispatch, tail);\n\t\t},\n\t};\n\treturn head(request, env, ctx, middlewareCtx);\n}\n\nexport function __facade_invoke__(\n\trequest: IncomingRequest,\n\tenv: any,\n\tctx: ExecutionContext,\n\tdispatch: Dispatcher,\n\tfinalMiddleware: Middleware\n): Awaitable<Response> {\n\treturn __facade_invokeChain__(request, env, ctx, dispatch, [\n\t\t...__facade_middleware__,\n\t\tfinalMiddleware,\n\t]);\n}\n"],
  "mappings": "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CAAC,oDAAoD;IACjE,cAAc;MACZ;IACF;IACA,kBAAkB,CAAC,sDAAsD;IACzE,cAAc;MACZ;IACF;IACA,gBAAgB;MACd;IACF;IACA,sBAAsB;MACpB;IACF;IACA,QAAQ,CAAC,uDAAuD;EAClE;EACA,cAAc;IACZ,eAAe;MACb;IACF;IACA,eAAe;MACb;IACF;IACA,uBAAuB;MACrB;IACF;IACA,gBAAgB;MACd;IACF;IACA,sBAAsB;MACpB;IACF;IACA,UAAU;MACR;MACA,CAAC;MACD,EAAE,mBAAmB,EAAE,UAAU,eAAe,EAAE;IACpD;IACA,aAAa;MACX;IACF;IACA,YAAY;MACV;IACF;IACA,mBAAmB;MACjB;IACF;IACA,iBAAiB,CAAC,uDAAuD;IACzE,UAAU,CAAC,2DAA2D;IACtE,oBAAoB;MAClB;IACF;IACA,4BAA4B;MAC1B;IACF;IACA,oBAAoB;MAClB;IACF;IACA,kBAAkB,CAAC,sCAAsC;IACzD,mBAAmB,CAAC,gDAAgD;IACpE,qBAAqB;MACnB;MACA,CAAC;MACD,EAAE,SAAS,CAAC,gBAAgB,oBAAoB,EAAE;IACpD;IACA,qBAAqB;MACnB;IACF;IACA,oBAAoB,CAAC,kDAAkD;IACvE,aAAa;MACX;IACF;IACA,oBAAoB;MAClB;IACF;IACA,aAAa,CAAC,iDAAiD;EACjE;EACA,cAAc;IACZ,qBAAqB;MACnB;IACF;IACA,+BAA+B;MAC7B;IACF;IACA,qBAAqB,CAAC,+CAA+C;IACrE,kCAAkC;MAChC;IACF;IACA,qBAAqB;MACnB;IACF;IACA,kCAAkC;MAChC;IACF;IACA,qBAAqB;MACnB;IACF;IACA,kBAAkB;MAChB;IACF;IACA,+BAA+B;MAC7B;IACF;IACA,gCAAgC;MAC9B;IACF;IACA,yBAAyB,CAAC,8CAA8C;IACxE,0BAA0B;MACxB;IACF;IACA,uCAAuC;MACrC;IACF;IACA,iCAAiC;MAC/B;IACF;IACA,2CAA2C;MACzC;IACF;IACA,qCAAqC;MACnC;IACF;IACA,2BAA2B;MACzB;IACF;IACA,wCAAwC;MACtC;IACF;IACA,qBAAqB;M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AAY;MACV;MACA,CAAC;MACD;QACE,YACE;MACJ;IACF;IACA,cAAc;MACZ;MACA,CAAC;MACD;QACE,YACE;MACJ;IACF;IACA,4BAA4B;MAC1B;MACA,CAAC;MACD;QACE,YACE;MACJ;IACF;IACA,cAAc;MACZ;MACA,CAAC;MACD;QACE,YACE;MACJ;IACF;IACA,eAAe;MACb;MACA,CAAC;MACD;QACE,YACE;MACJ;IACF;IACA,QAAQ;MACN;MACA,CAAC;MACD;QACE,YACE;MACJ;IACF;IACA,YAAY;MACV;MACA,CAAC;MACD;QACE,YACE;MACJ;IACF;IACA,cAAc;MACZ;MACA,CAAC;MACD;QACE,YACE;MACJ;IACF;IACA,KAAK;MACH;MACA,CAAC;MACD;QACE,YACE;MACJ;IACF;IACA,SAAS;MACP;MACA,CAAC;MACD;QACE,YACE;MACJ;IACF;IACA,WAAW;MACT;MACA,CAAC;MACD;QACE,YACE;MACJ;IACF;IACA,sBAAsB;MACpB;MACA,CAAC;MACD;QACE,YACE;MACJ;IACF;IACA,WAAW;MACT;MACA,CAAC;MACD;QACE,YACE;MACJ;IACF;IACA,mBAAmB;MACjB;MACA,CAAC;MACD;QACE,YACE;MACJ;IACF;IACA,aAAa;MACX;MACA,CAAC;MACD;QACE,YACE;MACJ;IACF;IACA,YAAY;MACV;MACA,CAAC;MACD;QACE,YACE;MACJ;IACF;IACA,aAAa;MACX;MACA,CAAC;MACD;QACE,YACE;MACJ;IACF;IACA,aAAa;MACX;MACA,CAAC;MACD;QACE,YACE;MACJ;IACF;IACA,UAAU;MACR;MACA,CAAC;MACD;QACE,YACE;MACJ;IACF;IACA,YAAY;MACV;MACA,CAAC;MACD;QACE,YACE;MACJ;IACF;IACA,oBAAoB;MAClB;MACA,CAAC;MACD;QACE,YACE;MACJ;IACF;IACA,QAAQ;MACN;MACA,CAAC;MACD;QACE,YACE;MACJ;IACF;IACA,YAAY;MACV;MACA,CAAC;MACD;QACE,YACE;MACJ;IACF;IACA,cAAc;MACZ;MACA,CAAC;MACD;QACE,YACE;MACJ;IACF;EACF;EACA,OAAO;IACL,eAAe,CAAC,qDAAqD;IACrE,QAAQ,CAAC,kCAAkC;IAC3C,6BAA6B;MAC3B;IACF;IACA,cAAc,CAAC,wDAAwD;IACvE,qBAAqB;MACnB;IACF;IACA,qBAAqB;MACnB;IACF;IACA,qBAAqB;MACnB;IACF;IACA,eAAe;MACb;IACF;IACA,KAAK,CAAC,+CAA+C;IACrD,WAAW;MACT;IACF;IACA,kBAAkB,CAAC,uDAAuD;IAC1E,MAAM,CAAC,iCAAiC;IACxC,uBAAuB;MACrB;IACF;IACA,aAAa,CAAC,uDAAuD;IACrE,WAAW,CAAC,qDAAqD;IACjE,wBAAwB;MACtB;IACF;IACA,oBAAoB;MAClB;IACF;IACA,2BAA2B,CAAC,0CAA0C;IACtE,aAAa,CAAC,uDAAuD;IACrE,OAAO,CAAC,qDAAqD;IAC7D,0BAA0B;MACxB;IACF;IACA,kBAAkB;MAChB;IACF;IACA,cAAc;MACZ;IACF;IACA,QAAQ,CAAC,iDAAiD;IAC1D,cAAc;MACZ;IACF;IACA,cAAc;MACZ;IACF;IACA,qBAAqB;MACnB;IACF;EACF;EACA,WAAW,EAAE,KAAK,CAAC,iBAAiB,EAAE;EACtC,WAAW;IACT,wBAAwB;MACtB;IACF;IACA,gBAAgB;MACd;IACF;IACA,uBAAuB;MACrB;IACF;IACA,mCAAmC;MACjC;IACF;IACA,kBAAkB;MAChB;IACF;IACA,qCAAqC;MACnC;IACF;IACA,8BAA8B;MAC5B;IACF;IACA,wBAAwB;MACtB;IACF;IACA,gBAAgB;MACd;IACF;IACA,uBAAuB;MACrB;IACF;IACA,6BAA6B;MAC3B;IACF;IACA,kBAAkB;MAChB;IACF;IACA,yBAAyB;MACvB;IACF;IACA,gCAAgC;MAC9B;IACF;IACA,sBAAsB;MACpB;IACF;IACA,cAAc,CAAC,2DAA2D;IAC1E,qBAAqB;MACnB;IACF;IACA,iCAAiC;MAC/B;IACF;IACA,gBAAgB;MACd;IACF;IACA,mCAAmC;MACjC;IACF;IACA,4BAA4B;MAC1B;IACF;EACF;EACA,OAAO;IACL,kBAAkB;MAChB;MAC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",
  "names": ["request", "request", "NullObject", "parse", "safeParse", "g", "BufferCtor", "request", "name", "method", "hook", "hook", "VERSION", "isPlainObject", "fetch", "withDefaults", "VERSION", "withDefaults", "request", "endpoint", "VERSION", "VERSION", "hook", "auth", "VERSION", "request", "VERSION", "VERSION", "VERSION", "VERSION", "endpoint", "options", "VERSION", "VERSION", "Octokit", "VERSION", "Octokit", "request", "request", "validateData", "TwitchService", "request", "request", "request", "request"]
}
